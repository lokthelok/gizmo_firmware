

Microchip Technology PIC PRO Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Dec 16 11:01:12 2018

Microchip Technology Omniscient Code Generator v2.00 (PRO mode) build 20180527130849
     1                           	processor	12LF1572
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	text41,local,class=CODE,merge=1,delta=2
    55                           	psect	text42,local,class=CODE,merge=1,delta=2
    56                           	psect	text43,local,class=CODE,merge=1,delta=2
    57                           	psect	text44,local,class=CODE,merge=1,delta=2
    58                           	psect	text45,local,class=CODE,merge=1,delta=2
    59                           	psect	text46,local,class=CODE,merge=1,delta=2
    60                           	psect	text47,local,class=CODE,merge=1,delta=2
    61                           	psect	text48,local,class=CODE,merge=1,delta=2
    62                           	psect	text49,local,class=CODE,merge=1,delta=2
    63                           	psect	text50,local,class=CODE,merge=1,delta=2
    64                           	psect	text51,local,class=CODE,merge=1,delta=2
    65                           	psect	text52,local,class=CODE,merge=1,delta=2
    66                           	psect	text53,local,class=CODE,merge=1,delta=2
    67                           	psect	intentry,global,class=CODE,delta=2
    68                           	psect	text55,local,class=CODE,merge=1,delta=2
    69                           	psect	text56,local,class=CODE,merge=1,delta=2
    70                           	psect	text57,local,class=CODE,merge=1,delta=2
    71                           	psect	text58,local,class=CODE,merge=1,delta=2
    72                           	psect	text59,local,class=CODE,merge=1,delta=2
    73                           	psect	text60,local,class=CODE,merge=1,delta=2
    74                           	psect	text61,local,class=CODE,merge=1,delta=2
    75                           	psect	text62,local,class=CODE,merge=1,delta=2
    76                           	psect	text63,local,class=CODE,merge=1,delta=2
    77                           	psect	text64,local,class=CODE,merge=1,delta=2
    78                           	psect	text65,local,class=CODE,merge=1,delta=2
    79                           	psect	text66,local,class=CODE,merge=1,delta=2
    80                           	psect	text67,local,class=CODE,merge=1,delta=2
    81                           	psect	text68,local,class=CODE,merge=1,delta=2
    82                           	psect	text69,local,class=CODE,merge=1,delta=2
    83                           	psect	text70,local,class=CODE,merge=1,delta=2
    84                           	psect	text71,local,class=CODE,merge=1,delta=2
    85                           	psect	text72,local,class=CODE,merge=1,delta=2
    86                           	psect	text73,local,class=CODE,merge=1,delta=2
    87                           	psect	text74,local,class=CODE,merge=1,delta=2
    88                           	psect	text75,local,class=CODE,merge=1,delta=2
    89                           	psect	text76,local,class=CODE,merge=1,delta=2
    90                           	psect	text77,local,class=CODE,merge=1,delta=2
    91                           	psect	text78,local,class=CODE,merge=1,delta=2
    92                           	psect	text79,local,class=CODE,merge=1,delta=2
    93                           	psect	text80,local,class=CODE,merge=1,delta=2
    94                           	psect	text81,local,class=CODE,merge=1,delta=2
    95                           	psect	pa_nodes0,global,class=CODE,delta=2
    96                           	dabs	1,0x120,80
    97                           	dabs	1,0xDC,20
    98                           	dabs	1,0x208C,0,_moves
    99                           	dabs	1,0x7E,2
   100  0000                     
   101                           ; Version 2.00
   102                           ; Generated 27/05/2018 GMT
   103                           ; 
   104                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC12LF1572 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  008C                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0095                     	;# 
   165  0096                     	;# 
   166  0097                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009A                     	;# 
   170  009B                     	;# 
   171  009B                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  009F                     	;# 
   176  010C                     	;# 
   177  0111                     	;# 
   178  0112                     	;# 
   179  0115                     	;# 
   180  0116                     	;# 
   181  0117                     	;# 
   182  0118                     	;# 
   183  0119                     	;# 
   184  011D                     	;# 
   185  011D                     	;# 
   186  018C                     	;# 
   187  0191                     	;# 
   188  0191                     	;# 
   189  0192                     	;# 
   190  0193                     	;# 
   191  0193                     	;# 
   192  0194                     	;# 
   193  0195                     	;# 
   194  0196                     	;# 
   195  0199                     	;# 
   196  019A                     	;# 
   197  019B                     	;# 
   198  019B                     	;# 
   199  019C                     	;# 
   200  019D                     	;# 
   201  019E                     	;# 
   202  019F                     	;# 
   203  020C                     	;# 
   204  028C                     	;# 
   205  030C                     	;# 
   206  038C                     	;# 
   207  0391                     	;# 
   208  0392                     	;# 
   209  0393                     	;# 
   210  0691                     	;# 
   211  0692                     	;# 
   212  0693                     	;# 
   213  0694                     	;# 
   214  0695                     	;# 
   215  0D8E                     	;# 
   216  0D8F                     	;# 
   217  0D90                     	;# 
   218  0D91                     	;# 
   219  0D91                     	;# 
   220  0D92                     	;# 
   221  0D93                     	;# 
   222  0D93                     	;# 
   223  0D94                     	;# 
   224  0D95                     	;# 
   225  0D95                     	;# 
   226  0D96                     	;# 
   227  0D97                     	;# 
   228  0D97                     	;# 
   229  0D98                     	;# 
   230  0D99                     	;# 
   231  0D99                     	;# 
   232  0D9A                     	;# 
   233  0D9B                     	;# 
   234  0D9C                     	;# 
   235  0D9C                     	;# 
   236  0D9D                     	;# 
   237  0D9D                     	;# 
   238  0D9E                     	;# 
   239  0D9F                     	;# 
   240  0DA0                     	;# 
   241  0DA1                     	;# 
   242  0DA1                     	;# 
   243  0DA2                     	;# 
   244  0DA3                     	;# 
   245  0DA3                     	;# 
   246  0DA4                     	;# 
   247  0DA5                     	;# 
   248  0DA5                     	;# 
   249  0DA6                     	;# 
   250  0DA7                     	;# 
   251  0DA7                     	;# 
   252  0DA8                     	;# 
   253  0DA9                     	;# 
   254  0DA9                     	;# 
   255  0DAA                     	;# 
   256  0DAB                     	;# 
   257  0DAC                     	;# 
   258  0DAC                     	;# 
   259  0DAD                     	;# 
   260  0DAD                     	;# 
   261  0DAE                     	;# 
   262  0DAF                     	;# 
   263  0DB0                     	;# 
   264  0DB1                     	;# 
   265  0DB1                     	;# 
   266  0DB2                     	;# 
   267  0DB3                     	;# 
   268  0DB3                     	;# 
   269  0DB4                     	;# 
   270  0DB5                     	;# 
   271  0DB5                     	;# 
   272  0DB6                     	;# 
   273  0DB7                     	;# 
   274  0DB7                     	;# 
   275  0DB8                     	;# 
   276  0DB9                     	;# 
   277  0DB9                     	;# 
   278  0DBA                     	;# 
   279  0DBB                     	;# 
   280  0DBC                     	;# 
   281  0DBC                     	;# 
   282  0DBD                     	;# 
   283  0DBD                     	;# 
   284  0DBE                     	;# 
   285  0DBF                     	;# 
   286  0DC0                     	;# 
   287  0FE4                     	;# 
   288  0FE5                     	;# 
   289  0FE6                     	;# 
   290  0FE7                     	;# 
   291  0FE8                     	;# 
   292  0FE8                     	;# 
   293  0FE9                     	;# 
   294  0FEA                     	;# 
   295  0FEA                     	;# 
   296  0FEB                     	;# 
   297  0FED                     	;# 
   298  0FEE                     	;# 
   299  0FEE                     	;# 
   300  0FEF                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  008C                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0093                     	;# 
   330  0095                     	;# 
   331  0096                     	;# 
   332  0097                     	;# 
   333  0098                     	;# 
   334  0099                     	;# 
   335  009A                     	;# 
   336  009B                     	;# 
   337  009B                     	;# 
   338  009C                     	;# 
   339  009D                     	;# 
   340  009E                     	;# 
   341  009F                     	;# 
   342  010C                     	;# 
   343  0111                     	;# 
   344  0112                     	;# 
   345  0115                     	;# 
   346  0116                     	;# 
   347  0117                     	;# 
   348  0118                     	;# 
   349  0119                     	;# 
   350  011D                     	;# 
   351  011D                     	;# 
   352  018C                     	;# 
   353  0191                     	;# 
   354  0191                     	;# 
   355  0192                     	;# 
   356  0193                     	;# 
   357  0193                     	;# 
   358  0194                     	;# 
   359  0195                     	;# 
   360  0196                     	;# 
   361  0199                     	;# 
   362  019A                     	;# 
   363  019B                     	;# 
   364  019B                     	;# 
   365  019C                     	;# 
   366  019D                     	;# 
   367  019E                     	;# 
   368  019F                     	;# 
   369  020C                     	;# 
   370  028C                     	;# 
   371  030C                     	;# 
   372  038C                     	;# 
   373  0391                     	;# 
   374  0392                     	;# 
   375  0393                     	;# 
   376  0691                     	;# 
   377  0692                     	;# 
   378  0693                     	;# 
   379  0694                     	;# 
   380  0695                     	;# 
   381  0D8E                     	;# 
   382  0D8F                     	;# 
   383  0D90                     	;# 
   384  0D91                     	;# 
   385  0D91                     	;# 
   386  0D92                     	;# 
   387  0D93                     	;# 
   388  0D93                     	;# 
   389  0D94                     	;# 
   390  0D95                     	;# 
   391  0D95                     	;# 
   392  0D96                     	;# 
   393  0D97                     	;# 
   394  0D97                     	;# 
   395  0D98                     	;# 
   396  0D99                     	;# 
   397  0D99                     	;# 
   398  0D9A                     	;# 
   399  0D9B                     	;# 
   400  0D9C                     	;# 
   401  0D9C                     	;# 
   402  0D9D                     	;# 
   403  0D9D                     	;# 
   404  0D9E                     	;# 
   405  0D9F                     	;# 
   406  0DA0                     	;# 
   407  0DA1                     	;# 
   408  0DA1                     	;# 
   409  0DA2                     	;# 
   410  0DA3                     	;# 
   411  0DA3                     	;# 
   412  0DA4                     	;# 
   413  0DA5                     	;# 
   414  0DA5                     	;# 
   415  0DA6                     	;# 
   416  0DA7                     	;# 
   417  0DA7                     	;# 
   418  0DA8                     	;# 
   419  0DA9                     	;# 
   420  0DA9                     	;# 
   421  0DAA                     	;# 
   422  0DAB                     	;# 
   423  0DAC                     	;# 
   424  0DAC                     	;# 
   425  0DAD                     	;# 
   426  0DAD                     	;# 
   427  0DAE                     	;# 
   428  0DAF                     	;# 
   429  0DB0                     	;# 
   430  0DB1                     	;# 
   431  0DB1                     	;# 
   432  0DB2                     	;# 
   433  0DB3                     	;# 
   434  0DB3                     	;# 
   435  0DB4                     	;# 
   436  0DB5                     	;# 
   437  0DB5                     	;# 
   438  0DB6                     	;# 
   439  0DB7                     	;# 
   440  0DB7                     	;# 
   441  0DB8                     	;# 
   442  0DB9                     	;# 
   443  0DB9                     	;# 
   444  0DBA                     	;# 
   445  0DBB                     	;# 
   446  0DBC                     	;# 
   447  0DBC                     	;# 
   448  0DBD                     	;# 
   449  0DBD                     	;# 
   450  0DBE                     	;# 
   451  0DBF                     	;# 
   452  0DC0                     	;# 
   453  0FE4                     	;# 
   454  0FE5                     	;# 
   455  0FE6                     	;# 
   456  0FE7                     	;# 
   457  0FE8                     	;# 
   458  0FE8                     	;# 
   459  0FE9                     	;# 
   460  0FEA                     	;# 
   461  0FEA                     	;# 
   462  0FEB                     	;# 
   463  0FED                     	;# 
   464  0FEE                     	;# 
   465  0FEE                     	;# 
   466  0FEF                     	;# 
   467  0000                     	;# 
   468  0001                     	;# 
   469  0002                     	;# 
   470  0003                     	;# 
   471  0004                     	;# 
   472  0005                     	;# 
   473  0006                     	;# 
   474  0007                     	;# 
   475  0008                     	;# 
   476  0009                     	;# 
   477  000A                     	;# 
   478  000B                     	;# 
   479  000C                     	;# 
   480  0011                     	;# 
   481  0012                     	;# 
   482  0013                     	;# 
   483  0015                     	;# 
   484  0016                     	;# 
   485  0016                     	;# 
   486  0017                     	;# 
   487  0018                     	;# 
   488  0019                     	;# 
   489  001A                     	;# 
   490  001B                     	;# 
   491  001C                     	;# 
   492  008C                     	;# 
   493  0091                     	;# 
   494  0092                     	;# 
   495  0093                     	;# 
   496  0095                     	;# 
   497  0096                     	;# 
   498  0097                     	;# 
   499  0098                     	;# 
   500  0099                     	;# 
   501  009A                     	;# 
   502  009B                     	;# 
   503  009B                     	;# 
   504  009C                     	;# 
   505  009D                     	;# 
   506  009E                     	;# 
   507  009F                     	;# 
   508  010C                     	;# 
   509  0111                     	;# 
   510  0112                     	;# 
   511  0115                     	;# 
   512  0116                     	;# 
   513  0117                     	;# 
   514  0118                     	;# 
   515  0119                     	;# 
   516  011D                     	;# 
   517  011D                     	;# 
   518  018C                     	;# 
   519  0191                     	;# 
   520  0191                     	;# 
   521  0192                     	;# 
   522  0193                     	;# 
   523  0193                     	;# 
   524  0194                     	;# 
   525  0195                     	;# 
   526  0196                     	;# 
   527  0199                     	;# 
   528  019A                     	;# 
   529  019B                     	;# 
   530  019B                     	;# 
   531  019C                     	;# 
   532  019D                     	;# 
   533  019E                     	;# 
   534  019F                     	;# 
   535  020C                     	;# 
   536  028C                     	;# 
   537  030C                     	;# 
   538  038C                     	;# 
   539  0391                     	;# 
   540  0392                     	;# 
   541  0393                     	;# 
   542  0691                     	;# 
   543  0692                     	;# 
   544  0693                     	;# 
   545  0694                     	;# 
   546  0695                     	;# 
   547  0D8E                     	;# 
   548  0D8F                     	;# 
   549  0D90                     	;# 
   550  0D91                     	;# 
   551  0D91                     	;# 
   552  0D92                     	;# 
   553  0D93                     	;# 
   554  0D93                     	;# 
   555  0D94                     	;# 
   556  0D95                     	;# 
   557  0D95                     	;# 
   558  0D96                     	;# 
   559  0D97                     	;# 
   560  0D97                     	;# 
   561  0D98                     	;# 
   562  0D99                     	;# 
   563  0D99                     	;# 
   564  0D9A                     	;# 
   565  0D9B                     	;# 
   566  0D9C                     	;# 
   567  0D9C                     	;# 
   568  0D9D                     	;# 
   569  0D9D                     	;# 
   570  0D9E                     	;# 
   571  0D9F                     	;# 
   572  0DA0                     	;# 
   573  0DA1                     	;# 
   574  0DA1                     	;# 
   575  0DA2                     	;# 
   576  0DA3                     	;# 
   577  0DA3                     	;# 
   578  0DA4                     	;# 
   579  0DA5                     	;# 
   580  0DA5                     	;# 
   581  0DA6                     	;# 
   582  0DA7                     	;# 
   583  0DA7                     	;# 
   584  0DA8                     	;# 
   585  0DA9                     	;# 
   586  0DA9                     	;# 
   587  0DAA                     	;# 
   588  0DAB                     	;# 
   589  0DAC                     	;# 
   590  0DAC                     	;# 
   591  0DAD                     	;# 
   592  0DAD                     	;# 
   593  0DAE                     	;# 
   594  0DAF                     	;# 
   595  0DB0                     	;# 
   596  0DB1                     	;# 
   597  0DB1                     	;# 
   598  0DB2                     	;# 
   599  0DB3                     	;# 
   600  0DB3                     	;# 
   601  0DB4                     	;# 
   602  0DB5                     	;# 
   603  0DB5                     	;# 
   604  0DB6                     	;# 
   605  0DB7                     	;# 
   606  0DB7                     	;# 
   607  0DB8                     	;# 
   608  0DB9                     	;# 
   609  0DB9                     	;# 
   610  0DBA                     	;# 
   611  0DBB                     	;# 
   612  0DBC                     	;# 
   613  0DBC                     	;# 
   614  0DBD                     	;# 
   615  0DBD                     	;# 
   616  0DBE                     	;# 
   617  0DBF                     	;# 
   618  0DC0                     	;# 
   619  0FE4                     	;# 
   620  0FE5                     	;# 
   621  0FE6                     	;# 
   622  0FE7                     	;# 
   623  0FE8                     	;# 
   624  0FE8                     	;# 
   625  0FE9                     	;# 
   626  0FEA                     	;# 
   627  0FEA                     	;# 
   628  0FEB                     	;# 
   629  0FED                     	;# 
   630  0FEE                     	;# 
   631  0FEE                     	;# 
   632  0FEF                     	;# 
   633  0000                     	;# 
   634  0001                     	;# 
   635  0002                     	;# 
   636  0003                     	;# 
   637  0004                     	;# 
   638  0005                     	;# 
   639  0006                     	;# 
   640  0007                     	;# 
   641  0008                     	;# 
   642  0009                     	;# 
   643  000A                     	;# 
   644  000B                     	;# 
   645  000C                     	;# 
   646  0011                     	;# 
   647  0012                     	;# 
   648  0013                     	;# 
   649  0015                     	;# 
   650  0016                     	;# 
   651  0016                     	;# 
   652  0017                     	;# 
   653  0018                     	;# 
   654  0019                     	;# 
   655  001A                     	;# 
   656  001B                     	;# 
   657  001C                     	;# 
   658  008C                     	;# 
   659  0091                     	;# 
   660  0092                     	;# 
   661  0093                     	;# 
   662  0095                     	;# 
   663  0096                     	;# 
   664  0097                     	;# 
   665  0098                     	;# 
   666  0099                     	;# 
   667  009A                     	;# 
   668  009B                     	;# 
   669  009B                     	;# 
   670  009C                     	;# 
   671  009D                     	;# 
   672  009E                     	;# 
   673  009F                     	;# 
   674  010C                     	;# 
   675  0111                     	;# 
   676  0112                     	;# 
   677  0115                     	;# 
   678  0116                     	;# 
   679  0117                     	;# 
   680  0118                     	;# 
   681  0119                     	;# 
   682  011D                     	;# 
   683  011D                     	;# 
   684  018C                     	;# 
   685  0191                     	;# 
   686  0191                     	;# 
   687  0192                     	;# 
   688  0193                     	;# 
   689  0193                     	;# 
   690  0194                     	;# 
   691  0195                     	;# 
   692  0196                     	;# 
   693  0199                     	;# 
   694  019A                     	;# 
   695  019B                     	;# 
   696  019B                     	;# 
   697  019C                     	;# 
   698  019D                     	;# 
   699  019E                     	;# 
   700  019F                     	;# 
   701  020C                     	;# 
   702  028C                     	;# 
   703  030C                     	;# 
   704  038C                     	;# 
   705  0391                     	;# 
   706  0392                     	;# 
   707  0393                     	;# 
   708  0691                     	;# 
   709  0692                     	;# 
   710  0693                     	;# 
   711  0694                     	;# 
   712  0695                     	;# 
   713  0D8E                     	;# 
   714  0D8F                     	;# 
   715  0D90                     	;# 
   716  0D91                     	;# 
   717  0D91                     	;# 
   718  0D92                     	;# 
   719  0D93                     	;# 
   720  0D93                     	;# 
   721  0D94                     	;# 
   722  0D95                     	;# 
   723  0D95                     	;# 
   724  0D96                     	;# 
   725  0D97                     	;# 
   726  0D97                     	;# 
   727  0D98                     	;# 
   728  0D99                     	;# 
   729  0D99                     	;# 
   730  0D9A                     	;# 
   731  0D9B                     	;# 
   732  0D9C                     	;# 
   733  0D9C                     	;# 
   734  0D9D                     	;# 
   735  0D9D                     	;# 
   736  0D9E                     	;# 
   737  0D9F                     	;# 
   738  0DA0                     	;# 
   739  0DA1                     	;# 
   740  0DA1                     	;# 
   741  0DA2                     	;# 
   742  0DA3                     	;# 
   743  0DA3                     	;# 
   744  0DA4                     	;# 
   745  0DA5                     	;# 
   746  0DA5                     	;# 
   747  0DA6                     	;# 
   748  0DA7                     	;# 
   749  0DA7                     	;# 
   750  0DA8                     	;# 
   751  0DA9                     	;# 
   752  0DA9                     	;# 
   753  0DAA                     	;# 
   754  0DAB                     	;# 
   755  0DAC                     	;# 
   756  0DAC                     	;# 
   757  0DAD                     	;# 
   758  0DAD                     	;# 
   759  0DAE                     	;# 
   760  0DAF                     	;# 
   761  0DB0                     	;# 
   762  0DB1                     	;# 
   763  0DB1                     	;# 
   764  0DB2                     	;# 
   765  0DB3                     	;# 
   766  0DB3                     	;# 
   767  0DB4                     	;# 
   768  0DB5                     	;# 
   769  0DB5                     	;# 
   770  0DB6                     	;# 
   771  0DB7                     	;# 
   772  0DB7                     	;# 
   773  0DB8                     	;# 
   774  0DB9                     	;# 
   775  0DB9                     	;# 
   776  0DBA                     	;# 
   777  0DBB                     	;# 
   778  0DBC                     	;# 
   779  0DBC                     	;# 
   780  0DBD                     	;# 
   781  0DBD                     	;# 
   782  0DBE                     	;# 
   783  0DBF                     	;# 
   784  0DC0                     	;# 
   785  0FE4                     	;# 
   786  0FE5                     	;# 
   787  0FE6                     	;# 
   788  0FE7                     	;# 
   789  0FE8                     	;# 
   790  0FE8                     	;# 
   791  0FE9                     	;# 
   792  0FEA                     	;# 
   793  0FEA                     	;# 
   794  0FEB                     	;# 
   795  0FED                     	;# 
   796  0FEE                     	;# 
   797  0FEE                     	;# 
   798  0FEF                     	;# 
   799  0000                     	;# 
   800  0001                     	;# 
   801  0002                     	;# 
   802  0003                     	;# 
   803  0004                     	;# 
   804  0005                     	;# 
   805  0006                     	;# 
   806  0007                     	;# 
   807  0008                     	;# 
   808  0009                     	;# 
   809  000A                     	;# 
   810  000B                     	;# 
   811  000C                     	;# 
   812  0011                     	;# 
   813  0012                     	;# 
   814  0013                     	;# 
   815  0015                     	;# 
   816  0016                     	;# 
   817  0016                     	;# 
   818  0017                     	;# 
   819  0018                     	;# 
   820  0019                     	;# 
   821  001A                     	;# 
   822  001B                     	;# 
   823  001C                     	;# 
   824  008C                     	;# 
   825  0091                     	;# 
   826  0092                     	;# 
   827  0093                     	;# 
   828  0095                     	;# 
   829  0096                     	;# 
   830  0097                     	;# 
   831  0098                     	;# 
   832  0099                     	;# 
   833  009A                     	;# 
   834  009B                     	;# 
   835  009B                     	;# 
   836  009C                     	;# 
   837  009D                     	;# 
   838  009E                     	;# 
   839  009F                     	;# 
   840  010C                     	;# 
   841  0111                     	;# 
   842  0112                     	;# 
   843  0115                     	;# 
   844  0116                     	;# 
   845  0117                     	;# 
   846  0118                     	;# 
   847  0119                     	;# 
   848  011D                     	;# 
   849  011D                     	;# 
   850  018C                     	;# 
   851  0191                     	;# 
   852  0191                     	;# 
   853  0192                     	;# 
   854  0193                     	;# 
   855  0193                     	;# 
   856  0194                     	;# 
   857  0195                     	;# 
   858  0196                     	;# 
   859  0199                     	;# 
   860  019A                     	;# 
   861  019B                     	;# 
   862  019B                     	;# 
   863  019C                     	;# 
   864  019D                     	;# 
   865  019E                     	;# 
   866  019F                     	;# 
   867  020C                     	;# 
   868  028C                     	;# 
   869  030C                     	;# 
   870  038C                     	;# 
   871  0391                     	;# 
   872  0392                     	;# 
   873  0393                     	;# 
   874  0691                     	;# 
   875  0692                     	;# 
   876  0693                     	;# 
   877  0694                     	;# 
   878  0695                     	;# 
   879  0D8E                     	;# 
   880  0D8F                     	;# 
   881  0D90                     	;# 
   882  0D91                     	;# 
   883  0D91                     	;# 
   884  0D92                     	;# 
   885  0D93                     	;# 
   886  0D93                     	;# 
   887  0D94                     	;# 
   888  0D95                     	;# 
   889  0D95                     	;# 
   890  0D96                     	;# 
   891  0D97                     	;# 
   892  0D97                     	;# 
   893  0D98                     	;# 
   894  0D99                     	;# 
   895  0D99                     	;# 
   896  0D9A                     	;# 
   897  0D9B                     	;# 
   898  0D9C                     	;# 
   899  0D9C                     	;# 
   900  0D9D                     	;# 
   901  0D9D                     	;# 
   902  0D9E                     	;# 
   903  0D9F                     	;# 
   904  0DA0                     	;# 
   905  0DA1                     	;# 
   906  0DA1                     	;# 
   907  0DA2                     	;# 
   908  0DA3                     	;# 
   909  0DA3                     	;# 
   910  0DA4                     	;# 
   911  0DA5                     	;# 
   912  0DA5                     	;# 
   913  0DA6                     	;# 
   914  0DA7                     	;# 
   915  0DA7                     	;# 
   916  0DA8                     	;# 
   917  0DA9                     	;# 
   918  0DA9                     	;# 
   919  0DAA                     	;# 
   920  0DAB                     	;# 
   921  0DAC                     	;# 
   922  0DAC                     	;# 
   923  0DAD                     	;# 
   924  0DAD                     	;# 
   925  0DAE                     	;# 
   926  0DAF                     	;# 
   927  0DB0                     	;# 
   928  0DB1                     	;# 
   929  0DB1                     	;# 
   930  0DB2                     	;# 
   931  0DB3                     	;# 
   932  0DB3                     	;# 
   933  0DB4                     	;# 
   934  0DB5                     	;# 
   935  0DB5                     	;# 
   936  0DB6                     	;# 
   937  0DB7                     	;# 
   938  0DB7                     	;# 
   939  0DB8                     	;# 
   940  0DB9                     	;# 
   941  0DB9                     	;# 
   942  0DBA                     	;# 
   943  0DBB                     	;# 
   944  0DBC                     	;# 
   945  0DBC                     	;# 
   946  0DBD                     	;# 
   947  0DBD                     	;# 
   948  0DBE                     	;# 
   949  0DBF                     	;# 
   950  0DC0                     	;# 
   951  0FE4                     	;# 
   952  0FE5                     	;# 
   953  0FE6                     	;# 
   954  0FE7                     	;# 
   955  0FE8                     	;# 
   956  0FE8                     	;# 
   957  0FE9                     	;# 
   958  0FEA                     	;# 
   959  0FEA                     	;# 
   960  0FEB                     	;# 
   961  0FED                     	;# 
   962  0FEE                     	;# 
   963  0FEE                     	;# 
   964  0FEF                     	;# 
   965  0000                     	;# 
   966  0001                     	;# 
   967  0002                     	;# 
   968  0003                     	;# 
   969  0004                     	;# 
   970  0005                     	;# 
   971  0006                     	;# 
   972  0007                     	;# 
   973  0008                     	;# 
   974  0009                     	;# 
   975  000A                     	;# 
   976  000B                     	;# 
   977  000C                     	;# 
   978  0011                     	;# 
   979  0012                     	;# 
   980  0013                     	;# 
   981  0015                     	;# 
   982  0016                     	;# 
   983  0016                     	;# 
   984  0017                     	;# 
   985  0018                     	;# 
   986  0019                     	;# 
   987  001A                     	;# 
   988  001B                     	;# 
   989  001C                     	;# 
   990  008C                     	;# 
   991  0091                     	;# 
   992  0092                     	;# 
   993  0093                     	;# 
   994  0095                     	;# 
   995  0096                     	;# 
   996  0097                     	;# 
   997  0098                     	;# 
   998  0099                     	;# 
   999  009A                     	;# 
  1000  009B                     	;# 
  1001  009B                     	;# 
  1002  009C                     	;# 
  1003  009D                     	;# 
  1004  009E                     	;# 
  1005  009F                     	;# 
  1006  010C                     	;# 
  1007  0111                     	;# 
  1008  0112                     	;# 
  1009  0115                     	;# 
  1010  0116                     	;# 
  1011  0117                     	;# 
  1012  0118                     	;# 
  1013  0119                     	;# 
  1014  011D                     	;# 
  1015  011D                     	;# 
  1016  018C                     	;# 
  1017  0191                     	;# 
  1018  0191                     	;# 
  1019  0192                     	;# 
  1020  0193                     	;# 
  1021  0193                     	;# 
  1022  0194                     	;# 
  1023  0195                     	;# 
  1024  0196                     	;# 
  1025  0199                     	;# 
  1026  019A                     	;# 
  1027  019B                     	;# 
  1028  019B                     	;# 
  1029  019C                     	;# 
  1030  019D                     	;# 
  1031  019E                     	;# 
  1032  019F                     	;# 
  1033  020C                     	;# 
  1034  028C                     	;# 
  1035  030C                     	;# 
  1036  038C                     	;# 
  1037  0391                     	;# 
  1038  0392                     	;# 
  1039  0393                     	;# 
  1040  0691                     	;# 
  1041  0692                     	;# 
  1042  0693                     	;# 
  1043  0694                     	;# 
  1044  0695                     	;# 
  1045  0D8E                     	;# 
  1046  0D8F                     	;# 
  1047  0D90                     	;# 
  1048  0D91                     	;# 
  1049  0D91                     	;# 
  1050  0D92                     	;# 
  1051  0D93                     	;# 
  1052  0D93                     	;# 
  1053  0D94                     	;# 
  1054  0D95                     	;# 
  1055  0D95                     	;# 
  1056  0D96                     	;# 
  1057  0D97                     	;# 
  1058  0D97                     	;# 
  1059  0D98                     	;# 
  1060  0D99                     	;# 
  1061  0D99                     	;# 
  1062  0D9A                     	;# 
  1063  0D9B                     	;# 
  1064  0D9C                     	;# 
  1065  0D9C                     	;# 
  1066  0D9D                     	;# 
  1067  0D9D                     	;# 
  1068  0D9E                     	;# 
  1069  0D9F                     	;# 
  1070  0DA0                     	;# 
  1071  0DA1                     	;# 
  1072  0DA1                     	;# 
  1073  0DA2                     	;# 
  1074  0DA3                     	;# 
  1075  0DA3                     	;# 
  1076  0DA4                     	;# 
  1077  0DA5                     	;# 
  1078  0DA5                     	;# 
  1079  0DA6                     	;# 
  1080  0DA7                     	;# 
  1081  0DA7                     	;# 
  1082  0DA8                     	;# 
  1083  0DA9                     	;# 
  1084  0DA9                     	;# 
  1085  0DAA                     	;# 
  1086  0DAB                     	;# 
  1087  0DAC                     	;# 
  1088  0DAC                     	;# 
  1089  0DAD                     	;# 
  1090  0DAD                     	;# 
  1091  0DAE                     	;# 
  1092  0DAF                     	;# 
  1093  0DB0                     	;# 
  1094  0DB1                     	;# 
  1095  0DB1                     	;# 
  1096  0DB2                     	;# 
  1097  0DB3                     	;# 
  1098  0DB3                     	;# 
  1099  0DB4                     	;# 
  1100  0DB5                     	;# 
  1101  0DB5                     	;# 
  1102  0DB6                     	;# 
  1103  0DB7                     	;# 
  1104  0DB7                     	;# 
  1105  0DB8                     	;# 
  1106  0DB9                     	;# 
  1107  0DB9                     	;# 
  1108  0DBA                     	;# 
  1109  0DBB                     	;# 
  1110  0DBC                     	;# 
  1111  0DBC                     	;# 
  1112  0DBD                     	;# 
  1113  0DBD                     	;# 
  1114  0DBE                     	;# 
  1115  0DBF                     	;# 
  1116  0DC0                     	;# 
  1117  0FE4                     	;# 
  1118  0FE5                     	;# 
  1119  0FE6                     	;# 
  1120  0FE7                     	;# 
  1121  0FE8                     	;# 
  1122  0FE8                     	;# 
  1123  0FE9                     	;# 
  1124  0FEA                     	;# 
  1125  0FEA                     	;# 
  1126  0FEB                     	;# 
  1127  0FED                     	;# 
  1128  0FEE                     	;# 
  1129  0FEE                     	;# 
  1130  0FEF                     	;# 
  1131  0000                     	;# 
  1132  0001                     	;# 
  1133  0002                     	;# 
  1134  0003                     	;# 
  1135  0004                     	;# 
  1136  0005                     	;# 
  1137  0006                     	;# 
  1138  0007                     	;# 
  1139  0008                     	;# 
  1140  0009                     	;# 
  1141  000A                     	;# 
  1142  000B                     	;# 
  1143  000C                     	;# 
  1144  0011                     	;# 
  1145  0012                     	;# 
  1146  0013                     	;# 
  1147  0015                     	;# 
  1148  0016                     	;# 
  1149  0016                     	;# 
  1150  0017                     	;# 
  1151  0018                     	;# 
  1152  0019                     	;# 
  1153  001A                     	;# 
  1154  001B                     	;# 
  1155  001C                     	;# 
  1156  008C                     	;# 
  1157  0091                     	;# 
  1158  0092                     	;# 
  1159  0093                     	;# 
  1160  0095                     	;# 
  1161  0096                     	;# 
  1162  0097                     	;# 
  1163  0098                     	;# 
  1164  0099                     	;# 
  1165  009A                     	;# 
  1166  009B                     	;# 
  1167  009B                     	;# 
  1168  009C                     	;# 
  1169  009D                     	;# 
  1170  009E                     	;# 
  1171  009F                     	;# 
  1172  010C                     	;# 
  1173  0111                     	;# 
  1174  0112                     	;# 
  1175  0115                     	;# 
  1176  0116                     	;# 
  1177  0117                     	;# 
  1178  0118                     	;# 
  1179  0119                     	;# 
  1180  011D                     	;# 
  1181  011D                     	;# 
  1182  018C                     	;# 
  1183  0191                     	;# 
  1184  0191                     	;# 
  1185  0192                     	;# 
  1186  0193                     	;# 
  1187  0193                     	;# 
  1188  0194                     	;# 
  1189  0195                     	;# 
  1190  0196                     	;# 
  1191  0199                     	;# 
  1192  019A                     	;# 
  1193  019B                     	;# 
  1194  019B                     	;# 
  1195  019C                     	;# 
  1196  019D                     	;# 
  1197  019E                     	;# 
  1198  019F                     	;# 
  1199  020C                     	;# 
  1200  028C                     	;# 
  1201  030C                     	;# 
  1202  038C                     	;# 
  1203  0391                     	;# 
  1204  0392                     	;# 
  1205  0393                     	;# 
  1206  0691                     	;# 
  1207  0692                     	;# 
  1208  0693                     	;# 
  1209  0694                     	;# 
  1210  0695                     	;# 
  1211  0D8E                     	;# 
  1212  0D8F                     	;# 
  1213  0D90                     	;# 
  1214  0D91                     	;# 
  1215  0D91                     	;# 
  1216  0D92                     	;# 
  1217  0D93                     	;# 
  1218  0D93                     	;# 
  1219  0D94                     	;# 
  1220  0D95                     	;# 
  1221  0D95                     	;# 
  1222  0D96                     	;# 
  1223  0D97                     	;# 
  1224  0D97                     	;# 
  1225  0D98                     	;# 
  1226  0D99                     	;# 
  1227  0D99                     	;# 
  1228  0D9A                     	;# 
  1229  0D9B                     	;# 
  1230  0D9C                     	;# 
  1231  0D9C                     	;# 
  1232  0D9D                     	;# 
  1233  0D9D                     	;# 
  1234  0D9E                     	;# 
  1235  0D9F                     	;# 
  1236  0DA0                     	;# 
  1237  0DA1                     	;# 
  1238  0DA1                     	;# 
  1239  0DA2                     	;# 
  1240  0DA3                     	;# 
  1241  0DA3                     	;# 
  1242  0DA4                     	;# 
  1243  0DA5                     	;# 
  1244  0DA5                     	;# 
  1245  0DA6                     	;# 
  1246  0DA7                     	;# 
  1247  0DA7                     	;# 
  1248  0DA8                     	;# 
  1249  0DA9                     	;# 
  1250  0DA9                     	;# 
  1251  0DAA                     	;# 
  1252  0DAB                     	;# 
  1253  0DAC                     	;# 
  1254  0DAC                     	;# 
  1255  0DAD                     	;# 
  1256  0DAD                     	;# 
  1257  0DAE                     	;# 
  1258  0DAF                     	;# 
  1259  0DB0                     	;# 
  1260  0DB1                     	;# 
  1261  0DB1                     	;# 
  1262  0DB2                     	;# 
  1263  0DB3                     	;# 
  1264  0DB3                     	;# 
  1265  0DB4                     	;# 
  1266  0DB5                     	;# 
  1267  0DB5                     	;# 
  1268  0DB6                     	;# 
  1269  0DB7                     	;# 
  1270  0DB7                     	;# 
  1271  0DB8                     	;# 
  1272  0DB9                     	;# 
  1273  0DB9                     	;# 
  1274  0DBA                     	;# 
  1275  0DBB                     	;# 
  1276  0DBC                     	;# 
  1277  0DBC                     	;# 
  1278  0DBD                     	;# 
  1279  0DBD                     	;# 
  1280  0DBE                     	;# 
  1281  0DBF                     	;# 
  1282  0DC0                     	;# 
  1283  0FE4                     	;# 
  1284  0FE5                     	;# 
  1285  0FE6                     	;# 
  1286  0FE7                     	;# 
  1287  0FE8                     	;# 
  1288  0FE8                     	;# 
  1289  0FE9                     	;# 
  1290  0FEA                     	;# 
  1291  0FEA                     	;# 
  1292  0FEB                     	;# 
  1293  0FED                     	;# 
  1294  0FEE                     	;# 
  1295  0FEE                     	;# 
  1296  0FEF                     	;# 
  1297  0000                     	;# 
  1298  0001                     	;# 
  1299  0002                     	;# 
  1300  0003                     	;# 
  1301  0004                     	;# 
  1302  0005                     	;# 
  1303  0006                     	;# 
  1304  0007                     	;# 
  1305  0008                     	;# 
  1306  0009                     	;# 
  1307  000A                     	;# 
  1308  000B                     	;# 
  1309  000C                     	;# 
  1310  0011                     	;# 
  1311  0012                     	;# 
  1312  0013                     	;# 
  1313  0015                     	;# 
  1314  0016                     	;# 
  1315  0016                     	;# 
  1316  0017                     	;# 
  1317  0018                     	;# 
  1318  0019                     	;# 
  1319  001A                     	;# 
  1320  001B                     	;# 
  1321  001C                     	;# 
  1322  008C                     	;# 
  1323  0091                     	;# 
  1324  0092                     	;# 
  1325  0093                     	;# 
  1326  0095                     	;# 
  1327  0096                     	;# 
  1328  0097                     	;# 
  1329  0098                     	;# 
  1330  0099                     	;# 
  1331  009A                     	;# 
  1332  009B                     	;# 
  1333  009B                     	;# 
  1334  009C                     	;# 
  1335  009D                     	;# 
  1336  009E                     	;# 
  1337  009F                     	;# 
  1338  010C                     	;# 
  1339  0111                     	;# 
  1340  0112                     	;# 
  1341  0115                     	;# 
  1342  0116                     	;# 
  1343  0117                     	;# 
  1344  0118                     	;# 
  1345  0119                     	;# 
  1346  011D                     	;# 
  1347  011D                     	;# 
  1348  018C                     	;# 
  1349  0191                     	;# 
  1350  0191                     	;# 
  1351  0192                     	;# 
  1352  0193                     	;# 
  1353  0193                     	;# 
  1354  0194                     	;# 
  1355  0195                     	;# 
  1356  0196                     	;# 
  1357  0199                     	;# 
  1358  019A                     	;# 
  1359  019B                     	;# 
  1360  019B                     	;# 
  1361  019C                     	;# 
  1362  019D                     	;# 
  1363  019E                     	;# 
  1364  019F                     	;# 
  1365  020C                     	;# 
  1366  028C                     	;# 
  1367  030C                     	;# 
  1368  038C                     	;# 
  1369  0391                     	;# 
  1370  0392                     	;# 
  1371  0393                     	;# 
  1372  0691                     	;# 
  1373  0692                     	;# 
  1374  0693                     	;# 
  1375  0694                     	;# 
  1376  0695                     	;# 
  1377  0D8E                     	;# 
  1378  0D8F                     	;# 
  1379  0D90                     	;# 
  1380  0D91                     	;# 
  1381  0D91                     	;# 
  1382  0D92                     	;# 
  1383  0D93                     	;# 
  1384  0D93                     	;# 
  1385  0D94                     	;# 
  1386  0D95                     	;# 
  1387  0D95                     	;# 
  1388  0D96                     	;# 
  1389  0D97                     	;# 
  1390  0D97                     	;# 
  1391  0D98                     	;# 
  1392  0D99                     	;# 
  1393  0D99                     	;# 
  1394  0D9A                     	;# 
  1395  0D9B                     	;# 
  1396  0D9C                     	;# 
  1397  0D9C                     	;# 
  1398  0D9D                     	;# 
  1399  0D9D                     	;# 
  1400  0D9E                     	;# 
  1401  0D9F                     	;# 
  1402  0DA0                     	;# 
  1403  0DA1                     	;# 
  1404  0DA1                     	;# 
  1405  0DA2                     	;# 
  1406  0DA3                     	;# 
  1407  0DA3                     	;# 
  1408  0DA4                     	;# 
  1409  0DA5                     	;# 
  1410  0DA5                     	;# 
  1411  0DA6                     	;# 
  1412  0DA7                     	;# 
  1413  0DA7                     	;# 
  1414  0DA8                     	;# 
  1415  0DA9                     	;# 
  1416  0DA9                     	;# 
  1417  0DAA                     	;# 
  1418  0DAB                     	;# 
  1419  0DAC                     	;# 
  1420  0DAC                     	;# 
  1421  0DAD                     	;# 
  1422  0DAD                     	;# 
  1423  0DAE                     	;# 
  1424  0DAF                     	;# 
  1425  0DB0                     	;# 
  1426  0DB1                     	;# 
  1427  0DB1                     	;# 
  1428  0DB2                     	;# 
  1429  0DB3                     	;# 
  1430  0DB3                     	;# 
  1431  0DB4                     	;# 
  1432  0DB5                     	;# 
  1433  0DB5                     	;# 
  1434  0DB6                     	;# 
  1435  0DB7                     	;# 
  1436  0DB7                     	;# 
  1437  0DB8                     	;# 
  1438  0DB9                     	;# 
  1439  0DB9                     	;# 
  1440  0DBA                     	;# 
  1441  0DBB                     	;# 
  1442  0DBC                     	;# 
  1443  0DBC                     	;# 
  1444  0DBD                     	;# 
  1445  0DBD                     	;# 
  1446  0DBE                     	;# 
  1447  0DBF                     	;# 
  1448  0DC0                     	;# 
  1449  0FE4                     	;# 
  1450  0FE5                     	;# 
  1451  0FE6                     	;# 
  1452  0FE7                     	;# 
  1453  0FE8                     	;# 
  1454  0FE8                     	;# 
  1455  0FE9                     	;# 
  1456  0FEA                     	;# 
  1457  0FEA                     	;# 
  1458  0FEB                     	;# 
  1459  0FED                     	;# 
  1460  0FEE                     	;# 
  1461  0FEE                     	;# 
  1462  0FEF                     	;# 
  1463  0000                     	;# 
  1464  0001                     	;# 
  1465  0002                     	;# 
  1466  0003                     	;# 
  1467  0004                     	;# 
  1468  0005                     	;# 
  1469  0006                     	;# 
  1470  0007                     	;# 
  1471  0008                     	;# 
  1472  0009                     	;# 
  1473  000A                     	;# 
  1474  000B                     	;# 
  1475  000C                     	;# 
  1476  0011                     	;# 
  1477  0012                     	;# 
  1478  0013                     	;# 
  1479  0015                     	;# 
  1480  0016                     	;# 
  1481  0016                     	;# 
  1482  0017                     	;# 
  1483  0018                     	;# 
  1484  0019                     	;# 
  1485  001A                     	;# 
  1486  001B                     	;# 
  1487  001C                     	;# 
  1488  008C                     	;# 
  1489  0091                     	;# 
  1490  0092                     	;# 
  1491  0093                     	;# 
  1492  0095                     	;# 
  1493  0096                     	;# 
  1494  0097                     	;# 
  1495  0098                     	;# 
  1496  0099                     	;# 
  1497  009A                     	;# 
  1498  009B                     	;# 
  1499  009B                     	;# 
  1500  009C                     	;# 
  1501  009D                     	;# 
  1502  009E                     	;# 
  1503  009F                     	;# 
  1504  010C                     	;# 
  1505  0111                     	;# 
  1506  0112                     	;# 
  1507  0115                     	;# 
  1508  0116                     	;# 
  1509  0117                     	;# 
  1510  0118                     	;# 
  1511  0119                     	;# 
  1512  011D                     	;# 
  1513  011D                     	;# 
  1514  018C                     	;# 
  1515  0191                     	;# 
  1516  0191                     	;# 
  1517  0192                     	;# 
  1518  0193                     	;# 
  1519  0193                     	;# 
  1520  0194                     	;# 
  1521  0195                     	;# 
  1522  0196                     	;# 
  1523  0199                     	;# 
  1524  019A                     	;# 
  1525  019B                     	;# 
  1526  019B                     	;# 
  1527  019C                     	;# 
  1528  019D                     	;# 
  1529  019E                     	;# 
  1530  019F                     	;# 
  1531  020C                     	;# 
  1532  028C                     	;# 
  1533  030C                     	;# 
  1534  038C                     	;# 
  1535  0391                     	;# 
  1536  0392                     	;# 
  1537  0393                     	;# 
  1538  0691                     	;# 
  1539  0692                     	;# 
  1540  0693                     	;# 
  1541  0694                     	;# 
  1542  0695                     	;# 
  1543  0D8E                     	;# 
  1544  0D8F                     	;# 
  1545  0D90                     	;# 
  1546  0D91                     	;# 
  1547  0D91                     	;# 
  1548  0D92                     	;# 
  1549  0D93                     	;# 
  1550  0D93                     	;# 
  1551  0D94                     	;# 
  1552  0D95                     	;# 
  1553  0D95                     	;# 
  1554  0D96                     	;# 
  1555  0D97                     	;# 
  1556  0D97                     	;# 
  1557  0D98                     	;# 
  1558  0D99                     	;# 
  1559  0D99                     	;# 
  1560  0D9A                     	;# 
  1561  0D9B                     	;# 
  1562  0D9C                     	;# 
  1563  0D9C                     	;# 
  1564  0D9D                     	;# 
  1565  0D9D                     	;# 
  1566  0D9E                     	;# 
  1567  0D9F                     	;# 
  1568  0DA0                     	;# 
  1569  0DA1                     	;# 
  1570  0DA1                     	;# 
  1571  0DA2                     	;# 
  1572  0DA3                     	;# 
  1573  0DA3                     	;# 
  1574  0DA4                     	;# 
  1575  0DA5                     	;# 
  1576  0DA5                     	;# 
  1577  0DA6                     	;# 
  1578  0DA7                     	;# 
  1579  0DA7                     	;# 
  1580  0DA8                     	;# 
  1581  0DA9                     	;# 
  1582  0DA9                     	;# 
  1583  0DAA                     	;# 
  1584  0DAB                     	;# 
  1585  0DAC                     	;# 
  1586  0DAC                     	;# 
  1587  0DAD                     	;# 
  1588  0DAD                     	;# 
  1589  0DAE                     	;# 
  1590  0DAF                     	;# 
  1591  0DB0                     	;# 
  1592  0DB1                     	;# 
  1593  0DB1                     	;# 
  1594  0DB2                     	;# 
  1595  0DB3                     	;# 
  1596  0DB3                     	;# 
  1597  0DB4                     	;# 
  1598  0DB5                     	;# 
  1599  0DB5                     	;# 
  1600  0DB6                     	;# 
  1601  0DB7                     	;# 
  1602  0DB7                     	;# 
  1603  0DB8                     	;# 
  1604  0DB9                     	;# 
  1605  0DB9                     	;# 
  1606  0DBA                     	;# 
  1607  0DBB                     	;# 
  1608  0DBC                     	;# 
  1609  0DBC                     	;# 
  1610  0DBD                     	;# 
  1611  0DBD                     	;# 
  1612  0DBE                     	;# 
  1613  0DBF                     	;# 
  1614  0DC0                     	;# 
  1615  0FE4                     	;# 
  1616  0FE5                     	;# 
  1617  0FE6                     	;# 
  1618  0FE7                     	;# 
  1619  0FE8                     	;# 
  1620  0FE8                     	;# 
  1621  0FE9                     	;# 
  1622  0FEA                     	;# 
  1623  0FEA                     	;# 
  1624  0FEB                     	;# 
  1625  0FED                     	;# 
  1626  0FEE                     	;# 
  1627  0FEE                     	;# 
  1628  0FEF                     	;# 
  1629  0000                     	;# 
  1630  0001                     	;# 
  1631  0002                     	;# 
  1632  0003                     	;# 
  1633  0004                     	;# 
  1634  0005                     	;# 
  1635  0006                     	;# 
  1636  0007                     	;# 
  1637  0008                     	;# 
  1638  0009                     	;# 
  1639  000A                     	;# 
  1640  000B                     	;# 
  1641  000C                     	;# 
  1642  0011                     	;# 
  1643  0012                     	;# 
  1644  0013                     	;# 
  1645  0015                     	;# 
  1646  0016                     	;# 
  1647  0016                     	;# 
  1648  0017                     	;# 
  1649  0018                     	;# 
  1650  0019                     	;# 
  1651  001A                     	;# 
  1652  001B                     	;# 
  1653  001C                     	;# 
  1654  008C                     	;# 
  1655  0091                     	;# 
  1656  0092                     	;# 
  1657  0093                     	;# 
  1658  0095                     	;# 
  1659  0096                     	;# 
  1660  0097                     	;# 
  1661  0098                     	;# 
  1662  0099                     	;# 
  1663  009A                     	;# 
  1664  009B                     	;# 
  1665  009B                     	;# 
  1666  009C                     	;# 
  1667  009D                     	;# 
  1668  009E                     	;# 
  1669  009F                     	;# 
  1670  010C                     	;# 
  1671  0111                     	;# 
  1672  0112                     	;# 
  1673  0115                     	;# 
  1674  0116                     	;# 
  1675  0117                     	;# 
  1676  0118                     	;# 
  1677  0119                     	;# 
  1678  011D                     	;# 
  1679  011D                     	;# 
  1680  018C                     	;# 
  1681  0191                     	;# 
  1682  0191                     	;# 
  1683  0192                     	;# 
  1684  0193                     	;# 
  1685  0193                     	;# 
  1686  0194                     	;# 
  1687  0195                     	;# 
  1688  0196                     	;# 
  1689  0199                     	;# 
  1690  019A                     	;# 
  1691  019B                     	;# 
  1692  019B                     	;# 
  1693  019C                     	;# 
  1694  019D                     	;# 
  1695  019E                     	;# 
  1696  019F                     	;# 
  1697  020C                     	;# 
  1698  028C                     	;# 
  1699  030C                     	;# 
  1700  038C                     	;# 
  1701  0391                     	;# 
  1702  0392                     	;# 
  1703  0393                     	;# 
  1704  0691                     	;# 
  1705  0692                     	;# 
  1706  0693                     	;# 
  1707  0694                     	;# 
  1708  0695                     	;# 
  1709  0D8E                     	;# 
  1710  0D8F                     	;# 
  1711  0D90                     	;# 
  1712  0D91                     	;# 
  1713  0D91                     	;# 
  1714  0D92                     	;# 
  1715  0D93                     	;# 
  1716  0D93                     	;# 
  1717  0D94                     	;# 
  1718  0D95                     	;# 
  1719  0D95                     	;# 
  1720  0D96                     	;# 
  1721  0D97                     	;# 
  1722  0D97                     	;# 
  1723  0D98                     	;# 
  1724  0D99                     	;# 
  1725  0D99                     	;# 
  1726  0D9A                     	;# 
  1727  0D9B                     	;# 
  1728  0D9C                     	;# 
  1729  0D9C                     	;# 
  1730  0D9D                     	;# 
  1731  0D9D                     	;# 
  1732  0D9E                     	;# 
  1733  0D9F                     	;# 
  1734  0DA0                     	;# 
  1735  0DA1                     	;# 
  1736  0DA1                     	;# 
  1737  0DA2                     	;# 
  1738  0DA3                     	;# 
  1739  0DA3                     	;# 
  1740  0DA4                     	;# 
  1741  0DA5                     	;# 
  1742  0DA5                     	;# 
  1743  0DA6                     	;# 
  1744  0DA7                     	;# 
  1745  0DA7                     	;# 
  1746  0DA8                     	;# 
  1747  0DA9                     	;# 
  1748  0DA9                     	;# 
  1749  0DAA                     	;# 
  1750  0DAB                     	;# 
  1751  0DAC                     	;# 
  1752  0DAC                     	;# 
  1753  0DAD                     	;# 
  1754  0DAD                     	;# 
  1755  0DAE                     	;# 
  1756  0DAF                     	;# 
  1757  0DB0                     	;# 
  1758  0DB1                     	;# 
  1759  0DB1                     	;# 
  1760  0DB2                     	;# 
  1761  0DB3                     	;# 
  1762  0DB3                     	;# 
  1763  0DB4                     	;# 
  1764  0DB5                     	;# 
  1765  0DB5                     	;# 
  1766  0DB6                     	;# 
  1767  0DB7                     	;# 
  1768  0DB7                     	;# 
  1769  0DB8                     	;# 
  1770  0DB9                     	;# 
  1771  0DB9                     	;# 
  1772  0DBA                     	;# 
  1773  0DBB                     	;# 
  1774  0DBC                     	;# 
  1775  0DBC                     	;# 
  1776  0DBD                     	;# 
  1777  0DBD                     	;# 
  1778  0DBE                     	;# 
  1779  0DBF                     	;# 
  1780  0DC0                     	;# 
  1781  0FE4                     	;# 
  1782  0FE5                     	;# 
  1783  0FE6                     	;# 
  1784  0FE7                     	;# 
  1785  0FE8                     	;# 
  1786  0FE8                     	;# 
  1787  0FE9                     	;# 
  1788  0FEA                     	;# 
  1789  0FEA                     	;# 
  1790  0FEB                     	;# 
  1791  0FED                     	;# 
  1792  0FEE                     	;# 
  1793  0FEE                     	;# 
  1794  0FEF                     	;# 
  1795  0000                     	;# 
  1796  0001                     	;# 
  1797  0002                     	;# 
  1798  0003                     	;# 
  1799  0004                     	;# 
  1800  0005                     	;# 
  1801  0006                     	;# 
  1802  0007                     	;# 
  1803  0008                     	;# 
  1804  0009                     	;# 
  1805  000A                     	;# 
  1806  000B                     	;# 
  1807  000C                     	;# 
  1808  0011                     	;# 
  1809  0012                     	;# 
  1810  0013                     	;# 
  1811  0015                     	;# 
  1812  0016                     	;# 
  1813  0016                     	;# 
  1814  0017                     	;# 
  1815  0018                     	;# 
  1816  0019                     	;# 
  1817  001A                     	;# 
  1818  001B                     	;# 
  1819  001C                     	;# 
  1820  008C                     	;# 
  1821  0091                     	;# 
  1822  0092                     	;# 
  1823  0093                     	;# 
  1824  0095                     	;# 
  1825  0096                     	;# 
  1826  0097                     	;# 
  1827  0098                     	;# 
  1828  0099                     	;# 
  1829  009A                     	;# 
  1830  009B                     	;# 
  1831  009B                     	;# 
  1832  009C                     	;# 
  1833  009D                     	;# 
  1834  009E                     	;# 
  1835  009F                     	;# 
  1836  010C                     	;# 
  1837  0111                     	;# 
  1838  0112                     	;# 
  1839  0115                     	;# 
  1840  0116                     	;# 
  1841  0117                     	;# 
  1842  0118                     	;# 
  1843  0119                     	;# 
  1844  011D                     	;# 
  1845  011D                     	;# 
  1846  018C                     	;# 
  1847  0191                     	;# 
  1848  0191                     	;# 
  1849  0192                     	;# 
  1850  0193                     	;# 
  1851  0193                     	;# 
  1852  0194                     	;# 
  1853  0195                     	;# 
  1854  0196                     	;# 
  1855  0199                     	;# 
  1856  019A                     	;# 
  1857  019B                     	;# 
  1858  019B                     	;# 
  1859  019C                     	;# 
  1860  019D                     	;# 
  1861  019E                     	;# 
  1862  019F                     	;# 
  1863  020C                     	;# 
  1864  028C                     	;# 
  1865  030C                     	;# 
  1866  038C                     	;# 
  1867  0391                     	;# 
  1868  0392                     	;# 
  1869  0393                     	;# 
  1870  0691                     	;# 
  1871  0692                     	;# 
  1872  0693                     	;# 
  1873  0694                     	;# 
  1874  0695                     	;# 
  1875  0D8E                     	;# 
  1876  0D8F                     	;# 
  1877  0D90                     	;# 
  1878  0D91                     	;# 
  1879  0D91                     	;# 
  1880  0D92                     	;# 
  1881  0D93                     	;# 
  1882  0D93                     	;# 
  1883  0D94                     	;# 
  1884  0D95                     	;# 
  1885  0D95                     	;# 
  1886  0D96                     	;# 
  1887  0D97                     	;# 
  1888  0D97                     	;# 
  1889  0D98                     	;# 
  1890  0D99                     	;# 
  1891  0D99                     	;# 
  1892  0D9A                     	;# 
  1893  0D9B                     	;# 
  1894  0D9C                     	;# 
  1895  0D9C                     	;# 
  1896  0D9D                     	;# 
  1897  0D9D                     	;# 
  1898  0D9E                     	;# 
  1899  0D9F                     	;# 
  1900  0DA0                     	;# 
  1901  0DA1                     	;# 
  1902  0DA1                     	;# 
  1903  0DA2                     	;# 
  1904  0DA3                     	;# 
  1905  0DA3                     	;# 
  1906  0DA4                     	;# 
  1907  0DA5                     	;# 
  1908  0DA5                     	;# 
  1909  0DA6                     	;# 
  1910  0DA7                     	;# 
  1911  0DA7                     	;# 
  1912  0DA8                     	;# 
  1913  0DA9                     	;# 
  1914  0DA9                     	;# 
  1915  0DAA                     	;# 
  1916  0DAB                     	;# 
  1917  0DAC                     	;# 
  1918  0DAC                     	;# 
  1919  0DAD                     	;# 
  1920  0DAD                     	;# 
  1921  0DAE                     	;# 
  1922  0DAF                     	;# 
  1923  0DB0                     	;# 
  1924  0DB1                     	;# 
  1925  0DB1                     	;# 
  1926  0DB2                     	;# 
  1927  0DB3                     	;# 
  1928  0DB3                     	;# 
  1929  0DB4                     	;# 
  1930  0DB5                     	;# 
  1931  0DB5                     	;# 
  1932  0DB6                     	;# 
  1933  0DB7                     	;# 
  1934  0DB7                     	;# 
  1935  0DB8                     	;# 
  1936  0DB9                     	;# 
  1937  0DB9                     	;# 
  1938  0DBA                     	;# 
  1939  0DBB                     	;# 
  1940  0DBC                     	;# 
  1941  0DBC                     	;# 
  1942  0DBD                     	;# 
  1943  0DBD                     	;# 
  1944  0DBE                     	;# 
  1945  0DBF                     	;# 
  1946  0DC0                     	;# 
  1947  0FE4                     	;# 
  1948  0FE5                     	;# 
  1949  0FE6                     	;# 
  1950  0FE7                     	;# 
  1951  0FE8                     	;# 
  1952  0FE8                     	;# 
  1953  0FE9                     	;# 
  1954  0FEA                     	;# 
  1955  0FEA                     	;# 
  1956  0FEB                     	;# 
  1957  0FED                     	;# 
  1958  0FEE                     	;# 
  1959  0FEE                     	;# 
  1960  0FEF                     	;# 
  1961  0000                     	;# 
  1962  0001                     	;# 
  1963  0002                     	;# 
  1964  0003                     	;# 
  1965  0004                     	;# 
  1966  0005                     	;# 
  1967  0006                     	;# 
  1968  0007                     	;# 
  1969  0008                     	;# 
  1970  0009                     	;# 
  1971  000A                     	;# 
  1972  000B                     	;# 
  1973  000C                     	;# 
  1974  0011                     	;# 
  1975  0012                     	;# 
  1976  0013                     	;# 
  1977  0015                     	;# 
  1978  0016                     	;# 
  1979  0016                     	;# 
  1980  0017                     	;# 
  1981  0018                     	;# 
  1982  0019                     	;# 
  1983  001A                     	;# 
  1984  001B                     	;# 
  1985  001C                     	;# 
  1986  008C                     	;# 
  1987  0091                     	;# 
  1988  0092                     	;# 
  1989  0093                     	;# 
  1990  0095                     	;# 
  1991  0096                     	;# 
  1992  0097                     	;# 
  1993  0098                     	;# 
  1994  0099                     	;# 
  1995  009A                     	;# 
  1996  009B                     	;# 
  1997  009B                     	;# 
  1998  009C                     	;# 
  1999  009D                     	;# 
  2000  009E                     	;# 
  2001  009F                     	;# 
  2002  010C                     	;# 
  2003  0111                     	;# 
  2004  0112                     	;# 
  2005  0115                     	;# 
  2006  0116                     	;# 
  2007  0117                     	;# 
  2008  0118                     	;# 
  2009  0119                     	;# 
  2010  011D                     	;# 
  2011  011D                     	;# 
  2012  018C                     	;# 
  2013  0191                     	;# 
  2014  0191                     	;# 
  2015  0192                     	;# 
  2016  0193                     	;# 
  2017  0193                     	;# 
  2018  0194                     	;# 
  2019  0195                     	;# 
  2020  0196                     	;# 
  2021  0199                     	;# 
  2022  019A                     	;# 
  2023  019B                     	;# 
  2024  019B                     	;# 
  2025  019C                     	;# 
  2026  019D                     	;# 
  2027  019E                     	;# 
  2028  019F                     	;# 
  2029  020C                     	;# 
  2030  028C                     	;# 
  2031  030C                     	;# 
  2032  038C                     	;# 
  2033  0391                     	;# 
  2034  0392                     	;# 
  2035  0393                     	;# 
  2036  0691                     	;# 
  2037  0692                     	;# 
  2038  0693                     	;# 
  2039  0694                     	;# 
  2040  0695                     	;# 
  2041  0D8E                     	;# 
  2042  0D8F                     	;# 
  2043  0D90                     	;# 
  2044  0D91                     	;# 
  2045  0D91                     	;# 
  2046  0D92                     	;# 
  2047  0D93                     	;# 
  2048  0D93                     	;# 
  2049  0D94                     	;# 
  2050  0D95                     	;# 
  2051  0D95                     	;# 
  2052  0D96                     	;# 
  2053  0D97                     	;# 
  2054  0D97                     	;# 
  2055  0D98                     	;# 
  2056  0D99                     	;# 
  2057  0D99                     	;# 
  2058  0D9A                     	;# 
  2059  0D9B                     	;# 
  2060  0D9C                     	;# 
  2061  0D9C                     	;# 
  2062  0D9D                     	;# 
  2063  0D9D                     	;# 
  2064  0D9E                     	;# 
  2065  0D9F                     	;# 
  2066  0DA0                     	;# 
  2067  0DA1                     	;# 
  2068  0DA1                     	;# 
  2069  0DA2                     	;# 
  2070  0DA3                     	;# 
  2071  0DA3                     	;# 
  2072  0DA4                     	;# 
  2073  0DA5                     	;# 
  2074  0DA5                     	;# 
  2075  0DA6                     	;# 
  2076  0DA7                     	;# 
  2077  0DA7                     	;# 
  2078  0DA8                     	;# 
  2079  0DA9                     	;# 
  2080  0DA9                     	;# 
  2081  0DAA                     	;# 
  2082  0DAB                     	;# 
  2083  0DAC                     	;# 
  2084  0DAC                     	;# 
  2085  0DAD                     	;# 
  2086  0DAD                     	;# 
  2087  0DAE                     	;# 
  2088  0DAF                     	;# 
  2089  0DB0                     	;# 
  2090  0DB1                     	;# 
  2091  0DB1                     	;# 
  2092  0DB2                     	;# 
  2093  0DB3                     	;# 
  2094  0DB3                     	;# 
  2095  0DB4                     	;# 
  2096  0DB5                     	;# 
  2097  0DB5                     	;# 
  2098  0DB6                     	;# 
  2099  0DB7                     	;# 
  2100  0DB7                     	;# 
  2101  0DB8                     	;# 
  2102  0DB9                     	;# 
  2103  0DB9                     	;# 
  2104  0DBA                     	;# 
  2105  0DBB                     	;# 
  2106  0DBC                     	;# 
  2107  0DBC                     	;# 
  2108  0DBD                     	;# 
  2109  0DBD                     	;# 
  2110  0DBE                     	;# 
  2111  0DBF                     	;# 
  2112  0DC0                     	;# 
  2113  0FE4                     	;# 
  2114  0FE5                     	;# 
  2115  0FE6                     	;# 
  2116  0FE7                     	;# 
  2117  0FE8                     	;# 
  2118  0FE8                     	;# 
  2119  0FE9                     	;# 
  2120  0FEA                     	;# 
  2121  0FEA                     	;# 
  2122  0FEB                     	;# 
  2123  0FED                     	;# 
  2124  0FEE                     	;# 
  2125  0FEE                     	;# 
  2126  0FEF                     	;# 
  2127  0000                     	;# 
  2128  0001                     	;# 
  2129  0002                     	;# 
  2130  0003                     	;# 
  2131  0004                     	;# 
  2132  0005                     	;# 
  2133  0006                     	;# 
  2134  0007                     	;# 
  2135  0008                     	;# 
  2136  0009                     	;# 
  2137  000A                     	;# 
  2138  000B                     	;# 
  2139  000C                     	;# 
  2140  0011                     	;# 
  2141  0012                     	;# 
  2142  0013                     	;# 
  2143  0015                     	;# 
  2144  0016                     	;# 
  2145  0016                     	;# 
  2146  0017                     	;# 
  2147  0018                     	;# 
  2148  0019                     	;# 
  2149  001A                     	;# 
  2150  001B                     	;# 
  2151  001C                     	;# 
  2152  008C                     	;# 
  2153  0091                     	;# 
  2154  0092                     	;# 
  2155  0093                     	;# 
  2156  0095                     	;# 
  2157  0096                     	;# 
  2158  0097                     	;# 
  2159  0098                     	;# 
  2160  0099                     	;# 
  2161  009A                     	;# 
  2162  009B                     	;# 
  2163  009B                     	;# 
  2164  009C                     	;# 
  2165  009D                     	;# 
  2166  009E                     	;# 
  2167  009F                     	;# 
  2168  010C                     	;# 
  2169  0111                     	;# 
  2170  0112                     	;# 
  2171  0115                     	;# 
  2172  0116                     	;# 
  2173  0117                     	;# 
  2174  0118                     	;# 
  2175  0119                     	;# 
  2176  011D                     	;# 
  2177  011D                     	;# 
  2178  018C                     	;# 
  2179  0191                     	;# 
  2180  0191                     	;# 
  2181  0192                     	;# 
  2182  0193                     	;# 
  2183  0193                     	;# 
  2184  0194                     	;# 
  2185  0195                     	;# 
  2186  0196                     	;# 
  2187  0199                     	;# 
  2188  019A                     	;# 
  2189  019B                     	;# 
  2190  019B                     	;# 
  2191  019C                     	;# 
  2192  019D                     	;# 
  2193  019E                     	;# 
  2194  019F                     	;# 
  2195  020C                     	;# 
  2196  028C                     	;# 
  2197  030C                     	;# 
  2198  038C                     	;# 
  2199  0391                     	;# 
  2200  0392                     	;# 
  2201  0393                     	;# 
  2202  0691                     	;# 
  2203  0692                     	;# 
  2204  0693                     	;# 
  2205  0694                     	;# 
  2206  0695                     	;# 
  2207  0D8E                     	;# 
  2208  0D8F                     	;# 
  2209  0D90                     	;# 
  2210  0D91                     	;# 
  2211  0D91                     	;# 
  2212  0D92                     	;# 
  2213  0D93                     	;# 
  2214  0D93                     	;# 
  2215  0D94                     	;# 
  2216  0D95                     	;# 
  2217  0D95                     	;# 
  2218  0D96                     	;# 
  2219  0D97                     	;# 
  2220  0D97                     	;# 
  2221  0D98                     	;# 
  2222  0D99                     	;# 
  2223  0D99                     	;# 
  2224  0D9A                     	;# 
  2225  0D9B                     	;# 
  2226  0D9C                     	;# 
  2227  0D9C                     	;# 
  2228  0D9D                     	;# 
  2229  0D9D                     	;# 
  2230  0D9E                     	;# 
  2231  0D9F                     	;# 
  2232  0DA0                     	;# 
  2233  0DA1                     	;# 
  2234  0DA1                     	;# 
  2235  0DA2                     	;# 
  2236  0DA3                     	;# 
  2237  0DA3                     	;# 
  2238  0DA4                     	;# 
  2239  0DA5                     	;# 
  2240  0DA5                     	;# 
  2241  0DA6                     	;# 
  2242  0DA7                     	;# 
  2243  0DA7                     	;# 
  2244  0DA8                     	;# 
  2245  0DA9                     	;# 
  2246  0DA9                     	;# 
  2247  0DAA                     	;# 
  2248  0DAB                     	;# 
  2249  0DAC                     	;# 
  2250  0DAC                     	;# 
  2251  0DAD                     	;# 
  2252  0DAD                     	;# 
  2253  0DAE                     	;# 
  2254  0DAF                     	;# 
  2255  0DB0                     	;# 
  2256  0DB1                     	;# 
  2257  0DB1                     	;# 
  2258  0DB2                     	;# 
  2259  0DB3                     	;# 
  2260  0DB3                     	;# 
  2261  0DB4                     	;# 
  2262  0DB5                     	;# 
  2263  0DB5                     	;# 
  2264  0DB6                     	;# 
  2265  0DB7                     	;# 
  2266  0DB7                     	;# 
  2267  0DB8                     	;# 
  2268  0DB9                     	;# 
  2269  0DB9                     	;# 
  2270  0DBA                     	;# 
  2271  0DBB                     	;# 
  2272  0DBC                     	;# 
  2273  0DBC                     	;# 
  2274  0DBD                     	;# 
  2275  0DBD                     	;# 
  2276  0DBE                     	;# 
  2277  0DBF                     	;# 
  2278  0DC0                     	;# 
  2279  0FE4                     	;# 
  2280  0FE5                     	;# 
  2281  0FE6                     	;# 
  2282  0FE7                     	;# 
  2283  0FE8                     	;# 
  2284  0FE8                     	;# 
  2285  0FE9                     	;# 
  2286  0FEA                     	;# 
  2287  0FEA                     	;# 
  2288  0FEB                     	;# 
  2289  0FED                     	;# 
  2290  0FEE                     	;# 
  2291  0FEE                     	;# 
  2292  0FEF                     	;# 
  2293  0000                     	;# 
  2294  0001                     	;# 
  2295  0002                     	;# 
  2296  0003                     	;# 
  2297  0004                     	;# 
  2298  0005                     	;# 
  2299  0006                     	;# 
  2300  0007                     	;# 
  2301  0008                     	;# 
  2302  0009                     	;# 
  2303  000A                     	;# 
  2304  000B                     	;# 
  2305  000C                     	;# 
  2306  0011                     	;# 
  2307  0012                     	;# 
  2308  0013                     	;# 
  2309  0015                     	;# 
  2310  0016                     	;# 
  2311  0016                     	;# 
  2312  0017                     	;# 
  2313  0018                     	;# 
  2314  0019                     	;# 
  2315  001A                     	;# 
  2316  001B                     	;# 
  2317  001C                     	;# 
  2318  008C                     	;# 
  2319  0091                     	;# 
  2320  0092                     	;# 
  2321  0093                     	;# 
  2322  0095                     	;# 
  2323  0096                     	;# 
  2324  0097                     	;# 
  2325  0098                     	;# 
  2326  0099                     	;# 
  2327  009A                     	;# 
  2328  009B                     	;# 
  2329  009B                     	;# 
  2330  009C                     	;# 
  2331  009D                     	;# 
  2332  009E                     	;# 
  2333  009F                     	;# 
  2334  010C                     	;# 
  2335  0111                     	;# 
  2336  0112                     	;# 
  2337  0115                     	;# 
  2338  0116                     	;# 
  2339  0117                     	;# 
  2340  0118                     	;# 
  2341  0119                     	;# 
  2342  011D                     	;# 
  2343  011D                     	;# 
  2344  018C                     	;# 
  2345  0191                     	;# 
  2346  0191                     	;# 
  2347  0192                     	;# 
  2348  0193                     	;# 
  2349  0193                     	;# 
  2350  0194                     	;# 
  2351  0195                     	;# 
  2352  0196                     	;# 
  2353  0199                     	;# 
  2354  019A                     	;# 
  2355  019B                     	;# 
  2356  019B                     	;# 
  2357  019C                     	;# 
  2358  019D                     	;# 
  2359  019E                     	;# 
  2360  019F                     	;# 
  2361  020C                     	;# 
  2362  028C                     	;# 
  2363  030C                     	;# 
  2364  038C                     	;# 
  2365  0391                     	;# 
  2366  0392                     	;# 
  2367  0393                     	;# 
  2368  0691                     	;# 
  2369  0692                     	;# 
  2370  0693                     	;# 
  2371  0694                     	;# 
  2372  0695                     	;# 
  2373  0D8E                     	;# 
  2374  0D8F                     	;# 
  2375  0D90                     	;# 
  2376  0D91                     	;# 
  2377  0D91                     	;# 
  2378  0D92                     	;# 
  2379  0D93                     	;# 
  2380  0D93                     	;# 
  2381  0D94                     	;# 
  2382  0D95                     	;# 
  2383  0D95                     	;# 
  2384  0D96                     	;# 
  2385  0D97                     	;# 
  2386  0D97                     	;# 
  2387  0D98                     	;# 
  2388  0D99                     	;# 
  2389  0D99                     	;# 
  2390  0D9A                     	;# 
  2391  0D9B                     	;# 
  2392  0D9C                     	;# 
  2393  0D9C                     	;# 
  2394  0D9D                     	;# 
  2395  0D9D                     	;# 
  2396  0D9E                     	;# 
  2397  0D9F                     	;# 
  2398  0DA0                     	;# 
  2399  0DA1                     	;# 
  2400  0DA1                     	;# 
  2401  0DA2                     	;# 
  2402  0DA3                     	;# 
  2403  0DA3                     	;# 
  2404  0DA4                     	;# 
  2405  0DA5                     	;# 
  2406  0DA5                     	;# 
  2407  0DA6                     	;# 
  2408  0DA7                     	;# 
  2409  0DA7                     	;# 
  2410  0DA8                     	;# 
  2411  0DA9                     	;# 
  2412  0DA9                     	;# 
  2413  0DAA                     	;# 
  2414  0DAB                     	;# 
  2415  0DAC                     	;# 
  2416  0DAC                     	;# 
  2417  0DAD                     	;# 
  2418  0DAD                     	;# 
  2419  0DAE                     	;# 
  2420  0DAF                     	;# 
  2421  0DB0                     	;# 
  2422  0DB1                     	;# 
  2423  0DB1                     	;# 
  2424  0DB2                     	;# 
  2425  0DB3                     	;# 
  2426  0DB3                     	;# 
  2427  0DB4                     	;# 
  2428  0DB5                     	;# 
  2429  0DB5                     	;# 
  2430  0DB6                     	;# 
  2431  0DB7                     	;# 
  2432  0DB7                     	;# 
  2433  0DB8                     	;# 
  2434  0DB9                     	;# 
  2435  0DB9                     	;# 
  2436  0DBA                     	;# 
  2437  0DBB                     	;# 
  2438  0DBC                     	;# 
  2439  0DBC                     	;# 
  2440  0DBD                     	;# 
  2441  0DBD                     	;# 
  2442  0DBE                     	;# 
  2443  0DBF                     	;# 
  2444  0DC0                     	;# 
  2445  0FE4                     	;# 
  2446  0FE5                     	;# 
  2447  0FE6                     	;# 
  2448  0FE7                     	;# 
  2449  0FE8                     	;# 
  2450  0FE8                     	;# 
  2451  0FE9                     	;# 
  2452  0FEA                     	;# 
  2453  0FEA                     	;# 
  2454  0FEB                     	;# 
  2455  0FED                     	;# 
  2456  0FEE                     	;# 
  2457  0FEE                     	;# 
  2458  0FEF                     	;# 
  2459  0000                     	;# 
  2460  0001                     	;# 
  2461  0002                     	;# 
  2462  0003                     	;# 
  2463  0004                     	;# 
  2464  0005                     	;# 
  2465  0006                     	;# 
  2466  0007                     	;# 
  2467  0008                     	;# 
  2468  0009                     	;# 
  2469  000A                     	;# 
  2470  000B                     	;# 
  2471  000C                     	;# 
  2472  0011                     	;# 
  2473  0012                     	;# 
  2474  0013                     	;# 
  2475  0015                     	;# 
  2476  0016                     	;# 
  2477  0016                     	;# 
  2478  0017                     	;# 
  2479  0018                     	;# 
  2480  0019                     	;# 
  2481  001A                     	;# 
  2482  001B                     	;# 
  2483  001C                     	;# 
  2484  008C                     	;# 
  2485  0091                     	;# 
  2486  0092                     	;# 
  2487  0093                     	;# 
  2488  0095                     	;# 
  2489  0096                     	;# 
  2490  0097                     	;# 
  2491  0098                     	;# 
  2492  0099                     	;# 
  2493  009A                     	;# 
  2494  009B                     	;# 
  2495  009B                     	;# 
  2496  009C                     	;# 
  2497  009D                     	;# 
  2498  009E                     	;# 
  2499  009F                     	;# 
  2500  010C                     	;# 
  2501  0111                     	;# 
  2502  0112                     	;# 
  2503  0115                     	;# 
  2504  0116                     	;# 
  2505  0117                     	;# 
  2506  0118                     	;# 
  2507  0119                     	;# 
  2508  011D                     	;# 
  2509  011D                     	;# 
  2510  018C                     	;# 
  2511  0191                     	;# 
  2512  0191                     	;# 
  2513  0192                     	;# 
  2514  0193                     	;# 
  2515  0193                     	;# 
  2516  0194                     	;# 
  2517  0195                     	;# 
  2518  0196                     	;# 
  2519  0199                     	;# 
  2520  019A                     	;# 
  2521  019B                     	;# 
  2522  019B                     	;# 
  2523  019C                     	;# 
  2524  019D                     	;# 
  2525  019E                     	;# 
  2526  019F                     	;# 
  2527  020C                     	;# 
  2528  028C                     	;# 
  2529  030C                     	;# 
  2530  038C                     	;# 
  2531  0391                     	;# 
  2532  0392                     	;# 
  2533  0393                     	;# 
  2534  0691                     	;# 
  2535  0692                     	;# 
  2536  0693                     	;# 
  2537  0694                     	;# 
  2538  0695                     	;# 
  2539  0D8E                     	;# 
  2540  0D8F                     	;# 
  2541  0D90                     	;# 
  2542  0D91                     	;# 
  2543  0D91                     	;# 
  2544  0D92                     	;# 
  2545  0D93                     	;# 
  2546  0D93                     	;# 
  2547  0D94                     	;# 
  2548  0D95                     	;# 
  2549  0D95                     	;# 
  2550  0D96                     	;# 
  2551  0D97                     	;# 
  2552  0D97                     	;# 
  2553  0D98                     	;# 
  2554  0D99                     	;# 
  2555  0D99                     	;# 
  2556  0D9A                     	;# 
  2557  0D9B                     	;# 
  2558  0D9C                     	;# 
  2559  0D9C                     	;# 
  2560  0D9D                     	;# 
  2561  0D9D                     	;# 
  2562  0D9E                     	;# 
  2563  0D9F                     	;# 
  2564  0DA0                     	;# 
  2565  0DA1                     	;# 
  2566  0DA1                     	;# 
  2567  0DA2                     	;# 
  2568  0DA3                     	;# 
  2569  0DA3                     	;# 
  2570  0DA4                     	;# 
  2571  0DA5                     	;# 
  2572  0DA5                     	;# 
  2573  0DA6                     	;# 
  2574  0DA7                     	;# 
  2575  0DA7                     	;# 
  2576  0DA8                     	;# 
  2577  0DA9                     	;# 
  2578  0DA9                     	;# 
  2579  0DAA                     	;# 
  2580  0DAB                     	;# 
  2581  0DAC                     	;# 
  2582  0DAC                     	;# 
  2583  0DAD                     	;# 
  2584  0DAD                     	;# 
  2585  0DAE                     	;# 
  2586  0DAF                     	;# 
  2587  0DB0                     	;# 
  2588  0DB1                     	;# 
  2589  0DB1                     	;# 
  2590  0DB2                     	;# 
  2591  0DB3                     	;# 
  2592  0DB3                     	;# 
  2593  0DB4                     	;# 
  2594  0DB5                     	;# 
  2595  0DB5                     	;# 
  2596  0DB6                     	;# 
  2597  0DB7                     	;# 
  2598  0DB7                     	;# 
  2599  0DB8                     	;# 
  2600  0DB9                     	;# 
  2601  0DB9                     	;# 
  2602  0DBA                     	;# 
  2603  0DBB                     	;# 
  2604  0DBC                     	;# 
  2605  0DBC                     	;# 
  2606  0DBD                     	;# 
  2607  0DBD                     	;# 
  2608  0DBE                     	;# 
  2609  0DBF                     	;# 
  2610  0DC0                     	;# 
  2611  0FE4                     	;# 
  2612  0FE5                     	;# 
  2613  0FE6                     	;# 
  2614  0FE7                     	;# 
  2615  0FE8                     	;# 
  2616  0FE8                     	;# 
  2617  0FE9                     	;# 
  2618  0FEA                     	;# 
  2619  0FEA                     	;# 
  2620  0FEB                     	;# 
  2621  0FED                     	;# 
  2622  0FEE                     	;# 
  2623  0FEE                     	;# 
  2624  0FEF                     	;_moves
  2625                           
  2626                           	psect	idataBANK0
  2627  0000                     __pidataBANK0:	
  2628                           
  2629                           	psect	nvCOMMON
  2630  0079                     __pnvCOMMON:	
  2631  0079                     _timer1ReloadVal:	
  2632  0079                     	ds	2
  2633  007B                     _IOCAF5_InterruptHandler:	
  2634  007B                     	ds	2
  2635                           
  2636                           	psect	nvBANK0
  2637  0046                     __pnvBANK0:	
  2638  0046                     _TMR1_InterruptHandler:	
  2639  0046                     	ds	2
  2640  0048                     _IOCAF0_InterruptHandler:	
  2641  0048                     	ds	2
  2642  000C                     _PORTAbits	set	12
  2643  0018                     _T1CONbits	set	24
  2644  0018                     _T1CON	set	24
  2645  0016                     _TMR1L	set	22
  2646  0017                     _TMR1H	set	23
  2647  0019                     _T1GCON	set	25
  2648  0011                     _PIR1bits	set	17
  2649  000B                     _INTCONbits	set	11
  2650  0091                     _PIE1bits	set	145
  2651  009D                     _ADCON0bits	set	157
  2652  009C                     _ADRESH	set	156
  2653  009B                     _ADRESL	set	155
  2654  009F                     _ADCON2	set	159
  2655  009E                     _ADCON1	set	158
  2656  009D                     _ADCON0	set	157
  2657  0097                     _WDTCON	set	151
  2658  0098                     _OSCTUNE	set	152
  2659  0099                     _OSCCON	set	153
  2660  0095                     _OPTION_REGbits	set	149
  2661  008C                     _TRISA	set	140
  2662  0116                     _BORCON	set	278
  2663  011D                     _APFCON	set	285
  2664  010C                     _LATA	set	268
  2665  019A                     _TXREG	set	410
  2666  019D                     _RCSTAbits	set	413
  2667  019E                     _TXSTAbits	set	414
  2668  019C                     _SPBRGH	set	412
  2669  019B                     _SPBRGL	set	411
  2670  019E                     _TXSTA	set	414
  2671  019D                     _RCSTA	set	413
  2672  019F                     _BAUDCON	set	415
  2673  018C                     _ANSELA	set	396
  2674  020C                     _WPUA	set	524
  2675  028C                     _ODCONA	set	652
  2676  030C                     _SLRCONA	set	780
  2677  0391                     _IOCAPbits	set	913
  2678  0392                     _IOCANbits	set	914
  2679  0393                     _IOCAFbits	set	915
  2680  0DBF                     _PWM3LDCONbits	set	3519
  2681  0DBB                     _PWM3CONbits	set	3515
  2682  0DBB                     _PWM3CON	set	3515
  2683  0DB9                     _PWM3TMRL	set	3513
  2684  0DBA                     _PWM3TMRH	set	3514
  2685  0DB7                     _PWM3OFL	set	3511
  2686  0DB8                     _PWM3OFH	set	3512
  2687  0DB5                     _PWM3PRL	set	3509
  2688  0DB6                     _PWM3PRH	set	3510
  2689  0DB3                     _PWM3DCL	set	3507
  2690  0DB4                     _PWM3DCH	set	3508
  2691  0DB1                     _PWM3PHL	set	3505
  2692  0DB2                     _PWM3PHH	set	3506
  2693  0DC0                     _PWM3OFCON	set	3520
  2694  0DBF                     _PWM3LDCON	set	3519
  2695  0DBE                     _PWM3CLKCON	set	3518
  2696  0DBD                     _PWM3INTF	set	3517
  2697  0DBC                     _PWM3INTE	set	3516
  2698  0DAF                     _PWM2LDCONbits	set	3503
  2699  0DAB                     _PWM2CONbits	set	3499
  2700  0DAB                     _PWM2CON	set	3499
  2701  0DA9                     _PWM2TMRL	set	3497
  2702  0DAA                     _PWM2TMRH	set	3498
  2703  0DA7                     _PWM2OFL	set	3495
  2704  0DA8                     _PWM2OFH	set	3496
  2705  0DA5                     _PWM2PRL	set	3493
  2706  0DA6                     _PWM2PRH	set	3494
  2707  0DA3                     _PWM2DCL	set	3491
  2708  0DA4                     _PWM2DCH	set	3492
  2709  0DA1                     _PWM2PHL	set	3489
  2710  0DA2                     _PWM2PHH	set	3490
  2711  0DB0                     _PWM2OFCON	set	3504
  2712  0DAF                     _PWM2LDCON	set	3503
  2713  0DAE                     _PWM2CLKCON	set	3502
  2714  0DAD                     _PWM2INTF	set	3501
  2715  0DAC                     _PWM2INTE	set	3500
  2716  0D9F                     _PWM1LDCONbits	set	3487
  2717  0D9B                     _PWM1CONbits	set	3483
  2718  0D9B                     _PWM1CON	set	3483
  2719  0D99                     _PWM1TMRL	set	3481
  2720  0D9A                     _PWM1TMRH	set	3482
  2721  0D97                     _PWM1OFL	set	3479
  2722  0D98                     _PWM1OFH	set	3480
  2723  0D95                     _PWM1PRL	set	3477
  2724  0D96                     _PWM1PRH	set	3478
  2725  0D93                     _PWM1DCL	set	3475
  2726  0D94                     _PWM1DCH	set	3476
  2727  0D91                     _PWM1PHL	set	3473
  2728  0D92                     _PWM1PHH	set	3474
  2729  0DA0                     _PWM1OFCON	set	3488
  2730  0D9F                     _PWM1LDCON	set	3487
  2731  0D9E                     _PWM1CLKCON	set	3486
  2732  0D9D                     _PWM1INTF	set	3485
  2733  0D9C                     _PWM1INTE	set	3484
  2734                           
  2735                           ; #config settings
  2736  0000                     
  2737                           	psect	cinit
  2738  0017                     start_initialization:	
  2739  0017                     __initialization:		;BIGRAM
  2740                           
  2741                           ;initializer for _top_score
  2742  0017  3001               	movlw	1
  2743  0018  00CA               	movwf	__pdataBANK0& (0+127)
  2744                           
  2745                           ;initializer for _game_level
  2746  0019  00CB               	movwf	(__pdataBANK0+1)& (0+127)
  2747                           
  2748                           ; Clear objects allocated to BIGRAM
  2749  001A  308C               	movlw	140
  2750  001B  0084               	movwf	4
  2751  001C  3020               	movlw	32
  2752  001D  0085               	movwf	5
  2753  001E  3064               	movlw	100
  2754  001F  00FE               	movwf	126
  2755  0020  3000               	movlw	0
  2756  0021  01FF               	clrf	127
  2757  0022  24A0               	fcall	clear_ram0
  2758                           
  2759                           ; Clear objects allocated to BANK0
  2760  0023  01BE               	clrf	__pbssBANK0& (0+127)
  2761  0024  01BF               	clrf	(__pbssBANK0+1)& (0+127)
  2762  0025  01C0               	clrf	(__pbssBANK0+2)& (0+127)
  2763  0026  01C1               	clrf	(__pbssBANK0+3)& (0+127)
  2764  0027  01C2               	clrf	(__pbssBANK0+4)& (0+127)
  2765  0028  01C3               	clrf	(__pbssBANK0+5)& (0+127)
  2766  0029  01C4               	clrf	(__pbssBANK0+6)& (0+127)
  2767  002A  01C5               	clrf	(__pbssBANK0+7)& (0+127)
  2768  002B                     end_of_initialization:	
  2769                           ;End of C runtime variable initialization code
  2770                           
  2771  002B                     __end_of__initialization:	
  2772  002B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2773  002C  0020               	movlb	0
  2774  002D  28DA               	ljmp	_main	;jump to C main() function
  2775                           
  2776                           	psect	bssBANK0
  2777  003E                     __pbssBANK0:	
  2778  003E                     _move_current:	
  2779  003E                     	ds	1
  2780  003F                     _seed:	
  2781  003F                     	ds	4
  2782  0043                     _buttons:	
  2783  0043                     	ds	3
  2784                           
  2785                           	psect	dataBANK0
  2786  004A                     __pdataBANK0:	
  2787  004A                     _top_score:	
  2788  004A                     	ds	1
  2789  004B                     _game_level:	
  2790  004B                     	ds	1
  2791                           
  2792                           	psect	clrtext
  2793  04A0                     clear_ram0:	
  2794                           ;	Called with FSR0 containing the base address, and
  2795                           ;	btemp/btemp+1 has the size to clear
  2796                           
  2797  04A0  0064               	clrwdt	;clear the watchdog before getting into this loop
  2798  04A1                     clrloop0:	
  2799  04A1  3001               	movlw	1
  2800  04A2  0180               	clrf	0	;clear RAM location pointed to by FSR
  2801  04A3  3101               	addfsr 0,1
  2802  04A4  02FE               	subwf	126,f
  2803  04A5  3000               	movlw	0
  2804  04A6  3BFF               	subwfb	127,f
  2805  04A7  087F               	movf	127,w
  2806  04A8  047E               	iorwf	126,w
  2807  04A9  1903               	btfsc	3,2
  2808  04AA  3400               	retlw	0	;all done for this memory range, return
  2809  04AB  2CA1               	goto	clrloop0	;have we reached the end yet?
  2810                           
  2811                           	psect	cstackCOMMON
  2812  0070                     __pcstackCOMMON:	
  2813  0070                     ?_IOCAF0_DefaultInterruptHandler:	
  2814  0070                     ??_IOCAF0_DefaultInterruptHandler:	
  2815                           ; 1 bytes @ 0x0
  2816                           
  2817  0070                     ?_IOCAF5_DefaultInterruptHandler:	
  2818                           ; 1 bytes @ 0x0
  2819                           
  2820  0070                     ??_IOCAF5_DefaultInterruptHandler:	
  2821                           ; 1 bytes @ 0x0
  2822                           
  2823  0070                     ?_IOCAF0_ISR:	
  2824                           ; 1 bytes @ 0x0
  2825                           
  2826  0070                     ??_IOCAF0_ISR:	
  2827                           ; 1 bytes @ 0x0
  2828                           
  2829  0070                     ?_IOCAF5_ISR:	
  2830                           ; 1 bytes @ 0x0
  2831                           
  2832  0070                     ?_OSCILLATOR_Initialize:	
  2833                           ; 1 bytes @ 0x0
  2834                           
  2835  0070                     ?_WDT_Initialize:	
  2836                           ; 1 bytes @ 0x0
  2837                           
  2838  0070                     ?_PWM1_Initialize:	
  2839                           ; 1 bytes @ 0x0
  2840                           
  2841  0070                     ?_PWM2_Initialize:	
  2842                           ; 1 bytes @ 0x0
  2843                           
  2844  0070                     ?_ADC1_Initialize:	
  2845                           ; 1 bytes @ 0x0
  2846                           
  2847  0070                     ?_PWM3_Initialize:	
  2848                           ; 1 bytes @ 0x0
  2849                           
  2850  0070                     ?_TMR1_Initialize:	
  2851                           ; 1 bytes @ 0x0
  2852                           
  2853  0070                     ?_EUSART_Initialize:	
  2854                           ; 1 bytes @ 0x0
  2855                           
  2856  0070                     ?_TMR1_ISR:	
  2857                           ; 1 bytes @ 0x0
  2858                           
  2859  0070                     ?_TMR1_DefaultInterruptHandler:	
  2860                           ; 1 bytes @ 0x0
  2861                           
  2862  0070                     ??_TMR1_DefaultInterruptHandler:	
  2863                           ; 1 bytes @ 0x0
  2864                           
  2865  0070                     ?_TMR1_CallBack:	
  2866                           ; 1 bytes @ 0x0
  2867                           
  2868  0070                     ??_TMR1_CallBack:	
  2869                           ; 1 bytes @ 0x0
  2870                           
  2871  0070                     ?_machine_warn_user:	
  2872                           ; 1 bytes @ 0x0
  2873                           
  2874  0070                     ?_game_initialise:	
  2875                           ; 1 bytes @ 0x0
  2876                           
  2877  0070                     ?_checkButtons:	
  2878                           ; 1 bytes @ 0x0
  2879                           
  2880  0070                     ?_machine_notify_user:	
  2881                           ; 1 bytes @ 0x0
  2882                           
  2883  0070                     ?_flashValue:	
  2884                           ; 1 bytes @ 0x0
  2885                           
  2886  0070                     ?_game_topscore:	
  2887                           ; 1 bytes @ 0x0
  2888                           
  2889  0070                     ?_game_check_it:	
  2890                           ; 1 bytes @ 0x0
  2891                           
  2892  0070                     ?_machine_led_flash:	
  2893                           ; 1 bytes @ 0x0
  2894                           
  2895  0070                     ?_PIN_MANAGER_Initialize:	
  2896                           ; 1 bytes @ 0x0
  2897                           
  2898  0070                     ?_PIN_MANAGER_IOC:	
  2899                           ; 1 bytes @ 0x0
  2900                           
  2901  0070                     ?_SYSTEM_Initialize:	
  2902                           ; 1 bytes @ 0x0
  2903                           
  2904  0070                     ?_EUSART_is_tx_ready:	
  2905                           ; 1 bytes @ 0x0
  2906                           
  2907  0070                     ??_EUSART_is_tx_ready:	
  2908                           ; 1 bytes @ 0x0
  2909                           
  2910  0070                     ?_EUSART_is_tx_done:	
  2911                           ; 1 bytes @ 0x0
  2912                           
  2913  0070                     ??_EUSART_is_tx_done:	
  2914                           ; 1 bytes @ 0x0
  2915                           
  2916  0070                     ?_EUSART_Write:	
  2917                           ; 1 bytes @ 0x0
  2918                           
  2919  0070                     ??_EUSART_Write:	
  2920                           ; 1 bytes @ 0x0
  2921                           
  2922  0070                     ?_PWM1_Start:	
  2923                           ; 1 bytes @ 0x0
  2924                           
  2925  0070                     ?_PWM1_Stop:	
  2926                           ; 1 bytes @ 0x0
  2927                           
  2928  0070                     ?_PWM1_LoadBufferSet:	
  2929                           ; 1 bytes @ 0x0
  2930                           
  2931  0070                     ?_PWM2_Start:	
  2932                           ; 1 bytes @ 0x0
  2933                           
  2934  0070                     ?_PWM2_Stop:	
  2935                           ; 1 bytes @ 0x0
  2936                           
  2937  0070                     ?_PWM2_LoadBufferSet:	
  2938                           ; 1 bytes @ 0x0
  2939                           
  2940  0070                     ?_PWM3_Start:	
  2941                           ; 1 bytes @ 0x0
  2942                           
  2943  0070                     ?_PWM3_Stop:	
  2944                           ; 1 bytes @ 0x0
  2945                           
  2946  0070                     ?_PWM3_LoadBufferSet:	
  2947                           ; 1 bytes @ 0x0
  2948                           
  2949  0070                     ?_INTERRUPT_InterruptManager:	
  2950                           ; 1 bytes @ 0x0
  2951                           
  2952  0070                     ?_TMR1_WriteTimer:	
  2953                           ; 1 bytes @ 0x0
  2954                           
  2955  0070                     ?_main:	
  2956                           ; 1 bytes @ 0x0
  2957                           
  2958  0070                     ?_enableSerial:	
  2959                           ; 1 bytes @ 0x0
  2960                           
  2961  0070                     ??_enableSerial:	
  2962                           ; 1 bytes @ 0x0
  2963                           
  2964  0070                     ?_disableSerial:	
  2965                           ; 1 bytes @ 0x0
  2966                           
  2967  0070                     ?_stopLEDs:	
  2968                           ; 1 bytes @ 0x0
  2969                           
  2970  0070                     ?_startLEDs:	
  2971                           ; 1 bytes @ 0x0
  2972                           
  2973  0070                     ?_connectHandler:	
  2974                           ; 1 bytes @ 0x0
  2975                           
  2976  0070                     ?_buttonHandler:	
  2977                           ; 1 bytes @ 0x0
  2978                           
  2979  0070                     ??_buttonHandler:	
  2980                           ; 1 bytes @ 0x0
  2981                           
  2982  0070                     ?_new_level:	
  2983                           ; 1 bytes @ 0x0
  2984                           
  2985  0070                     ?i1_PWM1_Start:	
  2986                           ; 1 bytes @ 0x0
  2987                           
  2988  0070                     ??i1_PWM1_Start:	
  2989                           ; 1 bytes @ 0x0
  2990                           
  2991  0070                     ?i1_PWM1_LoadBufferSet:	
  2992                           ; 1 bytes @ 0x0
  2993                           
  2994  0070                     ??i1_PWM1_LoadBufferSet:	
  2995                           ; 1 bytes @ 0x0
  2996                           
  2997  0070                     ?i1_PWM1_DutyCycleSet:	
  2998                           ; 1 bytes @ 0x0
  2999                           
  3000  0070                     ?i1_PWM2_Start:	
  3001                           ; 1 bytes @ 0x0
  3002                           
  3003  0070                     ??i1_PWM2_Start:	
  3004                           ; 1 bytes @ 0x0
  3005                           
  3006  0070                     ?i1_PWM2_LoadBufferSet:	
  3007                           ; 1 bytes @ 0x0
  3008                           
  3009  0070                     ??i1_PWM2_LoadBufferSet:	
  3010                           ; 1 bytes @ 0x0
  3011                           
  3012  0070                     ?i1_PWM2_DutyCycleSet:	
  3013                           ; 1 bytes @ 0x0
  3014                           
  3015  0070                     ?i1_PWM3_Start:	
  3016                           ; 1 bytes @ 0x0
  3017                           
  3018  0070                     ??i1_PWM3_Start:	
  3019                           ; 1 bytes @ 0x0
  3020                           
  3021  0070                     ?i1_PWM3_LoadBufferSet:	
  3022                           ; 1 bytes @ 0x0
  3023                           
  3024  0070                     ??i1_PWM3_LoadBufferSet:	
  3025                           ; 1 bytes @ 0x0
  3026                           
  3027  0070                     ?i1_PWM3_DutyCycleSet:	
  3028                           ; 1 bytes @ 0x0
  3029                           
  3030  0070                     ?i1_disableSerial:	
  3031                           ; 1 bytes @ 0x0
  3032                           
  3033  0070                     ??i1_disableSerial:	
  3034                           ; 1 bytes @ 0x0
  3035                           
  3036  0070                     ?i1_startLEDs:	
  3037                           ; 1 bytes @ 0x0
  3038                           
  3039  0070                     ??i1_startLEDs:	
  3040                           ; 1 bytes @ 0x0
  3041                           
  3042  0070                     _EUSART_is_tx_ready$373:	
  3043                           ; 1 bytes @ 0x0
  3044                           
  3045  0070                     EUSART_Write@txData:	
  3046                           ; 1 bytes @ 0x0
  3047                           
  3048  0070                     TMR1_WriteTimer@timerVal:	
  3049                           ; 1 bytes @ 0x0
  3050                           
  3051  0070                     i1PWM1_DutyCycleSet@dutyCycleCount:	
  3052                           ; 2 bytes @ 0x0
  3053                           
  3054  0070                     i1PWM2_DutyCycleSet@dutyCycleCount:	
  3055                           ; 2 bytes @ 0x0
  3056                           
  3057  0070                     i1PWM3_DutyCycleSet@dutyCycleCount:	
  3058                           ; 2 bytes @ 0x0
  3059                           
  3060                           
  3061                           ; 2 bytes @ 0x0
  3062  0070                     	ds	2
  3063  0072                     ??_TMR1_ISR:	
  3064  0072                     ??_TMR1_WriteTimer:	
  3065                           ; 1 bytes @ 0x2
  3066                           
  3067  0072                     ??i1_PWM1_DutyCycleSet:	
  3068                           ; 1 bytes @ 0x2
  3069                           
  3070  0072                     ??i1_PWM2_DutyCycleSet:	
  3071                           ; 1 bytes @ 0x2
  3072                           
  3073  0072                     ??i1_PWM3_DutyCycleSet:	
  3074                           ; 1 bytes @ 0x2
  3075                           
  3076  0072                     ?i1_setLEDs:	
  3077                           ; 1 bytes @ 0x2
  3078                           
  3079  0072                     i1setLEDs@led1:	
  3080                           ; 1 bytes @ 0x2
  3081                           
  3082                           
  3083                           ; 2 bytes @ 0x2
  3084  0072                     	ds	2
  3085  0074                     i1setLEDs@led2:	
  3086                           
  3087                           ; 2 bytes @ 0x4
  3088  0074                     	ds	2
  3089  0076                     i1setLEDs@led3:	
  3090                           
  3091                           ; 2 bytes @ 0x6
  3092  0076                     	ds	2
  3093  0078                     ??_connectHandler:	
  3094  0078                     ??i1_setLEDs:	
  3095                           ; 1 bytes @ 0x8
  3096                           
  3097                           
  3098                           ; 1 bytes @ 0x8
  3099  0078                     	ds	1
  3100  0079                     ??_IOCAF5_ISR:	
  3101  0079                     ??_PIN_MANAGER_IOC:	
  3102                           ; 1 bytes @ 0x9
  3103                           
  3104  0079                     ??_INTERRUPT_InterruptManager:	
  3105                           ; 1 bytes @ 0x9
  3106                           
  3107                           
  3108                           	psect	cstackBANK0
  3109  0020                     __pcstackBANK0:	
  3110                           ; 1 bytes @ 0x9
  3111                           
  3112  0020                     ?_IOCAF0_SetInterruptHandler:	
  3113  0020                     ?_IOCAF5_SetInterruptHandler:	
  3114                           ; 1 bytes @ 0x0
  3115                           
  3116  0020                     ??_OSCILLATOR_Initialize:	
  3117                           ; 1 bytes @ 0x0
  3118                           
  3119  0020                     ??_WDT_Initialize:	
  3120                           ; 1 bytes @ 0x0
  3121                           
  3122  0020                     ??_PWM1_Initialize:	
  3123                           ; 1 bytes @ 0x0
  3124                           
  3125  0020                     ??_PWM2_Initialize:	
  3126                           ; 1 bytes @ 0x0
  3127                           
  3128  0020                     ??_ADC1_Initialize:	
  3129                           ; 1 bytes @ 0x0
  3130                           
  3131  0020                     ??_PWM3_Initialize:	
  3132                           ; 1 bytes @ 0x0
  3133                           
  3134  0020                     ??_EUSART_Initialize:	
  3135                           ; 1 bytes @ 0x0
  3136                           
  3137  0020                     ?_TMR1_SetInterruptHandler:	
  3138                           ; 1 bytes @ 0x0
  3139                           
  3140  0020                     ??_game_topscore:	
  3141                           ; 1 bytes @ 0x0
  3142                           
  3143  0020                     ??_PWM1_Start:	
  3144                           ; 1 bytes @ 0x0
  3145                           
  3146  0020                     ??_PWM1_Stop:	
  3147                           ; 1 bytes @ 0x0
  3148                           
  3149  0020                     ??_PWM1_LoadBufferSet:	
  3150                           ; 1 bytes @ 0x0
  3151                           
  3152  0020                     ?_PWM1_PhaseSet:	
  3153                           ; 1 bytes @ 0x0
  3154                           
  3155  0020                     ?_PWM1_DutyCycleSet:	
  3156                           ; 1 bytes @ 0x0
  3157                           
  3158  0020                     ?_PWM1_PeriodSet:	
  3159                           ; 1 bytes @ 0x0
  3160                           
  3161  0020                     ??_PWM2_Start:	
  3162                           ; 1 bytes @ 0x0
  3163                           
  3164  0020                     ??_PWM2_Stop:	
  3165                           ; 1 bytes @ 0x0
  3166                           
  3167  0020                     ??_PWM2_LoadBufferSet:	
  3168                           ; 1 bytes @ 0x0
  3169                           
  3170  0020                     ?_PWM2_PhaseSet:	
  3171                           ; 1 bytes @ 0x0
  3172                           
  3173  0020                     ?_PWM2_DutyCycleSet:	
  3174                           ; 1 bytes @ 0x0
  3175                           
  3176  0020                     ?_PWM2_PeriodSet:	
  3177                           ; 1 bytes @ 0x0
  3178                           
  3179  0020                     ??_PWM3_Start:	
  3180                           ; 1 bytes @ 0x0
  3181                           
  3182  0020                     ??_PWM3_Stop:	
  3183                           ; 1 bytes @ 0x0
  3184                           
  3185  0020                     ??_PWM3_LoadBufferSet:	
  3186                           ; 1 bytes @ 0x0
  3187                           
  3188  0020                     ?_PWM3_PhaseSet:	
  3189                           ; 1 bytes @ 0x0
  3190                           
  3191  0020                     ?_PWM3_DutyCycleSet:	
  3192                           ; 1 bytes @ 0x0
  3193                           
  3194  0020                     ?_PWM3_PeriodSet:	
  3195                           ; 1 bytes @ 0x0
  3196                           
  3197  0020                     ??_disableSerial:	
  3198                           ; 1 bytes @ 0x0
  3199                           
  3200  0020                     ??_stopLEDs:	
  3201                           ; 1 bytes @ 0x0
  3202                           
  3203  0020                     ??_startLEDs:	
  3204                           ; 1 bytes @ 0x0
  3205                           
  3206  0020                     ?___lbdiv:	
  3207                           ; 1 bytes @ 0x0
  3208                           
  3209  0020                     ?___lbmod:	
  3210                           ; 1 bytes @ 0x0
  3211                           
  3212  0020                     ?_ADC1_GetConversion:	
  3213                           ; 1 bytes @ 0x0
  3214                           
  3215  0020                     ?___wmul:	
  3216                           ; 2 bytes @ 0x0
  3217                           
  3218  0020                     ?___lmul:	
  3219                           ; 2 bytes @ 0x0
  3220                           
  3221  0020                     ___lbdiv@divisor:	
  3222                           ; 4 bytes @ 0x0
  3223                           
  3224  0020                     ___lbmod@divisor:	
  3225                           ; 1 bytes @ 0x0
  3226                           
  3227  0020                     IOCAF0_SetInterruptHandler@InterruptHandler:	
  3228                           ; 1 bytes @ 0x0
  3229                           
  3230  0020                     IOCAF5_SetInterruptHandler@InterruptHandler:	
  3231                           ; 2 bytes @ 0x0
  3232                           
  3233  0020                     PWM1_PhaseSet@phaseCount:	
  3234                           ; 2 bytes @ 0x0
  3235                           
  3236  0020                     PWM1_DutyCycleSet@dutyCycleCount:	
  3237                           ; 2 bytes @ 0x0
  3238                           
  3239  0020                     PWM1_PeriodSet@periodCount:	
  3240                           ; 2 bytes @ 0x0
  3241                           
  3242  0020                     PWM2_PhaseSet@phaseCount:	
  3243                           ; 2 bytes @ 0x0
  3244                           
  3245  0020                     PWM2_DutyCycleSet@dutyCycleCount:	
  3246                           ; 2 bytes @ 0x0
  3247                           
  3248  0020                     PWM2_PeriodSet@periodCount:	
  3249                           ; 2 bytes @ 0x0
  3250                           
  3251  0020                     PWM3_PhaseSet@phaseCount:	
  3252                           ; 2 bytes @ 0x0
  3253                           
  3254  0020                     PWM3_DutyCycleSet@dutyCycleCount:	
  3255                           ; 2 bytes @ 0x0
  3256                           
  3257  0020                     PWM3_PeriodSet@periodCount:	
  3258                           ; 2 bytes @ 0x0
  3259                           
  3260  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  3261                           ; 2 bytes @ 0x0
  3262                           
  3263  0020                     ___wmul@multiplier:	
  3264                           ; 2 bytes @ 0x0
  3265                           
  3266  0020                     ___lmul@multiplier:	
  3267                           ; 2 bytes @ 0x0
  3268                           
  3269                           
  3270                           ; 4 bytes @ 0x0
  3271  0020                     	ds	1
  3272  0021                     ??___lbdiv:	
  3273  0021                     ??___lbmod:	
  3274                           ; 1 bytes @ 0x1
  3275                           
  3276  0021                     ___lbdiv@dividend:	
  3277                           ; 1 bytes @ 0x1
  3278                           
  3279                           
  3280                           ; 1 bytes @ 0x1
  3281  0021                     	ds	1
  3282  0022                     ??_IOCAF0_SetInterruptHandler:	
  3283  0022                     ??_IOCAF5_SetInterruptHandler:	
  3284                           ; 1 bytes @ 0x2
  3285                           
  3286  0022                     ??_TMR1_Initialize:	
  3287                           ; 1 bytes @ 0x2
  3288                           
  3289  0022                     ??_TMR1_SetInterruptHandler:	
  3290                           ; 1 bytes @ 0x2
  3291                           
  3292  0022                     ?_setLED:	
  3293                           ; 1 bytes @ 0x2
  3294                           
  3295  0022                     ??_PIN_MANAGER_Initialize:	
  3296                           ; 1 bytes @ 0x2
  3297                           
  3298  0022                     ??_SYSTEM_Initialize:	
  3299                           ; 1 bytes @ 0x2
  3300                           
  3301  0022                     ??_PWM1_PhaseSet:	
  3302                           ; 1 bytes @ 0x2
  3303                           
  3304  0022                     ??_PWM1_DutyCycleSet:	
  3305                           ; 1 bytes @ 0x2
  3306                           
  3307  0022                     ??_PWM1_PeriodSet:	
  3308                           ; 1 bytes @ 0x2
  3309                           
  3310  0022                     ??_ADC1_GetConversion:	
  3311                           ; 1 bytes @ 0x2
  3312                           
  3313  0022                     ??_PWM2_PhaseSet:	
  3314                           ; 1 bytes @ 0x2
  3315                           
  3316  0022                     ??_PWM2_DutyCycleSet:	
  3317                           ; 1 bytes @ 0x2
  3318                           
  3319  0022                     ??_PWM2_PeriodSet:	
  3320                           ; 1 bytes @ 0x2
  3321                           
  3322  0022                     ??_PWM3_PhaseSet:	
  3323                           ; 1 bytes @ 0x2
  3324                           
  3325  0022                     ??_PWM3_DutyCycleSet:	
  3326                           ; 1 bytes @ 0x2
  3327                           
  3328  0022                     ??_PWM3_PeriodSet:	
  3329                           ; 1 bytes @ 0x2
  3330                           
  3331  0022                     ?_setLEDs:	
  3332                           ; 1 bytes @ 0x2
  3333                           
  3334  0022                     ___lbdiv@counter:	
  3335                           ; 1 bytes @ 0x2
  3336                           
  3337  0022                     ___lbmod@dividend:	
  3338                           ; 1 bytes @ 0x2
  3339                           
  3340  0022                     setLEDs@led1:	
  3341                           ; 1 bytes @ 0x2
  3342                           
  3343  0022                     setLED@duty:	
  3344                           ; 2 bytes @ 0x2
  3345                           
  3346  0022                     ___wmul@multiplicand:	
  3347                           ; 2 bytes @ 0x2
  3348                           
  3349                           
  3350                           ; 2 bytes @ 0x2
  3351  0022                     	ds	1
  3352  0023                     ADC1_GetConversion@channel:	
  3353  0023                     ___lbdiv@quotient:	
  3354                           ; 1 bytes @ 0x3
  3355                           
  3356  0023                     ___lbmod@counter:	
  3357                           ; 1 bytes @ 0x3
  3358                           
  3359                           
  3360                           ; 1 bytes @ 0x3
  3361  0023                     	ds	1
  3362  0024                     ??_checkButtons:	
  3363  0024                     ??___wmul:	
  3364                           ; 1 bytes @ 0x4
  3365                           
  3366  0024                     setLED@LEDno:	
  3367                           ; 1 bytes @ 0x4
  3368                           
  3369  0024                     ___lbmod@rem:	
  3370                           ; 1 bytes @ 0x4
  3371                           
  3372  0024                     setLEDs@led2:	
  3373                           ; 1 bytes @ 0x4
  3374                           
  3375  0024                     ___wmul@product:	
  3376                           ; 2 bytes @ 0x4
  3377                           
  3378  0024                     ___lmul@multiplicand:	
  3379                           ; 2 bytes @ 0x4
  3380                           
  3381                           
  3382                           ; 4 bytes @ 0x4
  3383  0024                     	ds	1
  3384  0025                     ??_setLED:	
  3385  0025                     ??_machine_led_flash:	
  3386                           ; 1 bytes @ 0x5
  3387                           
  3388  0025                     ?_flashit:	
  3389                           ; 1 bytes @ 0x5
  3390                           
  3391  0025                     checkButtons@i:	
  3392                           ; 1 bytes @ 0x5
  3393                           
  3394  0025                     flashit@flash:	
  3395                           ; 1 bytes @ 0x5
  3396                           
  3397                           
  3398                           ; 1 bytes @ 0x5
  3399  0025                     	ds	1
  3400  0026                     ??_flashit:	
  3401  0026                     checkButtons@buttons:	
  3402                           ; 1 bytes @ 0x6
  3403                           
  3404  0026                     machine_led_flash@led:	
  3405                           ; 1 bytes @ 0x6
  3406                           
  3407  0026                     setLEDs@led3:	
  3408                           ; 1 bytes @ 0x6
  3409                           
  3410                           
  3411                           ; 2 bytes @ 0x6
  3412  0026                     	ds	1
  3413  0027                     ??_new_level:	
  3414  0027                     new_level@j:	
  3415                           ; 1 bytes @ 0x7
  3416                           
  3417  0027                     flashit@colour:	
  3418                           ; 1 bytes @ 0x7
  3419                           
  3420  0027                     checkButtons@adc:	
  3421                           ; 1 bytes @ 0x7
  3422                           
  3423                           
  3424                           ; 2 bytes @ 0x7
  3425  0027                     	ds	1
  3426  0028                     ?_setupLEDs:	
  3427  0028                     ??_machine_warn_user:	
  3428                           ; 1 bytes @ 0x8
  3429                           
  3430  0028                     ??_machine_notify_user:	
  3431                           ; 1 bytes @ 0x8
  3432                           
  3433  0028                     ??_flashValue:	
  3434                           ; 1 bytes @ 0x8
  3435                           
  3436  0028                     ??_setLEDs:	
  3437                           ; 1 bytes @ 0x8
  3438                           
  3439  0028                     ??___lmul:	
  3440                           ; 1 bytes @ 0x8
  3441                           
  3442  0028                     setupLEDs@period:	
  3443                           ; 1 bytes @ 0x8
  3444                           
  3445  0028                     ___lmul@product:	
  3446                           ; 2 bytes @ 0x8
  3447                           
  3448                           
  3449                           ; 4 bytes @ 0x8
  3450  0028                     	ds	1
  3451  0029                     machine_warn_user@j:	
  3452  0029                     flashValue@times:	
  3453                           ; 1 bytes @ 0x9
  3454                           
  3455  0029                     machine_notify_user@i:	
  3456                           ; 1 bytes @ 0x9
  3457                           
  3458                           
  3459                           ; 2 bytes @ 0x9
  3460  0029                     	ds	1
  3461  002A                     ??_setupLEDs:	
  3462                           
  3463                           ; 1 bytes @ 0xA
  3464  002A                     	ds	1
  3465  002B                     machine_notify_user@val:	
  3466                           
  3467                           ; 2 bytes @ 0xB
  3468  002B                     	ds	1
  3469  002C                     ?_rand:	
  3470                           
  3471                           ; 2 bytes @ 0xC
  3472  002C                     	ds	1
  3473  002D                     machine_notify_user@j:	
  3474                           
  3475                           ; 2 bytes @ 0xD
  3476  002D                     	ds	1
  3477  002E                     ??_rand:	
  3478                           
  3479                           ; 1 bytes @ 0xE
  3480  002E                     	ds	4
  3481  0032                     ??_game_initialise:	
  3482                           
  3483                           ; 1 bytes @ 0x12
  3484  0032                     	ds	2
  3485  0034                     game_initialise@randomThree:	
  3486                           
  3487                           ; 2 bytes @ 0x14
  3488  0034                     	ds	2
  3489  0036                     game_initialise@i:	
  3490                           
  3491                           ; 1 bytes @ 0x16
  3492  0036                     	ds	1
  3493  0037                     ??_game_check_it:	
  3494                           
  3495                           ; 1 bytes @ 0x17
  3496  0037                     	ds	1
  3497  0038                     game_check_it@led:	
  3498                           
  3499                           ; 1 bytes @ 0x18
  3500  0038                     	ds	1
  3501  0039                     game_check_it@result:	
  3502                           
  3503                           ; 1 bytes @ 0x19
  3504  0039                     	ds	1
  3505  003A                     ??_main:	
  3506                           
  3507                           ; 1 bytes @ 0x1A
  3508  003A                     	ds	1
  3509  003B                     main@waitingForButton:	
  3510                           
  3511                           ; 1 bytes @ 0x1B
  3512  003B                     	ds	1
  3513  003C                     main@waitingForRelease:	
  3514                           
  3515                           ; 1 bytes @ 0x1C
  3516  003C                     	ds	1
  3517  003D                     main@button_pressed:	
  3518                           
  3519                           ; 1 bytes @ 0x1D
  3520  003D                     	ds	1
  3521                           
  3522                           	psect	maintext
  3523  00DA                     __pmaintext:	
  3524 ;;
  3525 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3526 ;;
  3527 ;; *************** function _main *****************
  3528 ;; Defined at:
  3529 ;;		line 31 in file "main.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;		None
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;  button_press    1   29[BANK0 ] enum E3499
  3534 ;;  waitingForRe    1   28[BANK0 ] _Bool 
  3535 ;;  waitingForBu    1   27[BANK0 ] _Bool 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      void 
  3538 ;; Registers used:
  3539 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3540 ;; Tracked objects:
  3541 ;;		On entry : B1F/0
  3542 ;;		On exit  : 1F/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3545 ;;      Params:         0       0       0       0
  3546 ;;      Locals:         0       3       0       0
  3547 ;;      Temps:          0       1       0       0
  3548 ;;      Totals:         0       4       0       0
  3549 ;;Total ram usage:        4 bytes
  3550 ;; Hardware stack levels required when called:   13
  3551 ;; This function calls:
  3552 ;;		_SYSTEM_Initialize
  3553 ;;		_checkButtons
  3554 ;;		_flashValue
  3555 ;;		_game_check_it
  3556 ;;		_game_initialise
  3557 ;;		_game_topscore
  3558 ;;		_machine_notify_user
  3559 ;;		_machine_warn_user
  3560 ;;		_setLED
  3561 ;;		_setupLEDs
  3562 ;; This function is called by:
  3563 ;;		Startup code after reset
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           
  3568                           ;psect for function _main
  3569  00DA                     _main:	
  3570                           
  3571                           ;main.c: 33:     SYSTEM_Initialize();
  3572                           
  3573                           ;incstack = 0
  3574                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3575  00DA  24D8               	fcall	_SYSTEM_Initialize
  3576                           
  3577                           ;main.c: 34:     setupLEDs(2000);
  3578  00DB  30D0               	movlw	208
  3579  00DC  0020               	movlb	0	; select bank0
  3580  00DD  00A8               	movwf	setupLEDs@period
  3581  00DE  3007               	movlw	7
  3582  00DF  00A9               	movwf	setupLEDs@period+1
  3583  00E0  230E               	fcall	_setupLEDs
  3584  00E1                     L1:	
  3585                           
  3586                           ;main.c: 35:     machine_warn_user();
  3587  00E1  2200               	fcall	_machine_warn_user
  3588                           
  3589                           ;main.c: 37:     game_initialise();
  3590  00E2  2268               	fcall	_game_initialise
  3591  00E3                     l2635:	
  3592                           
  3593                           ;main.c: 41:         _Bool waitingForButton = 1;
  3594  00E3  01BB               	clrf	main@waitingForButton
  3595  00E4  0ABB               	incf	main@waitingForButton,f
  3596  00E5                     l2637:	
  3597                           
  3598                           ;main.c: 43:             checkButtons(buttons);
  3599  00E5  3043               	movlw	(low (_buttons| 0))& (0+255)
  3600  00E6  202E               	fcall	_checkButtons
  3601                           
  3602                           ;main.c: 44:             if(buttons[0] == 1 || buttons[1] == 1 || buttons[2] == 1)
  3603  00E7  0343               	decf	_buttons,w
  3604  00E8  1903               	btfsc	3,2
  3605  00E9  28EF               	goto	l2645
  3606  00EA  0344               	decf	_buttons+1,w
  3607  00EB  1903               	btfsc	3,2
  3608  00EC  28EF               	goto	l2645
  3609  00ED  0B45               	decfsz	_buttons+2,w
  3610  00EE  28F0               	goto	l2647
  3611  00EF                     l2645:	
  3612                           
  3613                           ;main.c: 45:             {;main.c: 46:                 waitingForButton = 0;
  3614  00EF  01BB               	clrf	main@waitingForButton
  3615  00F0                     l2647:	
  3616                           
  3617                           ;main.c: 48:         } while (waitingForButton);
  3618  00F0  083B               	movf	main@waitingForButton,w
  3619  00F1  1D03               	btfss	3,2
  3620  00F2  28E5               	goto	l2637
  3621                           
  3622                           ;main.c: 51:         _delay((unsigned long)((300)*(125000/4000.0)));
  3623  00F3  300D               	movlw	13
  3624  00F4  0020               	movlb	0	; select bank0
  3625  00F5  00BA               	movwf	??_main
  3626  00F6  302B               	movlw	43
  3627  00F7                     u1667:	
  3628  00F7  0B89               	decfsz	9,f
  3629  00F8  28F7               	goto	u1667
  3630  00F9  0BBA               	decfsz	??_main,f
  3631  00FA  28F7               	goto	u1667
  3632  00FB  0000               	nop
  3633                           
  3634                           ;main.c: 54:         checkButtons(buttons);
  3635  00FC  3043               	movlw	(low (_buttons| 0))& (0+255)
  3636  00FD  202E               	fcall	_checkButtons
  3637                           
  3638                           ;main.c: 57:         if(buttons[1] == 1 && buttons[2] == 1)
  3639  00FE  0B44               	decfsz	_buttons+1,w
  3640  00FF  2907               	goto	l2661
  3641  0100  0345               	decf	_buttons+2,w
  3642  0101  1D03               	btfss	3,2
  3643  0102  2907               	goto	l2661
  3644                           
  3645                           ;main.c: 58:         {;main.c: 60:             machine_notify_user();
  3646  0103  2141               	fcall	_machine_notify_user
  3647                           
  3648                           ;main.c: 61:             flashValue(123);
  3649  0104  307B               	movlw	123
  3650  0105  21CB               	fcall	_flashValue
  3651  0106  28E1               	goto	L1
  3652  0107                     l2661:	
  3653                           ;main.c: 62:             machine_warn_user();
  3654                           
  3655  0107  0B43               	decfsz	_buttons,w
  3656  0108  2910               	goto	l2669
  3657  0109  0344               	decf	_buttons+1,w
  3658  010A  1D03               	btfss	3,2
  3659  010B  2910               	goto	l2669
  3660                           
  3661                           ;main.c: 66:         {;main.c: 68:             machine_notify_user();
  3662  010C  2141               	fcall	_machine_notify_user
  3663                           
  3664                           ;main.c: 69:             flashValue(game_topscore());
  3665  010D  2594               	fcall	_game_topscore
  3666  010E  21CB               	fcall	_flashValue
  3667  010F  28E1               	goto	L1
  3668  0110                     l2669:	
  3669                           ;main.c: 70:             machine_warn_user();
  3670                           
  3671                           
  3672                           ;main.c: 74:         {;main.c: 75:             Led button_pressed;;main.c: 76:          
      +                             if(buttons[0]) button_pressed = green;
  3673  0110  0843               	movf	_buttons,w
  3674  0111  1903               	btfsc	3,2
  3675  0112  2915               	goto	l2673
  3676  0113  01BD               	clrf	main@button_pressed
  3677  0114  0ABD               	incf	main@button_pressed,f
  3678  0115                     l2673:	
  3679                           
  3680                           ;main.c: 77:             if(buttons[1]) button_pressed = yellow;
  3681  0115  0844               	movf	_buttons+1,w
  3682  0116  1903               	btfsc	3,2
  3683  0117  291A               	goto	l2677
  3684  0118  3002               	movlw	2
  3685  0119  00BD               	movwf	main@button_pressed
  3686  011A                     l2677:	
  3687                           
  3688                           ;main.c: 78:             if(buttons[2]) button_pressed = red;
  3689  011A  0845               	movf	_buttons+2,w
  3690  011B  1903               	btfsc	3,2
  3691  011C  291F               	goto	l2681
  3692  011D  3003               	movlw	3
  3693  011E  00BD               	movwf	main@button_pressed
  3694  011F                     l2681:	
  3695                           
  3696                           ;main.c: 80:             setLED(2000, button_pressed);
  3697  011F  30D0               	movlw	208
  3698  0120  00A2               	movwf	setLED@duty
  3699  0121  3007               	movlw	7
  3700  0122  00A3               	movwf	setLED@duty+1
  3701  0123  083D               	movf	main@button_pressed,w
  3702  0124  00A4               	movwf	setLED@LEDno
  3703  0125  238D               	fcall	_setLED
  3704                           
  3705                           ;main.c: 83:             _Bool waitingForRelease = 1;
  3706  0126  0020               	movlb	0	; select bank0
  3707  0127  01BC               	clrf	main@waitingForRelease
  3708  0128  0ABC               	incf	main@waitingForRelease,f
  3709  0129                     l2685:	
  3710                           
  3711                           ;main.c: 85:                 checkButtons(buttons);
  3712  0129  3043               	movlw	(low (_buttons| 0))& (0+255)
  3713  012A  202E               	fcall	_checkButtons
  3714                           
  3715                           ;main.c: 86:                 if(buttons[0] == 0 & buttons[1] == 0 && buttons[2] == 0)
  3716  012B  0843               	movf	_buttons,w
  3717  012C  1D03               	btfss	3,2
  3718  012D  2935               	goto	l2695
  3719  012E  0844               	movf	_buttons+1,w
  3720  012F  1D03               	btfss	3,2
  3721  0130  2935               	goto	l2695
  3722  0131  0845               	movf	_buttons+2,w
  3723  0132  1D03               	btfss	3,2
  3724  0133  2935               	goto	l2695
  3725                           
  3726                           ;main.c: 87:                 {;main.c: 88:                     waitingForRelease = 0;
  3727  0134  01BC               	clrf	main@waitingForRelease
  3728  0135                     l2695:	
  3729                           
  3730                           ;main.c: 90:             } while (waitingForRelease);
  3731  0135  083C               	movf	main@waitingForRelease,w
  3732  0136  1D03               	btfss	3,2
  3733  0137  2929               	goto	l2685
  3734                           
  3735                           ;main.c: 92:             setLED(0, button_pressed);
  3736  0138  01A2               	clrf	setLED@duty
  3737  0139  01A3               	clrf	setLED@duty+1
  3738  013A  083D               	movf	main@button_pressed,w
  3739  013B  00A4               	movwf	setLED@LEDno
  3740  013C  238D               	fcall	_setLED
  3741                           
  3742                           ;main.c: 94:             game_check_it(button_pressed);
  3743  013D  0020               	movlb	0	; select bank0
  3744  013E  083D               	movf	main@button_pressed,w
  3745  013F  2351               	fcall	_game_check_it
  3746  0140  28E3               	goto	l2635
  3747  0141                     __end_of_main:	
  3748                           
  3749                           	psect	text1
  3750  030E                     __ptext1:	
  3751 ;; *************** function _setupLEDs *****************
  3752 ;; Defined at:
  3753 ;;		line 55 in file "aj_hal.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;  period          2    8[BANK0 ] unsigned short 
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;		None
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      void 
  3760 ;; Registers used:
  3761 ;;		wreg, status,2, status,0, pclath, cstack
  3762 ;; Tracked objects:
  3763 ;;		On entry : 1F/0
  3764 ;;		On exit  : 1F/1B
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3767 ;;      Params:         0       2       0       0
  3768 ;;      Locals:         0       0       0       0
  3769 ;;      Temps:          0       0       0       0
  3770 ;;      Totals:         0       2       0       0
  3771 ;;Total ram usage:        2 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; Hardware stack levels required when called:   10
  3774 ;; This function calls:
  3775 ;;		_PWM1_PeriodSet
  3776 ;;		_PWM1_PhaseSet
  3777 ;;		_PWM2_PeriodSet
  3778 ;;		_PWM2_PhaseSet
  3779 ;;		_PWM3_PeriodSet
  3780 ;;		_PWM3_PhaseSet
  3781 ;;		_setLEDs
  3782 ;;		_stopLEDs
  3783 ;; This function is called by:
  3784 ;;		_main
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           
  3789                           ;psect for function _setupLEDs
  3790  030E                     _setupLEDs:	
  3791                           
  3792                           ;aj_hal.c: 55: void setupLEDs (uint16_t period);aj_hal.c: 56: {;aj_hal.c: 57:     const 
      +                          uint16_t initial_duty = 0;;aj_hal.c: 58:     const uint16_t initial_phase = 0;;aj_hal.c:
      +                           59:     stopLEDs();
  3793                           
  3794                           ;incstack = 0
  3795                           ; Regs used in _setupLEDs: [wreg+status,2+status,0+pclath+cstack]
  3796  030E  258E               	fcall	_stopLEDs
  3797                           
  3798                           ;aj_hal.c: 61:     PWM1_PhaseSet(initial_phase);
  3799  030F  0020               	movlb	0	; select bank0
  3800  0310  01A0               	clrf	PWM1_PhaseSet@phaseCount
  3801  0311  01A1               	clrf	PWM1_PhaseSet@phaseCount+1
  3802  0312  250A               	fcall	_PWM1_PhaseSet
  3803                           
  3804                           ;aj_hal.c: 62:     PWM1_PeriodSet(period);
  3805  0313  0020               	movlb	0	; select bank0
  3806  0314  0829               	movf	setupLEDs@period+1,w
  3807  0315  00A1               	movwf	PWM1_PeriodSet@periodCount+1
  3808  0316  0828               	movf	setupLEDs@period,w
  3809  0317  00A0               	movwf	PWM1_PeriodSet@periodCount
  3810  0318  2512               	fcall	_PWM1_PeriodSet
  3811                           
  3812                           ;aj_hal.c: 64:     PWM2_PhaseSet(initial_phase);
  3813  0319  0020               	movlb	0	; select bank0
  3814  031A  01A0               	clrf	PWM2_PhaseSet@phaseCount
  3815  031B  01A1               	clrf	PWM2_PhaseSet@phaseCount+1
  3816  031C  24FA               	fcall	_PWM2_PhaseSet
  3817                           
  3818                           ;aj_hal.c: 65:     PWM2_PeriodSet(period);
  3819  031D  0020               	movlb	0	; select bank0
  3820  031E  0829               	movf	setupLEDs@period+1,w
  3821  031F  00A1               	movwf	PWM2_PeriodSet@periodCount+1
  3822  0320  0828               	movf	setupLEDs@period,w
  3823  0321  00A0               	movwf	PWM2_PeriodSet@periodCount
  3824  0322  2502               	fcall	_PWM2_PeriodSet
  3825                           
  3826                           ;aj_hal.c: 67:     PWM3_PhaseSet(initial_phase);
  3827  0323  0020               	movlb	0	; select bank0
  3828  0324  01A0               	clrf	PWM3_PhaseSet@phaseCount
  3829  0325  01A1               	clrf	PWM3_PhaseSet@phaseCount+1
  3830  0326  24EA               	fcall	_PWM3_PhaseSet
  3831                           
  3832                           ;aj_hal.c: 68:     PWM3_PeriodSet(period);
  3833  0327  0020               	movlb	0	; select bank0
  3834  0328  0829               	movf	setupLEDs@period+1,w
  3835  0329  00A1               	movwf	PWM3_PeriodSet@periodCount+1
  3836  032A  0828               	movf	setupLEDs@period,w
  3837  032B  00A0               	movwf	PWM3_PeriodSet@periodCount
  3838  032C  24F2               	fcall	_PWM3_PeriodSet
  3839                           
  3840                           ;aj_hal.c: 70:     setLEDs(initial_duty, initial_duty, initial_duty);
  3841  032D  0020               	movlb	0	; select bank0
  3842  032E  217F               	fcall	PL4	;call to abstracted procedure
  3843  032F  2C0B               	ljmp	l2113
  3844  0330                     __end_of_setupLEDs:	
  3845                           
  3846                           	psect	text2
  3847  058E                     __ptext2:	
  3848 ;; *************** function _stopLEDs *****************
  3849 ;; Defined at:
  3850 ;;		line 30 in file "aj_hal.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;		None
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;		None
  3855 ;; Return value:  Size  Location     Type
  3856 ;;                  1    wreg      void 
  3857 ;; Registers used:
  3858 ;;		status,2, status,0, pclath, cstack
  3859 ;; Tracked objects:
  3860 ;;		On entry : 1F/0
  3861 ;;		On exit  : 1F/1B
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3864 ;;      Params:         0       0       0       0
  3865 ;;      Locals:         0       0       0       0
  3866 ;;      Temps:          0       0       0       0
  3867 ;;      Totals:         0       0       0       0
  3868 ;;Total ram usage:        0 bytes
  3869 ;; Hardware stack levels used:    1
  3870 ;; Hardware stack levels required when called:    8
  3871 ;; This function calls:
  3872 ;;		_PWM1_Stop
  3873 ;;		_PWM2_Stop
  3874 ;;		_PWM3_Stop
  3875 ;; This function is called by:
  3876 ;;		_setupLEDs
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           
  3881                           ;psect for function _stopLEDs
  3882  058E                     _stopLEDs:	
  3883                           
  3884                           ;aj_hal.c: 32:     PWM1_Stop();
  3885                           
  3886                           ;incstack = 0
  3887                           ; Regs used in _stopLEDs: [status,2+status,0+pclath+cstack]
  3888  058E  2591               	fcall	_PWM1_Stop
  3889                           
  3890                           ;aj_hal.c: 33:     PWM2_Stop();
  3891  058F  25A2               	fcall	_PWM2_Stop
  3892                           
  3893                           ;aj_hal.c: 34:     PWM3_Stop();
  3894  0590  2DA0               	ljmp	l2109
  3895  0591                     __end_of_stopLEDs:	
  3896                           
  3897                           	psect	text3
  3898  05A0                     __ptext3:	
  3899 ;; *************** function _PWM3_Stop *****************
  3900 ;; Defined at:
  3901 ;;		line 118 in file "mcc_generated_files/pwm3.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;		None
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;		None
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      void 
  3908 ;; Registers used:
  3909 ;;		None
  3910 ;; Tracked objects:
  3911 ;;		On entry : 1F/1B
  3912 ;;		On exit  : 1F/1B
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3915 ;;      Params:         0       0       0       0
  3916 ;;      Locals:         0       0       0       0
  3917 ;;      Temps:          0       0       0       0
  3918 ;;      Totals:         0       0       0       0
  3919 ;;Total ram usage:        0 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; Hardware stack levels required when called:    7
  3922 ;; This function calls:
  3923 ;;		Nothing
  3924 ;; This function is called by:
  3925 ;;		_stopLEDs
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929                           
  3930                           ;psect for function _PWM3_Stop
  3931  05A0                     _PWM3_Stop:	
  3932  05A0                     l2109:	
  3933                           ;incstack = 0
  3934                           ; Regs used in _PWM3_Stop: []
  3935                           
  3936                           
  3937                           ;mcc_generated_files/pwm3.c: 120:     PWM3CONbits.EN = 0;
  3938  05A0  13BB               	bcf	59,7	;volatile
  3939  05A1  0008               	return
  3940  05A2                     __end_of_PWM3_Stop:	
  3941                           
  3942                           	psect	text4
  3943  05A2                     __ptext4:	
  3944 ;; *************** function _PWM2_Stop *****************
  3945 ;; Defined at:
  3946 ;;		line 118 in file "mcc_generated_files/pwm2.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;		None
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;		None
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  1    wreg      void 
  3953 ;; Registers used:
  3954 ;;		None
  3955 ;; Tracked objects:
  3956 ;;		On entry : 1F/1B
  3957 ;;		On exit  : 1F/1B
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3960 ;;      Params:         0       0       0       0
  3961 ;;      Locals:         0       0       0       0
  3962 ;;      Temps:          0       0       0       0
  3963 ;;      Totals:         0       0       0       0
  3964 ;;Total ram usage:        0 bytes
  3965 ;; Hardware stack levels used:    1
  3966 ;; Hardware stack levels required when called:    7
  3967 ;; This function calls:
  3968 ;;		Nothing
  3969 ;; This function is called by:
  3970 ;;		_stopLEDs
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           
  3975                           ;psect for function _PWM2_Stop
  3976  05A2                     _PWM2_Stop:	
  3977                           
  3978                           ;mcc_generated_files/pwm2.c: 120:     PWM2CONbits.EN = 0;
  3979                           
  3980                           ;incstack = 0
  3981                           ; Regs used in _PWM2_Stop: []
  3982  05A2  13AB               	bcf	43,7	;volatile
  3983  05A3  0008               	return
  3984  05A4                     __end_of_PWM2_Stop:	
  3985                           
  3986                           	psect	text5
  3987  0591                     __ptext5:	
  3988 ;; *************** function _PWM1_Stop *****************
  3989 ;; Defined at:
  3990 ;;		line 118 in file "mcc_generated_files/pwm1.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;		None
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;		None
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  1    wreg      void 
  3997 ;; Registers used:
  3998 ;;		None
  3999 ;; Tracked objects:
  4000 ;;		On entry : 1F/0
  4001 ;;		On exit  : 1F/1B
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4004 ;;      Params:         0       0       0       0
  4005 ;;      Locals:         0       0       0       0
  4006 ;;      Temps:          0       0       0       0
  4007 ;;      Totals:         0       0       0       0
  4008 ;;Total ram usage:        0 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; Hardware stack levels required when called:    7
  4011 ;; This function calls:
  4012 ;;		Nothing
  4013 ;; This function is called by:
  4014 ;;		_stopLEDs
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           
  4019                           ;psect for function _PWM1_Stop
  4020  0591                     _PWM1_Stop:	
  4021                           
  4022                           ;mcc_generated_files/pwm1.c: 120:     PWM1CONbits.EN = 0;
  4023                           
  4024                           ;incstack = 0
  4025                           ; Regs used in _PWM1_Stop: []
  4026  0591  003B               	movlb	27	; select bank27
  4027  0592  139B               	bcf	27,7	;volatile
  4028  0593  0008               	return
  4029  0594                     __end_of_PWM1_Stop:	
  4030                           
  4031                           	psect	text6
  4032  04EA                     __ptext6:	
  4033 ;; *************** function _PWM3_PhaseSet *****************
  4034 ;; Defined at:
  4035 ;;		line 133 in file "mcc_generated_files/pwm3.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  phaseCount      2    0[BANK0 ] unsigned short 
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;		None
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  1    wreg      void 
  4042 ;; Registers used:
  4043 ;;		wreg
  4044 ;; Tracked objects:
  4045 ;;		On entry : 1F/0
  4046 ;;		On exit  : 1F/1B
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4049 ;;      Params:         0       2       0       0
  4050 ;;      Locals:         0       0       0       0
  4051 ;;      Temps:          0       0       0       0
  4052 ;;      Totals:         0       2       0       0
  4053 ;;Total ram usage:        2 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; Hardware stack levels required when called:    7
  4056 ;; This function calls:
  4057 ;;		Nothing
  4058 ;; This function is called by:
  4059 ;;		_setupLEDs
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           
  4064                           ;psect for function _PWM3_PhaseSet
  4065  04EA                     _PWM3_PhaseSet:	
  4066                           
  4067                           ;mcc_generated_files/pwm3.c: 133: void PWM3_PhaseSet(uint16_t phaseCount);mcc_generated_
      +                          files/pwm3.c: 134: {;mcc_generated_files/pwm3.c: 135:     PWM3PHH = (phaseCount>>8);
  4068                           
  4069                           ;incstack = 0
  4070                           ; Regs used in _PWM3_PhaseSet: [wreg]
  4071  04EA  0821               	movf	PWM3_PhaseSet@phaseCount+1,w
  4072  04EB  003B               	movlb	27	; select bank27
  4073  04EC  00B2               	movwf	50	;volatile
  4074                           
  4075                           ;mcc_generated_files/pwm3.c: 136:     PWM3PHL = (phaseCount);
  4076  04ED  0020               	movlb	0	; select bank0
  4077  04EE  0820               	movf	PWM3_PhaseSet@phaseCount,w
  4078  04EF  003B               	movlb	27	; select bank27
  4079  04F0  00B1               	movwf	49	;volatile
  4080  04F1  0008               	return
  4081  04F2                     __end_of_PWM3_PhaseSet:	
  4082                           
  4083                           	psect	text7
  4084  04F2                     __ptext7:	
  4085 ;; *************** function _PWM3_PeriodSet *****************
  4086 ;; Defined at:
  4087 ;;		line 145 in file "mcc_generated_files/pwm3.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  periodCount     2    0[BANK0 ] unsigned short 
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;		None
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  1    wreg      void 
  4094 ;; Registers used:
  4095 ;;		wreg
  4096 ;; Tracked objects:
  4097 ;;		On entry : 1F/0
  4098 ;;		On exit  : 1F/1B
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4101 ;;      Params:         0       2       0       0
  4102 ;;      Locals:         0       0       0       0
  4103 ;;      Temps:          0       0       0       0
  4104 ;;      Totals:         0       2       0       0
  4105 ;;Total ram usage:        2 bytes
  4106 ;; Hardware stack levels used:    1
  4107 ;; Hardware stack levels required when called:    7
  4108 ;; This function calls:
  4109 ;;		Nothing
  4110 ;; This function is called by:
  4111 ;;		_setupLEDs
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           
  4116                           ;psect for function _PWM3_PeriodSet
  4117  04F2                     _PWM3_PeriodSet:	
  4118                           
  4119                           ;mcc_generated_files/pwm3.c: 145: void PWM3_PeriodSet(uint16_t periodCount);mcc_generate
      +                          d_files/pwm3.c: 146: {;mcc_generated_files/pwm3.c: 147:     PWM3PRH = (periodCount>>8);
  4120                           
  4121                           ;incstack = 0
  4122                           ; Regs used in _PWM3_PeriodSet: [wreg]
  4123  04F2  0821               	movf	PWM3_PeriodSet@periodCount+1,w
  4124  04F3  003B               	movlb	27	; select bank27
  4125  04F4  00B6               	movwf	54	;volatile
  4126                           
  4127                           ;mcc_generated_files/pwm3.c: 148:     PWM3PRL = (periodCount);
  4128  04F5  0020               	movlb	0	; select bank0
  4129  04F6  0820               	movf	PWM3_PeriodSet@periodCount,w
  4130  04F7  003B               	movlb	27	; select bank27
  4131  04F8  00B5               	movwf	53	;volatile
  4132  04F9  0008               	return
  4133  04FA                     __end_of_PWM3_PeriodSet:	
  4134                           
  4135                           	psect	text8
  4136  04FA                     __ptext8:	
  4137 ;; *************** function _PWM2_PhaseSet *****************
  4138 ;; Defined at:
  4139 ;;		line 133 in file "mcc_generated_files/pwm2.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;  phaseCount      2    0[BANK0 ] unsigned short 
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;		None
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  1    wreg      void 
  4146 ;; Registers used:
  4147 ;;		wreg
  4148 ;; Tracked objects:
  4149 ;;		On entry : 1F/0
  4150 ;;		On exit  : 1F/1B
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4153 ;;      Params:         0       2       0       0
  4154 ;;      Locals:         0       0       0       0
  4155 ;;      Temps:          0       0       0       0
  4156 ;;      Totals:         0       2       0       0
  4157 ;;Total ram usage:        2 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; Hardware stack levels required when called:    7
  4160 ;; This function calls:
  4161 ;;		Nothing
  4162 ;; This function is called by:
  4163 ;;		_setupLEDs
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           
  4168                           ;psect for function _PWM2_PhaseSet
  4169  04FA                     _PWM2_PhaseSet:	
  4170                           
  4171                           ;mcc_generated_files/pwm2.c: 133: void PWM2_PhaseSet(uint16_t phaseCount);mcc_generated_
      +                          files/pwm2.c: 134: {;mcc_generated_files/pwm2.c: 135:     PWM2PHH = (phaseCount>>8);
  4172                           
  4173                           ;incstack = 0
  4174                           ; Regs used in _PWM2_PhaseSet: [wreg]
  4175  04FA  0821               	movf	PWM2_PhaseSet@phaseCount+1,w
  4176  04FB  003B               	movlb	27	; select bank27
  4177  04FC  00A2               	movwf	34	;volatile
  4178                           
  4179                           ;mcc_generated_files/pwm2.c: 136:     PWM2PHL = (phaseCount);
  4180  04FD  0020               	movlb	0	; select bank0
  4181  04FE  0820               	movf	PWM2_PhaseSet@phaseCount,w
  4182  04FF  003B               	movlb	27	; select bank27
  4183  0500  00A1               	movwf	33	;volatile
  4184  0501  0008               	return
  4185  0502                     __end_of_PWM2_PhaseSet:	
  4186                           
  4187                           	psect	text9
  4188  0502                     __ptext9:	
  4189 ;; *************** function _PWM2_PeriodSet *****************
  4190 ;; Defined at:
  4191 ;;		line 145 in file "mcc_generated_files/pwm2.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  periodCount     2    0[BANK0 ] unsigned short 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		wreg
  4200 ;; Tracked objects:
  4201 ;;		On entry : 1F/0
  4202 ;;		On exit  : 1F/1B
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4205 ;;      Params:         0       2       0       0
  4206 ;;      Locals:         0       0       0       0
  4207 ;;      Temps:          0       0       0       0
  4208 ;;      Totals:         0       2       0       0
  4209 ;;Total ram usage:        2 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:    7
  4212 ;; This function calls:
  4213 ;;		Nothing
  4214 ;; This function is called by:
  4215 ;;		_setupLEDs
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           
  4220                           ;psect for function _PWM2_PeriodSet
  4221  0502                     _PWM2_PeriodSet:	
  4222                           
  4223                           ;mcc_generated_files/pwm2.c: 145: void PWM2_PeriodSet(uint16_t periodCount);mcc_generate
      +                          d_files/pwm2.c: 146: {;mcc_generated_files/pwm2.c: 147:     PWM2PRH = (periodCount>>8);
  4224                           
  4225                           ;incstack = 0
  4226                           ; Regs used in _PWM2_PeriodSet: [wreg]
  4227  0502  0821               	movf	PWM2_PeriodSet@periodCount+1,w
  4228  0503  003B               	movlb	27	; select bank27
  4229  0504  00A6               	movwf	38	;volatile
  4230                           
  4231                           ;mcc_generated_files/pwm2.c: 148:     PWM2PRL = (periodCount);
  4232  0505  0020               	movlb	0	; select bank0
  4233  0506  0820               	movf	PWM2_PeriodSet@periodCount,w
  4234  0507  003B               	movlb	27	; select bank27
  4235  0508  00A5               	movwf	37	;volatile
  4236  0509  0008               	return
  4237  050A                     __end_of_PWM2_PeriodSet:	
  4238                           
  4239                           	psect	text10
  4240  050A                     __ptext10:	
  4241 ;; *************** function _PWM1_PhaseSet *****************
  4242 ;; Defined at:
  4243 ;;		line 133 in file "mcc_generated_files/pwm1.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;  phaseCount      2    0[BANK0 ] unsigned short 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg
  4252 ;; Tracked objects:
  4253 ;;		On entry : 1F/0
  4254 ;;		On exit  : 1F/1B
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4257 ;;      Params:         0       2       0       0
  4258 ;;      Locals:         0       0       0       0
  4259 ;;      Temps:          0       0       0       0
  4260 ;;      Totals:         0       2       0       0
  4261 ;;Total ram usage:        2 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    7
  4264 ;; This function calls:
  4265 ;;		Nothing
  4266 ;; This function is called by:
  4267 ;;		_setupLEDs
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           
  4272                           ;psect for function _PWM1_PhaseSet
  4273  050A                     _PWM1_PhaseSet:	
  4274                           
  4275                           ;mcc_generated_files/pwm1.c: 133: void PWM1_PhaseSet(uint16_t phaseCount);mcc_generated_
      +                          files/pwm1.c: 134: {;mcc_generated_files/pwm1.c: 135:     PWM1PHH = (phaseCount>>8);
  4276                           
  4277                           ;incstack = 0
  4278                           ; Regs used in _PWM1_PhaseSet: [wreg]
  4279  050A  0821               	movf	PWM1_PhaseSet@phaseCount+1,w
  4280  050B  003B               	movlb	27	; select bank27
  4281  050C  0092               	movwf	18	;volatile
  4282                           
  4283                           ;mcc_generated_files/pwm1.c: 136:     PWM1PHL = (phaseCount);
  4284  050D  0020               	movlb	0	; select bank0
  4285  050E  0820               	movf	PWM1_PhaseSet@phaseCount,w
  4286  050F  003B               	movlb	27	; select bank27
  4287  0510  0091               	movwf	17	;volatile
  4288  0511  0008               	return
  4289  0512                     __end_of_PWM1_PhaseSet:	
  4290                           
  4291                           	psect	text11
  4292  0512                     __ptext11:	
  4293 ;; *************** function _PWM1_PeriodSet *****************
  4294 ;; Defined at:
  4295 ;;		line 145 in file "mcc_generated_files/pwm1.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;  periodCount     2    0[BANK0 ] unsigned short 
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;		None
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  1    wreg      void 
  4302 ;; Registers used:
  4303 ;;		wreg
  4304 ;; Tracked objects:
  4305 ;;		On entry : 1F/0
  4306 ;;		On exit  : 1F/1B
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4309 ;;      Params:         0       2       0       0
  4310 ;;      Locals:         0       0       0       0
  4311 ;;      Temps:          0       0       0       0
  4312 ;;      Totals:         0       2       0       0
  4313 ;;Total ram usage:        2 bytes
  4314 ;; Hardware stack levels used:    1
  4315 ;; Hardware stack levels required when called:    7
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_setupLEDs
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           
  4324                           ;psect for function _PWM1_PeriodSet
  4325  0512                     _PWM1_PeriodSet:	
  4326                           
  4327                           ;mcc_generated_files/pwm1.c: 145: void PWM1_PeriodSet(uint16_t periodCount);mcc_generate
      +                          d_files/pwm1.c: 146: {;mcc_generated_files/pwm1.c: 147:     PWM1PRH = (periodCount>>8);
  4328                           
  4329                           ;incstack = 0
  4330                           ; Regs used in _PWM1_PeriodSet: [wreg]
  4331  0512  0821               	movf	PWM1_PeriodSet@periodCount+1,w
  4332  0513  003B               	movlb	27	; select bank27
  4333  0514  0096               	movwf	22	;volatile
  4334                           
  4335                           ;mcc_generated_files/pwm1.c: 148:     PWM1PRL = (periodCount);
  4336  0515  0020               	movlb	0	; select bank0
  4337  0516  0820               	movf	PWM1_PeriodSet@periodCount,w
  4338  0517  003B               	movlb	27	; select bank27
  4339  0518  0095               	movwf	21	;volatile
  4340  0519  0008               	return
  4341  051A                     __end_of_PWM1_PeriodSet:	
  4342                           
  4343                           	psect	text12
  4344  0141                     __ptext12:	
  4345 ;; *************** function _machine_notify_user *****************
  4346 ;; Defined at:
  4347 ;;		line 28 in file "machine.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;		None
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  val             2   11[BANK0 ] unsigned short 
  4352 ;;  j               2   13[BANK0 ] unsigned short 
  4353 ;;  i               2    9[BANK0 ] unsigned short 
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		wreg, status,2, status,0, pclath, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 1F/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4363 ;;      Params:         0       0       0       0
  4364 ;;      Locals:         0       6       0       0
  4365 ;;      Temps:          0       1       0       0
  4366 ;;      Totals:         0       7       0       0
  4367 ;;Total ram usage:        7 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; Hardware stack levels required when called:   10
  4370 ;; This function calls:
  4371 ;;		___wmul
  4372 ;;		_setLEDs
  4373 ;; This function is called by:
  4374 ;;		_main
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           
  4378                           
  4379                           ;psect for function _machine_notify_user
  4380  0141                     _machine_notify_user:	
  4381                           
  4382                           ;machine.c: 30:     uint16_t j,i;;machine.c: 31:     for(i=0 ; i < 3 ; i++)
  4383                           
  4384                           ;incstack = 0
  4385                           ; Regs used in _machine_notify_user: [wreg+status,2+status,0+pclath+cstack]
  4386  0141  01A9               	clrf	machine_notify_user@i
  4387  0142  01AA               	clrf	machine_notify_user@i+1
  4388  0143                     l2557:	
  4389                           
  4390                           ;machine.c: 32:     {;machine.c: 33:         for(j=0 ; j < 200 ; j++)
  4391  0143  01AD               	clrf	machine_notify_user@j
  4392  0144  01AE               	clrf	machine_notify_user@j+1
  4393  0145                     l2563:	
  4394                           
  4395                           ;machine.c: 34:         {;machine.c: 35:             uint16_t val = j*5;
  4396  0145  082E               	movf	machine_notify_user@j+1,w
  4397  0146  00A1               	movwf	___wmul@multiplier+1
  4398  0147  082D               	movf	machine_notify_user@j,w
  4399  0148  00A0               	movwf	___wmul@multiplier
  4400  0149  3005               	movlw	5
  4401  014A  00A2               	movwf	___wmul@multiplicand
  4402  014B  01A3               	clrf	___wmul@multiplicand+1
  4403  014C  2421               	fcall	___wmul
  4404  014D  0821               	movf	?___wmul+1,w
  4405  014E  00AC               	movwf	machine_notify_user@val+1
  4406  014F  0820               	movf	?___wmul,w
  4407  0150  00AB               	movwf	machine_notify_user@val
  4408                           
  4409                           ;machine.c: 36:             setLEDs(val, val, val);
  4410  0151  082C               	movf	machine_notify_user@val+1,w
  4411  0152  00A3               	movwf	setLEDs@led1+1
  4412  0153  082B               	movf	machine_notify_user@val,w
  4413  0154  00A2               	movwf	setLEDs@led1
  4414  0155  082C               	movf	machine_notify_user@val+1,w
  4415  0156  00A5               	movwf	setLEDs@led2+1
  4416  0157  082B               	movf	machine_notify_user@val,w
  4417  0158  00A4               	movwf	setLEDs@led2
  4418  0159  082C               	movf	machine_notify_user@val+1,w
  4419  015A  00A7               	movwf	setLEDs@led3+1
  4420  015B  082B               	movf	machine_notify_user@val,w
  4421  015C  00A6               	movwf	setLEDs@led3
  4422  015D  240B               	fcall	_setLEDs
  4423                           
  4424                           ;machine.c: 37:         }
  4425  015E  0020               	movlb	0	; select bank0
  4426  015F  0AAD               	incf	machine_notify_user@j,f
  4427  0160  1903               	skipnz
  4428  0161  0AAE               	incf	machine_notify_user@j+1,f
  4429  0162  3000               	movlw	0
  4430  0163  022E               	subwf	machine_notify_user@j+1,w
  4431  0164  30C8               	movlw	200
  4432  0165  1903               	skipnz
  4433  0166  022D               	subwf	machine_notify_user@j,w
  4434  0167  1C03               	skipc
  4435  0168  2945               	goto	l2563
  4436                           
  4437                           ;machine.c: 38:     }
  4438  0169  0AA9               	incf	machine_notify_user@i,f
  4439  016A  1903               	skipnz
  4440  016B  0AAA               	incf	machine_notify_user@i+1,f
  4441  016C  3000               	movlw	0
  4442  016D  022A               	subwf	machine_notify_user@i+1,w
  4443  016E  3003               	movlw	3
  4444  016F  1903               	skipnz
  4445  0170  0229               	subwf	machine_notify_user@i,w
  4446  0171  1C03               	skipc
  4447  0172  2943               	goto	l2557
  4448                           
  4449                           ;machine.c: 39:     setLEDs(0, 0, 0);
  4450  0173  217F               	fcall	PL4	;call to abstracted procedure
  4451  0174  240B               	fcall	_setLEDs
  4452                           
  4453                           ;machine.c: 40:     _delay((unsigned long)((1500)*(125000/4000.0)));
  4454  0175  303D               	movlw	61
  4455  0176  0020               	movlb	0	; select bank0
  4456  0177  00A8               	movwf	??_machine_notify_user
  4457  0178  30DF               	movlw	223
  4458  0179                     u1677:	
  4459  0179  0B89               	decfsz	9,f
  4460  017A  2979               	goto	u1677
  4461  017B  0BA8               	decfsz	??_machine_notify_user,f
  4462  017C  2979               	goto	u1677
  4463  017D  0000               	nop
  4464  017E  0008               	return
  4465  017F                     __end_of_machine_notify_user:	
  4466  017F                     PL4:	
  4467  017F  01A2               	clrf	setLEDs@led1
  4468  0180  01A3               	clrf	setLEDs@led1+1
  4469  0181  01A4               	clrf	setLEDs@led2
  4470  0182  01A5               	clrf	setLEDs@led2+1
  4471  0183  01A6               	clrf	setLEDs@led3
  4472  0184  01A7               	clrf	setLEDs@led3+1
  4473  0185  0008               	return
  4474  0186                     __end_ofPL4:	
  4475                           
  4476                           	psect	text13
  4477  0421                     __ptext13:	
  4478 ;; *************** function ___wmul *****************
  4479 ;; Defined at:
  4480 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4483 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  product         2    4[BANK0 ] unsigned int 
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  2    0[BANK0 ] unsigned int 
  4488 ;; Registers used:
  4489 ;;		wreg, status,2, status,0
  4490 ;; Tracked objects:
  4491 ;;		On entry : 1F/0
  4492 ;;		On exit  : 1F/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4495 ;;      Params:         0       4       0       0
  4496 ;;      Locals:         0       2       0       0
  4497 ;;      Temps:          0       0       0       0
  4498 ;;      Totals:         0       6       0       0
  4499 ;;Total ram usage:        6 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; Hardware stack levels required when called:    7
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_machine_notify_user
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           
  4510                           ;psect for function ___wmul
  4511  0421                     ___wmul:	
  4512                           
  4513                           ;incstack = 0
  4514                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4515  0421  01A4               	clrf	___wmul@product
  4516  0422  01A5               	clrf	___wmul@product+1
  4517  0423                     l2393:	
  4518  0423  1C20               	btfss	___wmul@multiplier,0
  4519  0424  2C29               	goto	l2397
  4520  0425  0822               	movf	___wmul@multiplicand,w
  4521  0426  07A4               	addwf	___wmul@product,f
  4522  0427  0823               	movf	___wmul@multiplicand+1,w
  4523  0428  3DA5               	addwfc	___wmul@product+1,f
  4524  0429                     l2397:	
  4525  0429  35A2               	lslf	___wmul@multiplicand,f
  4526  042A  0DA3               	rlf	___wmul@multiplicand+1,f
  4527  042B  36A1               	lsrf	___wmul@multiplier+1,f
  4528  042C  0CA0               	rrf	___wmul@multiplier,f
  4529  042D  0820               	movf	___wmul@multiplier,w
  4530  042E  0421               	iorwf	___wmul@multiplier+1,w
  4531  042F  1D03               	btfss	3,2
  4532  0430  2C23               	goto	l2393
  4533  0431  0825               	movf	___wmul@product+1,w
  4534  0432  00A1               	movwf	?___wmul+1
  4535  0433  0824               	movf	___wmul@product,w
  4536  0434  00A0               	movwf	?___wmul
  4537  0435  0008               	return
  4538  0436                     __end_of___wmul:	
  4539                           
  4540                           	psect	text14
  4541  0594                     __ptext14:	
  4542 ;; *************** function _game_topscore *****************
  4543 ;; Defined at:
  4544 ;;		line 76 in file "game.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;		None
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      unsigned char 
  4551 ;; Registers used:
  4552 ;;		wreg
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 1F/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4558 ;;      Params:         0       0       0       0
  4559 ;;      Locals:         0       0       0       0
  4560 ;;      Temps:          0       0       0       0
  4561 ;;      Totals:         0       0       0       0
  4562 ;;Total ram usage:        0 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:    7
  4565 ;; This function calls:
  4566 ;;		Nothing
  4567 ;; This function is called by:
  4568 ;;		_main
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           
  4573                           ;psect for function _game_topscore
  4574  0594                     _game_topscore:	
  4575                           
  4576                           ;game.c: 78:     return top_score;
  4577                           
  4578                           ;incstack = 0
  4579                           ; Regs used in _game_topscore: [wreg]
  4580  0594  0020               	movlb	0	; select bank0
  4581  0595  084A               	movf	_top_score,w
  4582  0596  0008               	return
  4583  0597                     __end_of_game_topscore:	
  4584                           
  4585                           	psect	text15
  4586  0351                     __ptext15:	
  4587 ;; *************** function _game_check_it *****************
  4588 ;; Defined at:
  4589 ;;		line 52 in file "game.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;  led             1    wreg     enum E3469
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  led             1   24[BANK0 ] enum E3469
  4594 ;;  result          1   25[BANK0 ] _Bool 
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  1    wreg      void 
  4597 ;; Registers used:
  4598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4599 ;; Tracked objects:
  4600 ;;		On entry : 1F/0
  4601 ;;		On exit  : 1F/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4604 ;;      Params:         0       0       0       0
  4605 ;;      Locals:         0       2       0       0
  4606 ;;      Temps:          0       1       0       0
  4607 ;;      Totals:         0       3       0       0
  4608 ;;Total ram usage:        3 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; Hardware stack levels required when called:   12
  4611 ;; This function calls:
  4612 ;;		_game_initialise
  4613 ;;		_machine_warn_user
  4614 ;;		_new_level
  4615 ;; This function is called by:
  4616 ;;		_main
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           
  4621                           ;psect for function _game_check_it
  4622  0351                     _game_check_it:	
  4623                           
  4624                           ;incstack = 0
  4625                           ; Regs used in _game_check_it: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4626                           ;game_check_it@led stored from wreg
  4627  0351  00B8               	movwf	game_check_it@led
  4628                           
  4629                           ;game.c: 55:     if( moves[move_current] == led) {
  4630  0352  083E               	movf	_move_current,w
  4631  0353  23BD               	fcall	PL8	;call to abstracted procedure
  4632  0354  0638               	xorwf	game_check_it@led,w
  4633  0355  1D03               	skipz
  4634  0356  2B5B               	goto	l2605
  4635                           
  4636                           ;game.c: 56:         move_current++;
  4637  0357  0ABE               	incf	_move_current,f
  4638                           
  4639                           ;game.c: 57:         result = 1;
  4640  0358  01B9               	clrf	game_check_it@result
  4641  0359  0AB9               	incf	game_check_it@result,f
  4642                           
  4643                           ;game.c: 58:     }
  4644  035A  2B5E               	goto	l2609
  4645  035B                     l2605:	
  4646                           
  4647                           ;game.c: 61:         machine_warn_user();
  4648  035B  2200               	fcall	_machine_warn_user
  4649                           
  4650                           ;game.c: 62:         result = 0;
  4651  035C  0020               	movlb	0	; select bank0
  4652  035D  01B9               	clrf	game_check_it@result
  4653  035E                     l2609:	
  4654                           
  4655                           ;game.c: 64:     if( ! result ) {
  4656  035E  0839               	movf	game_check_it@result,w
  4657  035F  1D03               	btfss	3,2
  4658  0360  2B62               	goto	l2613
  4659                           
  4660                           ;game.c: 65:         game_initialise();
  4661  0361  2A68               	ljmp	l2349
  4662  0362                     l2613:	
  4663                           ;game.c: 66:     }
  4664                           
  4665  0362  084B               	movf	_game_level,w
  4666  0363  023E               	subwf	_move_current,w
  4667  0364  1C03               	skipc
  4668  0365  0008               	return
  4669                           
  4670                           ;game.c: 69:         _delay((unsigned long)((1500)*(125000/4000.0)));
  4671  0366  303D               	movlw	61
  4672  0367  0020               	movlb	0	; select bank0
  4673  0368  00B7               	movwf	??_game_check_it
  4674  0369  30DF               	movlw	223
  4675  036A                     u1687:	
  4676  036A  0B89               	decfsz	9,f
  4677  036B  2B6A               	goto	u1687
  4678  036C  0BB7               	decfsz	??_game_check_it,f
  4679  036D  2B6A               	goto	u1687
  4680  036E  0000               	nop
  4681                           
  4682                           ;game.c: 70:         new_level();
  4683  036F  2BA9               	ljmp	l2159
  4684  0370                     __end_of_game_check_it:	
  4685                           
  4686                           	psect	text16
  4687  0200                     __ptext16:	
  4688 ;; *************** function _machine_warn_user *****************
  4689 ;; Defined at:
  4690 ;;		line 15 in file "machine.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;		None
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;  j               1    9[BANK0 ] unsigned char 
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  1    wreg      void 
  4697 ;; Registers used:
  4698 ;;		wreg, status,2, status,0, pclath, cstack
  4699 ;; Tracked objects:
  4700 ;;		On entry : 4/1B
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4704 ;;      Params:         0       0       0       0
  4705 ;;      Locals:         0       1       0       0
  4706 ;;      Temps:          0       1       0       0
  4707 ;;      Totals:         0       2       0       0
  4708 ;;Total ram usage:        2 bytes
  4709 ;; Hardware stack levels used:    1
  4710 ;; Hardware stack levels required when called:   10
  4711 ;; This function calls:
  4712 ;;		_setLEDs
  4713 ;; This function is called by:
  4714 ;;		_main
  4715 ;;		_game_check_it
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           
  4720                           ;psect for function _machine_warn_user
  4721  0200                     _machine_warn_user:	
  4722                           
  4723                           ;machine.c: 17:     uint8_t j;;machine.c: 18:     for(j=0 ; j < 5 ; j++)
  4724                           
  4725                           ;incstack = 0
  4726                           ; Regs used in _machine_warn_user: [wreg+status,2+status,0+pclath+cstack]
  4727  0200  0020               	movlb	0	; select bank0
  4728  0201  01A9               	clrf	machine_warn_user@j
  4729  0202                     l2337:	
  4730                           
  4731                           ;machine.c: 19:     {;machine.c: 20:         setLEDs(2000, 2000, 2000);
  4732  0202  30D0               	movlw	208
  4733  0203  00A2               	movwf	setLEDs@led1
  4734  0204  3007               	movlw	7
  4735  0205  00A3               	movwf	setLEDs@led1+1
  4736  0206  30D0               	movlw	208
  4737  0207  00A4               	movwf	setLEDs@led2
  4738  0208  3007               	movlw	7
  4739  0209  00A5               	movwf	setLEDs@led2+1
  4740  020A  30D0               	movlw	208
  4741  020B  00A6               	movwf	setLEDs@led3
  4742  020C  3007               	movlw	7
  4743  020D  00A7               	movwf	setLEDs@led3+1
  4744  020E  240B               	fcall	_setLEDs
  4745                           
  4746                           ;machine.c: 21:         _delay((unsigned long)((200)*(125000/4000.0)));
  4747  020F  3009               	movlw	9
  4748  0210  0020               	movlb	0	; select bank0
  4749  0211  00A8               	movwf	??_machine_warn_user
  4750  0212  301C               	movlw	28
  4751  0213                     u1697:	
  4752  0213  0B89               	decfsz	9,f
  4753  0214  2A13               	goto	u1697
  4754  0215  0BA8               	decfsz	??_machine_warn_user,f
  4755  0216  2A13               	goto	u1697
  4756  0217  0000               	nop
  4757                           
  4758                           ;machine.c: 22:         setLEDs(0, 0, 0);
  4759  0218  0020               	movlb	0	; select bank0
  4760  0219  217F               	fcall	PL4	;call to abstracted procedure
  4761  021A  240B               	fcall	_setLEDs
  4762                           
  4763                           ;machine.c: 23:         _delay((unsigned long)((200)*(125000/4000.0)));
  4764  021B  3009               	movlw	9
  4765  021C  0020               	movlb	0	; select bank0
  4766  021D  00A8               	movwf	??_machine_warn_user
  4767  021E  301C               	movlw	28
  4768  021F                     u1707:	
  4769  021F  0B89               	decfsz	9,f
  4770  0220  2A1F               	goto	u1707
  4771  0221  0BA8               	decfsz	??_machine_warn_user,f
  4772  0222  2A1F               	goto	u1707
  4773  0223  0000               	nop
  4774                           
  4775                           ;machine.c: 24:     }
  4776  0224  0020               	movlb	0	; select bank0
  4777  0225  3005               	movlw	5
  4778  0226  0AA9               	incf	machine_warn_user@j,f
  4779  0227  0229               	subwf	machine_warn_user@j,w
  4780  0228  1C03               	skipc
  4781  0229  2A02               	goto	l2337
  4782                           
  4783                           ;machine.c: 25:     _delay((unsigned long)((1500)*(125000/4000.0)));
  4784  022A  303D               	movlw	61
  4785  022B  0020               	movlb	0	; select bank0
  4786  022C  00A8               	movwf	??_machine_warn_user
  4787  022D  30DF               	movlw	223
  4788  022E                     u1717:	
  4789  022E  0B89               	decfsz	9,f
  4790  022F  2A2E               	goto	u1717
  4791  0230  0BA8               	decfsz	??_machine_warn_user,f
  4792  0231  2A2E               	goto	u1717
  4793  0232  0000               	nop
  4794  0233  0008               	return
  4795  0234                     __end_of_machine_warn_user:	
  4796                           
  4797                           	psect	text17
  4798  0268                     __ptext17:	
  4799 ;; *************** function _game_initialise *****************
  4800 ;; Defined at:
  4801 ;;		line 32 in file "game.c"
  4802 ;; Parameters:    Size  Location     Type
  4803 ;;		None
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;  randomThree     2   20[BANK0 ] unsigned short 
  4806 ;;  i               1   22[BANK0 ] unsigned char 
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  1    wreg      void 
  4809 ;; Registers used:
  4810 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 1F/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4816 ;;      Params:         0       0       0       0
  4817 ;;      Locals:         0       3       0       0
  4818 ;;      Temps:          0       2       0       0
  4819 ;;      Totals:         0       5       0       0
  4820 ;;Total ram usage:        5 bytes
  4821 ;; Hardware stack levels used:    1
  4822 ;; Hardware stack levels required when called:   11
  4823 ;; This function calls:
  4824 ;;		_new_level
  4825 ;;		_rand
  4826 ;; This function is called by:
  4827 ;;		_main
  4828 ;;		_game_check_it
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           
  4833                           ;psect for function _game_initialise
  4834  0268                     _game_initialise:	
  4835  0268                     l2349:	
  4836                           ;incstack = 0
  4837                           ; Regs used in _game_initialise: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4838                           
  4839                           
  4840                           ;game.c: 34:     game_level = 1;
  4841  0268  0020               	movlb	0	; select bank0
  4842  0269  01CB               	clrf	_game_level
  4843  026A  0ACB               	incf	_game_level,f
  4844                           
  4845                           ;game.c: 37:     uint8_t i;;game.c: 38:     for( i = 0; i < 100; i++ ) {
  4846  026B  01B6               	clrf	game_initialise@i
  4847  026C                     l2357:	
  4848                           
  4849                           ;game.c: 39:         uint16_t randomThree = rand();
  4850  026C  2234               	fcall	_rand
  4851  026D  082D               	movf	?_rand+1,w
  4852  026E  00B5               	movwf	game_initialise@randomThree+1
  4853  026F  082C               	movf	?_rand,w
  4854  0270  00B4               	movwf	game_initialise@randomThree
  4855                           
  4856                           ;game.c: 40:         if(randomThree < 10923) moves[i] = green;
  4857  0271  302A               	movlw	42
  4858  0272  0235               	subwf	game_initialise@randomThree+1,w
  4859  0273  30AB               	movlw	171
  4860  0274  1903               	skipnz
  4861  0275  0234               	subwf	game_initialise@randomThree,w
  4862  0276  1803               	skipnc
  4863  0277  2A7C               	goto	l2363
  4864  0278  0836               	movf	game_initialise@i,w
  4865  0279  2290               	fcall	PL2	;call to abstracted procedure
  4866  027A  3001               	movlw	1
  4867  027B  2A89               	goto	L2
  4868  027C                     l2363:	
  4869  027C  3055               	movlw	85
  4870  027D  0235               	subwf	game_initialise@randomThree+1,w
  4871  027E  3056               	movlw	86
  4872  027F  1903               	skipnz
  4873  0280  0234               	subwf	game_initialise@randomThree,w
  4874  0281  0836               	movf	game_initialise@i,w
  4875  0282  1803               	skipnc
  4876  0283  2A87               	goto	L3
  4877  0284  2290               	fcall	PL2	;call to abstracted procedure
  4878  0285  3002               	movlw	2
  4879  0286  2A89               	goto	L2
  4880  0287                     L3:	
  4881  0287  2290               	fcall	PL2	;call to abstracted procedure
  4882  0288  3003               	movlw	3
  4883  0289                     L2:	
  4884  0289  0081               	movwf	1
  4885  028A  3064               	movlw	100
  4886                           
  4887                           ;game.c: 43:     }
  4888  028B  0AB6               	incf	game_initialise@i,f
  4889  028C  0236               	subwf	game_initialise@i,w
  4890  028D  1C03               	skipc
  4891  028E  2A6C               	goto	l2357
  4892                           
  4893                           ;game.c: 45:     new_level();
  4894  028F  2BA9               	ljmp	l2159
  4895  0290                     __end_of_game_initialise:	
  4896  0290                     PL2:	
  4897  0290  3E8C               	addlw	140
  4898  0291  00B2               	movwf	??_game_initialise
  4899  0292  3020               	movlw	32
  4900  0293  01B3               	clrf	??_game_initialise+1
  4901  0294  3DB3               	addwfc	??_game_initialise+1,f
  4902  0295  0832               	movf	??_game_initialise,w
  4903  0296  0086               	movwf	6
  4904  0297  0833               	movf	??_game_initialise+1,w
  4905  0298  0087               	movwf	7
  4906  0299  0008               	return
  4907  029A                     __end_ofPL2:	
  4908                           
  4909                           	psect	text18
  4910  0234                     __ptext18:	
  4911 ;; *************** function _rand *****************
  4912 ;; Defined at:
  4913 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\rand.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;		None
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;		None
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  2   12[BANK0 ] int 
  4920 ;; Registers used:
  4921 ;;		wreg, status,2, status,0, pclath, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 1F/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4927 ;;      Params:         0       2       0       0
  4928 ;;      Locals:         0       0       0       0
  4929 ;;      Temps:          0       4       0       0
  4930 ;;      Totals:         0       6       0       0
  4931 ;;Total ram usage:        6 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; Hardware stack levels required when called:    8
  4934 ;; This function calls:
  4935 ;;		___lmul
  4936 ;; This function is called by:
  4937 ;;		_game_initialise
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           
  4942                           ;psect for function _rand
  4943  0234                     _rand:	
  4944                           
  4945                           ;incstack = 0
  4946                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  4947  0234  0020               	movlb	0	; select bank0
  4948  0235  0842               	movf	_seed+3,w
  4949  0236  00A3               	movwf	___lmul@multiplier+3
  4950  0237  0841               	movf	_seed+2,w
  4951  0238  00A2               	movwf	___lmul@multiplier+2
  4952  0239  0840               	movf	_seed+1,w
  4953  023A  00A1               	movwf	___lmul@multiplier+1
  4954  023B  083F               	movf	_seed,w
  4955  023C  00A0               	movwf	___lmul@multiplier
  4956  023D  304C               	movlw	76
  4957  023E  00A7               	movwf	___lmul@multiplicand+3
  4958  023F  3095               	movlw	149
  4959  0240  00A6               	movwf	___lmul@multiplicand+2
  4960  0241  307F               	movlw	127
  4961  0242  00A5               	movwf	___lmul@multiplicand+1
  4962  0243  302D               	movlw	45
  4963  0244  00A4               	movwf	___lmul@multiplicand
  4964  0245  22E9               	fcall	___lmul
  4965  0246  0823               	movf	?___lmul+3,w
  4966  0247  00C2               	movwf	_seed+3
  4967  0248  0822               	movf	?___lmul+2,w
  4968  0249  00C1               	movwf	_seed+2
  4969  024A  0821               	movf	?___lmul+1,w
  4970  024B  00C0               	movwf	_seed+1
  4971  024C  0820               	movf	?___lmul,w
  4972  024D  00BF               	movwf	_seed
  4973  024E  3001               	movlw	1
  4974  024F  07BF               	addwf	_seed,f
  4975  0250  3000               	movlw	0
  4976  0251  3DC0               	addwfc	_seed+1,f
  4977  0252  3DC1               	addwfc	_seed+2,f
  4978  0253  3DC2               	addwfc	_seed+3,f
  4979  0254  083F               	movf	_seed,w
  4980  0255  00AE               	movwf	??_rand
  4981  0256  0840               	movf	_seed+1,w
  4982  0257  00AF               	movwf	??_rand+1
  4983  0258  0841               	movf	_seed+2,w
  4984  0259  00B0               	movwf	??_rand+2
  4985  025A  0842               	movf	_seed+3,w
  4986  025B  00B1               	movwf	??_rand+3
  4987  025C  3003               	movlw	3
  4988  025D                     u1005:	
  4989  025D  36B1               	lsrf	??_rand+3,f
  4990  025E  0CB0               	rrf	??_rand+2,f
  4991  025F  0CAF               	rrf	??_rand+1,f
  4992  0260  0CAE               	rrf	??_rand,f
  4993  0261  0B89               	decfsz	9,f
  4994  0262  2A5D               	goto	u1005
  4995  0263  082F               	movf	??_rand+1,w
  4996  0264  00AD               	movwf	?_rand+1
  4997  0265  082E               	movf	??_rand,w
  4998  0266  00AC               	movwf	?_rand
  4999  0267  0008               	return
  5000  0268                     __end_of_rand:	
  5001                           
  5002                           	psect	text19
  5003  02E9                     __ptext19:	
  5004 ;; *************** function ___lmul *****************
  5005 ;; Defined at:
  5006 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  multiplier      4    0[BANK0 ] unsigned long 
  5009 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;  product         4    8[BANK0 ] unsigned long 
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  4    0[BANK0 ] unsigned long 
  5014 ;; Registers used:
  5015 ;;		wreg, status,2, status,0
  5016 ;; Tracked objects:
  5017 ;;		On entry : 1F/0
  5018 ;;		On exit  : 1F/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5021 ;;      Params:         0       8       0       0
  5022 ;;      Locals:         0       4       0       0
  5023 ;;      Temps:          0       0       0       0
  5024 ;;      Totals:         0      12       0       0
  5025 ;;Total ram usage:       12 bytes
  5026 ;; Hardware stack levels used:    1
  5027 ;; Hardware stack levels required when called:    7
  5028 ;; This function calls:
  5029 ;;		Nothing
  5030 ;; This function is called by:
  5031 ;;		_rand
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035                           
  5036                           ;psect for function ___lmul
  5037  02E9                     ___lmul:	
  5038                           
  5039                           ;incstack = 0
  5040                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5041  02E9  01A8               	clrf	___lmul@product
  5042  02EA  01A9               	clrf	___lmul@product+1
  5043  02EB  01AA               	clrf	___lmul@product+2
  5044  02EC  01AB               	clrf	___lmul@product+3
  5045  02ED                     l867:	
  5046  02ED  1C20               	btfss	___lmul@multiplier,0
  5047  02EE  2AF7               	goto	l2083
  5048  02EF  0824               	movf	___lmul@multiplicand,w
  5049  02F0  07A8               	addwf	___lmul@product,f
  5050  02F1  0825               	movf	___lmul@multiplicand+1,w
  5051  02F2  3DA9               	addwfc	___lmul@product+1,f
  5052  02F3  0826               	movf	___lmul@multiplicand+2,w
  5053  02F4  3DAA               	addwfc	___lmul@product+2,f
  5054  02F5  0827               	movf	___lmul@multiplicand+3,w
  5055  02F6  3DAB               	addwfc	___lmul@product+3,f
  5056  02F7                     l2083:	
  5057  02F7  35A4               	lslf	___lmul@multiplicand,f
  5058  02F8  0DA5               	rlf	___lmul@multiplicand+1,f
  5059  02F9  0DA6               	rlf	___lmul@multiplicand+2,f
  5060  02FA  0DA7               	rlf	___lmul@multiplicand+3,f
  5061  02FB  36A3               	lsrf	___lmul@multiplier+3,f
  5062  02FC  0CA2               	rrf	___lmul@multiplier+2,f
  5063  02FD  0CA1               	rrf	___lmul@multiplier+1,f
  5064  02FE  0CA0               	rrf	___lmul@multiplier,f
  5065  02FF  0823               	movf	___lmul@multiplier+3,w
  5066  0300  0422               	iorwf	___lmul@multiplier+2,w
  5067  0301  0421               	iorwf	___lmul@multiplier+1,w
  5068  0302  0420               	iorwf	___lmul@multiplier,w
  5069  0303  1D03               	skipz
  5070  0304  2AED               	goto	l867
  5071  0305  082B               	movf	___lmul@product+3,w
  5072  0306  00A3               	movwf	?___lmul+3
  5073  0307  082A               	movf	___lmul@product+2,w
  5074  0308  00A2               	movwf	?___lmul+2
  5075  0309  0829               	movf	___lmul@product+1,w
  5076  030A  00A1               	movwf	?___lmul+1
  5077  030B  0828               	movf	___lmul@product,w
  5078  030C  00A0               	movwf	?___lmul
  5079  030D  0008               	return
  5080  030E                     __end_of___lmul:	
  5081                           
  5082                           	psect	text20
  5083  03A9                     __ptext20:	
  5084 ;; *************** function _new_level *****************
  5085 ;; Defined at:
  5086 ;;		line 13 in file "game.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;		None
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;  j               1    7[BANK0 ] unsigned char 
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      void 
  5093 ;; Registers used:
  5094 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 1F/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5100 ;;      Params:         0       0       0       0
  5101 ;;      Locals:         0       1       0       0
  5102 ;;      Temps:          0       0       0       0
  5103 ;;      Totals:         0       1       0       0
  5104 ;;Total ram usage:        1 bytes
  5105 ;; Hardware stack levels used:    1
  5106 ;; Hardware stack levels required when called:   10
  5107 ;; This function calls:
  5108 ;;		_machine_led_flash
  5109 ;; This function is called by:
  5110 ;;		_game_initialise
  5111 ;;		_game_check_it
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115                           
  5116                           ;psect for function _new_level
  5117  03A9                     _new_level:	
  5118  03A9                     l2159:	
  5119                           ;incstack = 0
  5120                           ; Regs used in _new_level: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5121                           
  5122                           
  5123                           ;game.c: 18:     if( game_level > top_score) {
  5124  03A9  0020               	movlb	0	; select bank0
  5125  03AA  084B               	movf	_game_level,w
  5126  03AB  024A               	subwf	_top_score,w
  5127  03AC  1803               	skipnc
  5128  03AD  2BB0               	goto	l2163
  5129                           
  5130                           ;game.c: 19:         top_score = game_level;
  5131  03AE  084B               	movf	_game_level,w
  5132  03AF  00CA               	movwf	_top_score
  5133  03B0                     l2163:	
  5134                           
  5135                           ;game.c: 23:     game_level++;
  5136  03B0  0ACB               	incf	_game_level,f
  5137                           
  5138                           ;game.c: 24:     move_current = 0;
  5139  03B1  01BE               	clrf	_move_current
  5140                           
  5141                           ;game.c: 25:     uint8_t j;;game.c: 26:     for( j = 0; j < game_level; j++ ) {
  5142  03B2  01A7               	clrf	new_level@j
  5143  03B3                     l2173:	
  5144  03B3  084B               	movf	_game_level,w
  5145  03B4  0227               	subwf	new_level@j,w
  5146  03B5  1803               	btfsc	3,0
  5147  03B6  0008               	return
  5148                           
  5149                           ;game.c: 27:         machine_led_flash(moves[j]);
  5150  03B7  0827               	movf	new_level@j,w
  5151  03B8  23BD               	fcall	PL8	;call to abstracted procedure
  5152  03B9  2330               	fcall	_machine_led_flash
  5153                           
  5154                           ;game.c: 28:     }
  5155  03BA  0020               	movlb	0	; select bank0
  5156  03BB  0AA7               	incf	new_level@j,f
  5157  03BC  2BB3               	goto	l2173
  5158  03BD                     __end_of_new_level:	
  5159  03BD                     PL8:	
  5160  03BD  3E8C               	addlw	140
  5161  03BE  0086               	movwf	6
  5162  03BF  3020               	movlw	32
  5163  03C0  0187               	clrf	7
  5164  03C1  3D87               	addwfc	7,f
  5165  03C2  0801               	movf	1,w
  5166  03C3  0008               	return
  5167  03C4                     __end_ofPL8:	
  5168                           
  5169                           	psect	text21
  5170  0330                     __ptext21:	
  5171 ;; *************** function _machine_led_flash *****************
  5172 ;; Defined at:
  5173 ;;		line 8 in file "machine.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;  led             1    wreg     enum E3499
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;  led             1    6[BANK0 ] enum E3499
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  1    wreg      void 
  5180 ;; Registers used:
  5181 ;;		wreg, status,2, status,0, pclath, cstack
  5182 ;; Tracked objects:
  5183 ;;		On entry : 1F/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5187 ;;      Params:         0       0       0       0
  5188 ;;      Locals:         0       1       0       0
  5189 ;;      Temps:          0       1       0       0
  5190 ;;      Totals:         0       2       0       0
  5191 ;;Total ram usage:        2 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; Hardware stack levels required when called:    9
  5194 ;; This function calls:
  5195 ;;		_setLED
  5196 ;; This function is called by:
  5197 ;;		_new_level
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           
  5202                           ;psect for function _machine_led_flash
  5203  0330                     _machine_led_flash:	
  5204                           
  5205                           ;incstack = 0
  5206                           ; Regs used in _machine_led_flash: [wreg+status,2+status,0+pclath+cstack]
  5207                           ;machine_led_flash@led stored from wreg
  5208  0330  00A6               	movwf	machine_led_flash@led
  5209                           
  5210                           ;machine.c: 9:     setLED(2000, led);
  5211  0331  30D0               	movlw	208
  5212  0332  00A2               	movwf	setLED@duty
  5213  0333  3007               	movlw	7
  5214  0334  00A3               	movwf	setLED@duty+1
  5215  0335  0826               	movf	machine_led_flash@led,w
  5216  0336  00A4               	movwf	setLED@LEDno
  5217  0337  238D               	fcall	_setLED
  5218                           
  5219                           ;machine.c: 10:     _delay((unsigned long)((1000)*(125000/4000.0)));
  5220  0338  3029               	movlw	41
  5221  0339  0020               	movlb	0	; select bank0
  5222  033A  00A5               	movwf	??_machine_led_flash
  5223  033B  3094               	movlw	148
  5224  033C                     u1727:	
  5225  033C  0B89               	decfsz	9,f
  5226  033D  2B3C               	goto	u1727
  5227  033E  0BA5               	decfsz	??_machine_led_flash,f
  5228  033F  2B3C               	goto	u1727
  5229  0340  0000               	nop
  5230                           
  5231                           ;machine.c: 11:     setLED(0, led);
  5232  0341  0020               	movlb	0	; select bank0
  5233  0342  01A2               	clrf	setLED@duty
  5234  0343  01A3               	clrf	setLED@duty+1
  5235  0344  0826               	movf	machine_led_flash@led,w
  5236  0345  00A4               	movwf	setLED@LEDno
  5237  0346  238D               	fcall	_setLED
  5238                           
  5239                           ;machine.c: 12:     _delay((unsigned long)((1000)*(125000/4000.0)));
  5240  0347  3029               	movlw	41
  5241  0348  0020               	movlb	0	; select bank0
  5242  0349  00A5               	movwf	??_machine_led_flash
  5243  034A  3094               	movlw	148
  5244  034B                     u1737:	
  5245  034B  0B89               	decfsz	9,f
  5246  034C  2B4B               	goto	u1737
  5247  034D  0BA5               	decfsz	??_machine_led_flash,f
  5248  034E  2B4B               	goto	u1737
  5249  034F  0000               	nop
  5250  0350  0008               	return
  5251  0351                     __end_of_machine_led_flash:	
  5252                           
  5253                           	psect	text22
  5254  01CB                     __ptext22:	
  5255 ;; *************** function _flashValue *****************
  5256 ;; Defined at:
  5257 ;;		line 19 in file "flashValue.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;  times           1    wreg     unsigned char 
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;  times           1    9[BANK0 ] unsigned char 
  5262 ;; Return value:  Size  Location     Type
  5263 ;;                  1    wreg      void 
  5264 ;; Registers used:
  5265 ;;		wreg, status,2, status,0, pclath, cstack
  5266 ;; Tracked objects:
  5267 ;;		On entry : 0/0
  5268 ;;		On exit  : 1F/0
  5269 ;;		Unchanged: 0/0
  5270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5271 ;;      Params:         0       0       0       0
  5272 ;;      Locals:         0       1       0       0
  5273 ;;      Temps:          0       1       0       0
  5274 ;;      Totals:         0       2       0       0
  5275 ;;Total ram usage:        2 bytes
  5276 ;; Hardware stack levels used:    1
  5277 ;; Hardware stack levels required when called:   10
  5278 ;; This function calls:
  5279 ;;		___lbdiv
  5280 ;;		___lbmod
  5281 ;;		_flashit
  5282 ;;		_setLEDs
  5283 ;; This function is called by:
  5284 ;;		_main
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           
  5289                           ;psect for function _flashValue
  5290  01CB                     _flashValue:	
  5291                           
  5292                           ;incstack = 0
  5293                           ; Regs used in _flashValue: [wreg+status,2+status,0+pclath+cstack]
  5294                           ;flashValue@times stored from wreg
  5295  01CB  0020               	movlb	0	; select bank0
  5296  01CC  00A9               	movwf	flashValue@times
  5297                           
  5298                           ;flashValue.c: 21:     _delay((unsigned long)((2500)*(125000/4000.0)));
  5299  01CD  3066               	movlw	102
  5300  01CE  0020               	movlb	0	; select bank0
  5301  01CF  00A8               	movwf	??_flashValue
  5302  01D0  3074               	movlw	116
  5303  01D1                     u1747:	
  5304  01D1  0B89               	decfsz	9,f
  5305  01D2  29D1               	goto	u1747
  5306  01D3  0BA8               	decfsz	??_flashValue,f
  5307  01D4  29D1               	goto	u1747
  5308  01D5  3200               	nop2
  5309                           
  5310                           ;flashValue.c: 22:     setLEDs(0,0,0);
  5311  01D6  0020               	movlb	0	; select bank0
  5312  01D7  217F               	fcall	PL4	;call to abstracted procedure
  5313  01D8  240B               	fcall	_setLEDs
  5314                           
  5315                           ;flashValue.c: 23:     if( times >= 100) {
  5316  01D9  3064               	movlw	100
  5317  01DA  0020               	movlb	0	; select bank0
  5318  01DB  0229               	subwf	flashValue@times,w
  5319  01DC  1C03               	skipc
  5320  01DD  29EA               	goto	l2585
  5321                           
  5322                           ;flashValue.c: 24:         flashit( red, times / 100 );
  5323  01DE  3064               	movlw	100
  5324  01DF  00A0               	movwf	___lbdiv@divisor
  5325  01E0  0829               	movf	flashValue@times,w
  5326  01E1  23DC               	fcall	___lbdiv
  5327  01E2  00A5               	movwf	flashit@flash
  5328  01E3  3003               	movlw	3
  5329  01E4  22C3               	fcall	_flashit
  5330                           
  5331                           ;flashValue.c: 25:         times = times % 100;
  5332  01E5  3064               	movlw	100
  5333  01E6  00A0               	movwf	___lbmod@divisor
  5334  01E7  0829               	movf	flashValue@times,w
  5335  01E8  23C4               	fcall	___lbmod
  5336  01E9  00A9               	movwf	flashValue@times
  5337  01EA                     l2585:	
  5338                           
  5339                           ;flashValue.c: 27:     if( times >= 10) {
  5340  01EA  300A               	movlw	10
  5341  01EB  0229               	subwf	flashValue@times,w
  5342  01EC  1C03               	skipc
  5343  01ED  29FA               	goto	l2589
  5344                           
  5345                           ;flashValue.c: 28:         flashit( yellow, times / 10 );
  5346  01EE  300A               	movlw	10
  5347  01EF  00A0               	movwf	___lbdiv@divisor
  5348  01F0  0829               	movf	flashValue@times,w
  5349  01F1  23DC               	fcall	___lbdiv
  5350  01F2  00A5               	movwf	flashit@flash
  5351  01F3  3002               	movlw	2
  5352  01F4  22C3               	fcall	_flashit
  5353                           
  5354                           ;flashValue.c: 29:         times = times % 10;
  5355  01F5  300A               	movlw	10
  5356  01F6  00A0               	movwf	___lbmod@divisor
  5357  01F7  0829               	movf	flashValue@times,w
  5358  01F8  23C4               	fcall	___lbmod
  5359  01F9  00A9               	movwf	flashValue@times
  5360  01FA                     l2589:	
  5361                           
  5362                           ;flashValue.c: 31:     if( times >= 1) {
  5363  01FA  0829               	movf	flashValue@times,w
  5364  01FB  1903               	btfsc	3,2
  5365  01FC  0008               	return
  5366                           
  5367                           ;flashValue.c: 32:         flashit( green, times );
  5368  01FD  00A5               	movwf	flashit@flash
  5369  01FE  3001               	movlw	1
  5370  01FF  2AC3               	ljmp	_flashit
  5371  0200                     __end_of_flashValue:	
  5372                           
  5373                           	psect	text23
  5374  040B                     __ptext23:	
  5375 ;; *************** function _setLEDs *****************
  5376 ;; Defined at:
  5377 ;;		line 44 in file "aj_hal.c"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;  led1            2    2[BANK0 ] unsigned short 
  5380 ;;  led2            2    4[BANK0 ] unsigned short 
  5381 ;;  led3            2    6[BANK0 ] unsigned short 
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;		None
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  1    wreg      void 
  5386 ;; Registers used:
  5387 ;;		wreg, status,2, status,0, pclath, cstack
  5388 ;; Tracked objects:
  5389 ;;		On entry : 1F/0
  5390 ;;		On exit  : 1F/1B
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5393 ;;      Params:         0       6       0       0
  5394 ;;      Locals:         0       0       0       0
  5395 ;;      Temps:          0       0       0       0
  5396 ;;      Totals:         0       6       0       0
  5397 ;;Total ram usage:        6 bytes
  5398 ;; Hardware stack levels used:    1
  5399 ;; Hardware stack levels required when called:    9
  5400 ;; This function calls:
  5401 ;;		_PWM1_DutyCycleSet
  5402 ;;		_PWM1_LoadBufferSet
  5403 ;;		_PWM2_DutyCycleSet
  5404 ;;		_PWM2_LoadBufferSet
  5405 ;;		_PWM3_DutyCycleSet
  5406 ;;		_PWM3_LoadBufferSet
  5407 ;;		_startLEDs
  5408 ;; This function is called by:
  5409 ;;		_setupLEDs
  5410 ;;		_machine_warn_user
  5411 ;;		_machine_notify_user
  5412 ;;		_flashValue
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415                           
  5416                           
  5417                           ;psect for function _setLEDs
  5418  040B                     _setLEDs:	
  5419  040B                     l2113:	
  5420                           ;incstack = 0
  5421                           ; Regs used in _setLEDs: [wreg+status,2+status,0+pclath+cstack]
  5422                           
  5423                           
  5424                           ;aj_hal.c: 44: void setLEDs (uint16_t led1, uint16_t led2, uint16_t led3);aj_hal.c: 45: 
      +                          {;aj_hal.c: 46:     startLEDs();
  5425  040B  2597               	fcall	_startLEDs
  5426                           
  5427                           ;aj_hal.c: 47:     PWM1_DutyCycleSet(led1);
  5428  040C  0020               	movlb	0	; select bank0
  5429  040D  0823               	movf	setLEDs@led1+1,w
  5430  040E  00A1               	movwf	PWM1_DutyCycleSet@dutyCycleCount+1
  5431  040F  0822               	movf	setLEDs@led1,w
  5432  0410  00A0               	movwf	PWM1_DutyCycleSet@dutyCycleCount
  5433  0411  252A               	fcall	_PWM1_DutyCycleSet
  5434                           
  5435                           ;aj_hal.c: 48:     PWM1_LoadBufferSet();
  5436  0412  25AC               	fcall	_PWM1_LoadBufferSet
  5437                           
  5438                           ;aj_hal.c: 49:     PWM2_DutyCycleSet(led2);
  5439  0413  0020               	movlb	0	; select bank0
  5440  0414  0825               	movf	setLEDs@led2+1,w
  5441  0415  00A1               	movwf	PWM2_DutyCycleSet@dutyCycleCount+1
  5442  0416  0824               	movf	setLEDs@led2,w
  5443  0417  00A0               	movwf	PWM2_DutyCycleSet@dutyCycleCount
  5444  0418  2522               	fcall	_PWM2_DutyCycleSet
  5445                           
  5446                           ;aj_hal.c: 50:     PWM2_LoadBufferSet();
  5447  0419  25AA               	fcall	_PWM2_LoadBufferSet
  5448                           
  5449                           ;aj_hal.c: 51:     PWM3_DutyCycleSet(led3);
  5450  041A  0020               	movlb	0	; select bank0
  5451  041B  0827               	movf	setLEDs@led3+1,w
  5452  041C  00A1               	movwf	PWM3_DutyCycleSet@dutyCycleCount+1
  5453  041D  0826               	movf	setLEDs@led3,w
  5454  041E  00A0               	movwf	PWM3_DutyCycleSet@dutyCycleCount
  5455  041F  251A               	fcall	_PWM3_DutyCycleSet
  5456                           
  5457                           ;aj_hal.c: 52:     PWM3_LoadBufferSet();
  5458  0420  2DA8               	ljmp	l2025
  5459  0421                     __end_of_setLEDs:	
  5460                           
  5461                           	psect	text24
  5462  0597                     __ptext24:	
  5463 ;; *************** function _startLEDs *****************
  5464 ;; Defined at:
  5465 ;;		line 37 in file "aj_hal.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;		None
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;		None
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      void 
  5472 ;; Registers used:
  5473 ;;		status,2, status,0, pclath, cstack
  5474 ;; Tracked objects:
  5475 ;;		On entry : 1F/0
  5476 ;;		On exit  : 1F/1B
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5479 ;;      Params:         0       0       0       0
  5480 ;;      Locals:         0       0       0       0
  5481 ;;      Temps:          0       0       0       0
  5482 ;;      Totals:         0       0       0       0
  5483 ;;Total ram usage:        0 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:    8
  5486 ;; This function calls:
  5487 ;;		_PWM1_Start
  5488 ;;		_PWM2_Start
  5489 ;;		_PWM3_Start
  5490 ;; This function is called by:
  5491 ;;		_setLEDs
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           
  5496                           ;psect for function _startLEDs
  5497  0597                     _startLEDs:	
  5498                           
  5499                           ;aj_hal.c: 39:     PWM1_Start();
  5500                           
  5501                           ;incstack = 0
  5502                           ; Regs used in _startLEDs: [status,2+status,0+pclath+cstack]
  5503  0597  259A               	fcall	_PWM1_Start
  5504                           
  5505                           ;aj_hal.c: 40:     PWM2_Start();
  5506  0598  25A6               	fcall	_PWM2_Start
  5507                           
  5508                           ;aj_hal.c: 41:     PWM3_Start();
  5509  0599  2DA4               	ljmp	l2033
  5510  059A                     __end_of_startLEDs:	
  5511                           
  5512                           	psect	text25
  5513  05A4                     __ptext25:	
  5514 ;; *************** function _PWM3_Start *****************
  5515 ;; Defined at:
  5516 ;;		line 113 in file "mcc_generated_files/pwm3.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;		None
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;		None
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  1    wreg      void 
  5523 ;; Registers used:
  5524 ;;		None
  5525 ;; Tracked objects:
  5526 ;;		On entry : 1F/1B
  5527 ;;		On exit  : 1F/1B
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5530 ;;      Params:         0       0       0       0
  5531 ;;      Locals:         0       0       0       0
  5532 ;;      Temps:          0       0       0       0
  5533 ;;      Totals:         0       0       0       0
  5534 ;;Total ram usage:        0 bytes
  5535 ;; Hardware stack levels used:    1
  5536 ;; Hardware stack levels required when called:    7
  5537 ;; This function calls:
  5538 ;;		Nothing
  5539 ;; This function is called by:
  5540 ;;		_startLEDs
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           
  5545                           ;psect for function _PWM3_Start
  5546  05A4                     _PWM3_Start:	
  5547  05A4                     l2033:	
  5548                           ;incstack = 0
  5549                           ; Regs used in _PWM3_Start: []
  5550                           
  5551                           
  5552                           ;mcc_generated_files/pwm3.c: 115:     PWM3CONbits.EN = 1;
  5553  05A4  17BB               	bsf	59,7	;volatile
  5554  05A5  0008               	return
  5555  05A6                     __end_of_PWM3_Start:	
  5556                           
  5557                           	psect	text26
  5558  05A6                     __ptext26:	
  5559 ;; *************** function _PWM2_Start *****************
  5560 ;; Defined at:
  5561 ;;		line 113 in file "mcc_generated_files/pwm2.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;		None
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;		None
  5566 ;; Return value:  Size  Location     Type
  5567 ;;                  1    wreg      void 
  5568 ;; Registers used:
  5569 ;;		None
  5570 ;; Tracked objects:
  5571 ;;		On entry : 1F/1B
  5572 ;;		On exit  : 1F/1B
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5575 ;;      Params:         0       0       0       0
  5576 ;;      Locals:         0       0       0       0
  5577 ;;      Temps:          0       0       0       0
  5578 ;;      Totals:         0       0       0       0
  5579 ;;Total ram usage:        0 bytes
  5580 ;; Hardware stack levels used:    1
  5581 ;; Hardware stack levels required when called:    7
  5582 ;; This function calls:
  5583 ;;		Nothing
  5584 ;; This function is called by:
  5585 ;;		_startLEDs
  5586 ;; This function uses a non-reentrant model
  5587 ;;
  5588                           
  5589                           
  5590                           ;psect for function _PWM2_Start
  5591  05A6                     _PWM2_Start:	
  5592                           
  5593                           ;mcc_generated_files/pwm2.c: 115:     PWM2CONbits.EN = 1;
  5594                           
  5595                           ;incstack = 0
  5596                           ; Regs used in _PWM2_Start: []
  5597  05A6  17AB               	bsf	43,7	;volatile
  5598  05A7  0008               	return
  5599  05A8                     __end_of_PWM2_Start:	
  5600                           
  5601                           	psect	text27
  5602  059A                     __ptext27:	
  5603 ;; *************** function _PWM1_Start *****************
  5604 ;; Defined at:
  5605 ;;		line 113 in file "mcc_generated_files/pwm1.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;		None
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;		None
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      void 
  5612 ;; Registers used:
  5613 ;;		None
  5614 ;; Tracked objects:
  5615 ;;		On entry : 1F/0
  5616 ;;		On exit  : 1F/1B
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5619 ;;      Params:         0       0       0       0
  5620 ;;      Locals:         0       0       0       0
  5621 ;;      Temps:          0       0       0       0
  5622 ;;      Totals:         0       0       0       0
  5623 ;;Total ram usage:        0 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:    7
  5626 ;; This function calls:
  5627 ;;		Nothing
  5628 ;; This function is called by:
  5629 ;;		_startLEDs
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           
  5634                           ;psect for function _PWM1_Start
  5635  059A                     _PWM1_Start:	
  5636                           
  5637                           ;mcc_generated_files/pwm1.c: 115:     PWM1CONbits.EN = 1;
  5638                           
  5639                           ;incstack = 0
  5640                           ; Regs used in _PWM1_Start: []
  5641  059A  003B               	movlb	27	; select bank27
  5642  059B  179B               	bsf	27,7	;volatile
  5643  059C  0008               	return
  5644  059D                     __end_of_PWM1_Start:	
  5645                           
  5646                           	psect	text28
  5647  02C3                     __ptext28:	
  5648 ;; *************** function _flashit *****************
  5649 ;; Defined at:
  5650 ;;		line 8 in file "flashValue.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;  colour          1    wreg     enum E3499
  5653 ;;  flash           1    5[BANK0 ] unsigned char 
  5654 ;; Auto vars:     Size  Location     Type
  5655 ;;  colour          1    7[BANK0 ] enum E3499
  5656 ;; Return value:  Size  Location     Type
  5657 ;;                  1    wreg      void 
  5658 ;; Registers used:
  5659 ;;		wreg, status,2, status,0, pclath, cstack
  5660 ;; Tracked objects:
  5661 ;;		On entry : 1F/0
  5662 ;;		On exit  : 1F/0
  5663 ;;		Unchanged: 0/0
  5664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5665 ;;      Params:         0       1       0       0
  5666 ;;      Locals:         0       1       0       0
  5667 ;;      Temps:          0       1       0       0
  5668 ;;      Totals:         0       3       0       0
  5669 ;;Total ram usage:        3 bytes
  5670 ;; Hardware stack levels used:    1
  5671 ;; Hardware stack levels required when called:    9
  5672 ;; This function calls:
  5673 ;;		_setLED
  5674 ;; This function is called by:
  5675 ;;		_flashValue
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           
  5680                           ;psect for function _flashit
  5681  02C3                     _flashit:	
  5682                           
  5683                           ;incstack = 0
  5684                           ; Regs used in _flashit: [wreg+status,2+status,0+pclath+cstack]
  5685                           ;flashit@colour stored from wreg
  5686  02C3  00A7               	movwf	flashit@colour
  5687  02C4                     l843:	
  5688                           ;flashValue.c: 16:     }
  5689                           
  5690                           ;flashValue.c: 8: void flashit(Led colour, uint8_t flash);flashValue.c: 9: {;flashValue.
      +                          c: 10:     while( flash > 0 ) {
  5691                           
  5692                           
  5693                           ;flashValue.c: 10:     while( flash > 0 ) {
  5694  02C4  0825               	movf	flashit@flash,w
  5695  02C5  1903               	btfsc	3,2
  5696  02C6  0008               	return
  5697                           
  5698                           ;flashValue.c: 11:         setLED(2000, colour);
  5699  02C7  30D0               	movlw	208
  5700  02C8  00A2               	movwf	setLED@duty
  5701  02C9  3007               	movlw	7
  5702  02CA  00A3               	movwf	setLED@duty+1
  5703  02CB  0827               	movf	flashit@colour,w
  5704  02CC  00A4               	movwf	setLED@LEDno
  5705  02CD  238D               	fcall	_setLED
  5706                           
  5707                           ;flashValue.c: 12:         _delay((unsigned long)((1700)*(125000/4000.0)));
  5708  02CE  3045               	movlw	69
  5709  02CF  0020               	movlb	0	; select bank0
  5710  02D0  00A6               	movwf	??_flashit
  5711  02D1  30FD               	movlw	253
  5712  02D2                     u1757:	
  5713  02D2  0B89               	decfsz	9,f
  5714  02D3  2AD2               	goto	u1757
  5715  02D4  0BA6               	decfsz	??_flashit,f
  5716  02D5  2AD2               	goto	u1757
  5717  02D6  0000               	nop
  5718                           
  5719                           ;flashValue.c: 13:         setLED(0, colour);
  5720  02D7  0020               	movlb	0	; select bank0
  5721  02D8  01A2               	clrf	setLED@duty
  5722  02D9  01A3               	clrf	setLED@duty+1
  5723  02DA  0827               	movf	flashit@colour,w
  5724  02DB  00A4               	movwf	setLED@LEDno
  5725  02DC  238D               	fcall	_setLED
  5726                           
  5727                           ;flashValue.c: 14:         _delay((unsigned long)((1000)*(125000/4000.0)));
  5728  02DD  3029               	movlw	41
  5729  02DE  0020               	movlb	0	; select bank0
  5730  02DF  00A6               	movwf	??_flashit
  5731  02E0  3094               	movlw	148
  5732  02E1                     u1767:	
  5733  02E1  0B89               	decfsz	9,f
  5734  02E2  2AE1               	goto	u1767
  5735  02E3  0BA6               	decfsz	??_flashit,f
  5736  02E4  2AE1               	goto	u1767
  5737  02E5  0000               	nop
  5738                           
  5739                           ;flashValue.c: 15:         flash--;
  5740  02E6  0020               	movlb	0	; select bank0
  5741  02E7  03A5               	decf	flashit@flash,f
  5742  02E8  2AC4               	goto	l843
  5743  02E9                     __end_of_flashit:	
  5744                           
  5745                           	psect	text29
  5746  038D                     __ptext29:	
  5747 ;; *************** function _setLED *****************
  5748 ;; Defined at:
  5749 ;;		line 73 in file "aj_hal.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  duty            2    2[BANK0 ] unsigned short 
  5752 ;;  LEDno           1    4[BANK0 ] unsigned char 
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;		None
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  1    wreg      void 
  5757 ;; Registers used:
  5758 ;;		wreg, status,2, status,0, pclath, cstack
  5759 ;; Tracked objects:
  5760 ;;		On entry : 1F/0
  5761 ;;		On exit  : 4/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5764 ;;      Params:         0       3       0       0
  5765 ;;      Locals:         0       0       0       0
  5766 ;;      Temps:          0       0       0       0
  5767 ;;      Totals:         0       3       0       0
  5768 ;;Total ram usage:        3 bytes
  5769 ;; Hardware stack levels used:    1
  5770 ;; Hardware stack levels required when called:    8
  5771 ;; This function calls:
  5772 ;;		_PWM1_DutyCycleSet
  5773 ;;		_PWM1_LoadBufferSet
  5774 ;;		_PWM2_DutyCycleSet
  5775 ;;		_PWM2_LoadBufferSet
  5776 ;;		_PWM3_DutyCycleSet
  5777 ;;		_PWM3_LoadBufferSet
  5778 ;; This function is called by:
  5779 ;;		_main
  5780 ;;		_machine_led_flash
  5781 ;;		_flashit
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           
  5786                           ;psect for function _setLED
  5787  038D                     _setLED:	
  5788                           
  5789                           ;aj_hal.c: 73: void setLED (uint16_t duty, uint8_t LEDno);aj_hal.c: 74: {;aj_hal.c: 75: 
      +                              if(LEDno == 3)
  5790                           
  5791                           ;incstack = 0
  5792                           ; Regs used in _setLED: [wreg+status,2+status,0+pclath+cstack]
  5793  038D  3003               	movlw	3
  5794  038E  0624               	xorwf	setLED@LEDno,w
  5795  038F  1D03               	btfss	3,2
  5796  0390  2B97               	goto	l2041
  5797                           
  5798                           ;aj_hal.c: 76:     {;aj_hal.c: 77:         PWM1_DutyCycleSet(duty);
  5799  0391  0823               	movf	setLED@duty+1,w
  5800  0392  00A1               	movwf	PWM1_DutyCycleSet@dutyCycleCount+1
  5801  0393  0822               	movf	setLED@duty,w
  5802  0394  00A0               	movwf	PWM1_DutyCycleSet@dutyCycleCount
  5803  0395  252A               	fcall	_PWM1_DutyCycleSet
  5804                           
  5805                           ;aj_hal.c: 78:         PWM1_LoadBufferSet();
  5806  0396  2DAC               	ljmp	l2017
  5807  0397                     l2041:	
  5808                           ;aj_hal.c: 79:     }
  5809                           
  5810  0397  3002               	movlw	2
  5811  0398  0624               	xorwf	setLED@LEDno,w
  5812  0399  1D03               	btfss	3,2
  5813  039A  2BA1               	goto	l2047
  5814                           
  5815                           ;aj_hal.c: 81:     {;aj_hal.c: 82:         PWM2_DutyCycleSet(duty);
  5816  039B  0823               	movf	setLED@duty+1,w
  5817  039C  00A1               	movwf	PWM2_DutyCycleSet@dutyCycleCount+1
  5818  039D  0822               	movf	setLED@duty,w
  5819  039E  00A0               	movwf	PWM2_DutyCycleSet@dutyCycleCount
  5820  039F  2522               	fcall	_PWM2_DutyCycleSet
  5821                           
  5822                           ;aj_hal.c: 83:         PWM2_LoadBufferSet();
  5823  03A0  2DAA               	ljmp	l2021
  5824  03A1                     l2047:	
  5825                           ;aj_hal.c: 84:     }
  5826                           
  5827  03A1  0B24               	decfsz	setLED@LEDno,w
  5828  03A2  0008               	return
  5829                           
  5830                           ;aj_hal.c: 86:     {;aj_hal.c: 87:         PWM3_DutyCycleSet(duty);
  5831  03A3  0823               	movf	setLED@duty+1,w
  5832  03A4  00A1               	movwf	PWM3_DutyCycleSet@dutyCycleCount+1
  5833  03A5  0822               	movf	setLED@duty,w
  5834  03A6  00A0               	movwf	PWM3_DutyCycleSet@dutyCycleCount
  5835  03A7  251A               	fcall	_PWM3_DutyCycleSet
  5836                           
  5837                           ;aj_hal.c: 88:         PWM3_LoadBufferSet();
  5838  03A8  2DA8               	ljmp	l2025
  5839  03A9                     __end_of_setLED:	
  5840                           
  5841                           	psect	text30
  5842  05A8                     __ptext30:	
  5843 ;; *************** function _PWM3_LoadBufferSet *****************
  5844 ;; Defined at:
  5845 ;;		line 128 in file "mcc_generated_files/pwm3.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;		None
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;		None
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  1    wreg      void 
  5852 ;; Registers used:
  5853 ;;		None
  5854 ;; Tracked objects:
  5855 ;;		On entry : 1F/1B
  5856 ;;		On exit  : 1F/1B
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5859 ;;      Params:         0       0       0       0
  5860 ;;      Locals:         0       0       0       0
  5861 ;;      Temps:          0       0       0       0
  5862 ;;      Totals:         0       0       0       0
  5863 ;;Total ram usage:        0 bytes
  5864 ;; Hardware stack levels used:    1
  5865 ;; Hardware stack levels required when called:    7
  5866 ;; This function calls:
  5867 ;;		Nothing
  5868 ;; This function is called by:
  5869 ;;		_setLEDs
  5870 ;;		_setLED
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           
  5875                           ;psect for function _PWM3_LoadBufferSet
  5876  05A8                     _PWM3_LoadBufferSet:	
  5877  05A8                     l2025:	
  5878                           ;incstack = 0
  5879                           ; Regs used in _PWM3_LoadBufferSet: []
  5880                           
  5881                           
  5882                           ;mcc_generated_files/pwm3.c: 130:     PWM3LDCONbits.LDA = 1;
  5883  05A8  17BF               	bsf	63,7	;volatile
  5884  05A9  0008               	return
  5885  05AA                     __end_of_PWM3_LoadBufferSet:	
  5886                           
  5887                           	psect	text31
  5888  051A                     __ptext31:	
  5889 ;; *************** function _PWM3_DutyCycleSet *****************
  5890 ;; Defined at:
  5891 ;;		line 139 in file "mcc_generated_files/pwm3.c"
  5892 ;; Parameters:    Size  Location     Type
  5893 ;;  dutyCycleCou    2    0[BANK0 ] unsigned short 
  5894 ;; Auto vars:     Size  Location     Type
  5895 ;;		None
  5896 ;; Return value:  Size  Location     Type
  5897 ;;                  1    wreg      void 
  5898 ;; Registers used:
  5899 ;;		wreg
  5900 ;; Tracked objects:
  5901 ;;		On entry : 1F/0
  5902 ;;		On exit  : 1F/1B
  5903 ;;		Unchanged: 0/0
  5904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5905 ;;      Params:         0       2       0       0
  5906 ;;      Locals:         0       0       0       0
  5907 ;;      Temps:          0       0       0       0
  5908 ;;      Totals:         0       2       0       0
  5909 ;;Total ram usage:        2 bytes
  5910 ;; Hardware stack levels used:    1
  5911 ;; Hardware stack levels required when called:    7
  5912 ;; This function calls:
  5913 ;;		Nothing
  5914 ;; This function is called by:
  5915 ;;		_setLEDs
  5916 ;;		_setLED
  5917 ;; This function uses a non-reentrant model
  5918 ;;
  5919                           
  5920                           
  5921                           ;psect for function _PWM3_DutyCycleSet
  5922  051A                     _PWM3_DutyCycleSet:	
  5923                           
  5924                           ;mcc_generated_files/pwm3.c: 139: void PWM3_DutyCycleSet(uint16_t dutyCycleCount);mcc_ge
      +                          nerated_files/pwm3.c: 140: {;mcc_generated_files/pwm3.c: 141:     PWM3DCH = (dutyCycleCo
      +                          unt>>8);
  5925                           
  5926                           ;incstack = 0
  5927                           ; Regs used in _PWM3_DutyCycleSet: [wreg]
  5928  051A  0821               	movf	PWM3_DutyCycleSet@dutyCycleCount+1,w
  5929  051B  003B               	movlb	27	; select bank27
  5930  051C  00B4               	movwf	52	;volatile
  5931                           
  5932                           ;mcc_generated_files/pwm3.c: 142:     PWM3DCL = (dutyCycleCount);
  5933  051D  0020               	movlb	0	; select bank0
  5934  051E  0820               	movf	PWM3_DutyCycleSet@dutyCycleCount,w
  5935  051F  003B               	movlb	27	; select bank27
  5936  0520  00B3               	movwf	51	;volatile
  5937  0521  0008               	return
  5938  0522                     __end_of_PWM3_DutyCycleSet:	
  5939                           
  5940                           	psect	text32
  5941  05AA                     __ptext32:	
  5942 ;; *************** function _PWM2_LoadBufferSet *****************
  5943 ;; Defined at:
  5944 ;;		line 128 in file "mcc_generated_files/pwm2.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;		None
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;		None
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  1    wreg      void 
  5951 ;; Registers used:
  5952 ;;		None
  5953 ;; Tracked objects:
  5954 ;;		On entry : 1F/1B
  5955 ;;		On exit  : 1F/1B
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5958 ;;      Params:         0       0       0       0
  5959 ;;      Locals:         0       0       0       0
  5960 ;;      Temps:          0       0       0       0
  5961 ;;      Totals:         0       0       0       0
  5962 ;;Total ram usage:        0 bytes
  5963 ;; Hardware stack levels used:    1
  5964 ;; Hardware stack levels required when called:    7
  5965 ;; This function calls:
  5966 ;;		Nothing
  5967 ;; This function is called by:
  5968 ;;		_setLEDs
  5969 ;;		_setLED
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           
  5974                           ;psect for function _PWM2_LoadBufferSet
  5975  05AA                     _PWM2_LoadBufferSet:	
  5976  05AA                     l2021:	
  5977                           ;incstack = 0
  5978                           ; Regs used in _PWM2_LoadBufferSet: []
  5979                           
  5980                           
  5981                           ;mcc_generated_files/pwm2.c: 130:     PWM2LDCONbits.LDA = 1;
  5982  05AA  17AF               	bsf	47,7	;volatile
  5983  05AB  0008               	return
  5984  05AC                     __end_of_PWM2_LoadBufferSet:	
  5985                           
  5986                           	psect	text33
  5987  0522                     __ptext33:	
  5988 ;; *************** function _PWM2_DutyCycleSet *****************
  5989 ;; Defined at:
  5990 ;;		line 139 in file "mcc_generated_files/pwm2.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;  dutyCycleCou    2    0[BANK0 ] unsigned short 
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;		None
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  1    wreg      void 
  5997 ;; Registers used:
  5998 ;;		wreg
  5999 ;; Tracked objects:
  6000 ;;		On entry : 1F/0
  6001 ;;		On exit  : 1F/1B
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6004 ;;      Params:         0       2       0       0
  6005 ;;      Locals:         0       0       0       0
  6006 ;;      Temps:          0       0       0       0
  6007 ;;      Totals:         0       2       0       0
  6008 ;;Total ram usage:        2 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; Hardware stack levels required when called:    7
  6011 ;; This function calls:
  6012 ;;		Nothing
  6013 ;; This function is called by:
  6014 ;;		_setLEDs
  6015 ;;		_setLED
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           
  6020                           ;psect for function _PWM2_DutyCycleSet
  6021  0522                     _PWM2_DutyCycleSet:	
  6022                           
  6023                           ;mcc_generated_files/pwm2.c: 139: void PWM2_DutyCycleSet(uint16_t dutyCycleCount);mcc_ge
      +                          nerated_files/pwm2.c: 140: {;mcc_generated_files/pwm2.c: 141:     PWM2DCH = (dutyCycleCo
      +                          unt>>8);
  6024                           
  6025                           ;incstack = 0
  6026                           ; Regs used in _PWM2_DutyCycleSet: [wreg]
  6027  0522  0821               	movf	PWM2_DutyCycleSet@dutyCycleCount+1,w
  6028  0523  003B               	movlb	27	; select bank27
  6029  0524  00A4               	movwf	36	;volatile
  6030                           
  6031                           ;mcc_generated_files/pwm2.c: 142:     PWM2DCL = (dutyCycleCount);
  6032  0525  0020               	movlb	0	; select bank0
  6033  0526  0820               	movf	PWM2_DutyCycleSet@dutyCycleCount,w
  6034  0527  003B               	movlb	27	; select bank27
  6035  0528  00A3               	movwf	35	;volatile
  6036  0529  0008               	return
  6037  052A                     __end_of_PWM2_DutyCycleSet:	
  6038                           
  6039                           	psect	text34
  6040  05AC                     __ptext34:	
  6041 ;; *************** function _PWM1_LoadBufferSet *****************
  6042 ;; Defined at:
  6043 ;;		line 128 in file "mcc_generated_files/pwm1.c"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;		None
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;		None
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  1    wreg      void 
  6050 ;; Registers used:
  6051 ;;		None
  6052 ;; Tracked objects:
  6053 ;;		On entry : 1F/1B
  6054 ;;		On exit  : 1F/1B
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6057 ;;      Params:         0       0       0       0
  6058 ;;      Locals:         0       0       0       0
  6059 ;;      Temps:          0       0       0       0
  6060 ;;      Totals:         0       0       0       0
  6061 ;;Total ram usage:        0 bytes
  6062 ;; Hardware stack levels used:    1
  6063 ;; Hardware stack levels required when called:    7
  6064 ;; This function calls:
  6065 ;;		Nothing
  6066 ;; This function is called by:
  6067 ;;		_setLEDs
  6068 ;;		_setLED
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           
  6073                           ;psect for function _PWM1_LoadBufferSet
  6074  05AC                     _PWM1_LoadBufferSet:	
  6075  05AC                     l2017:	
  6076                           ;incstack = 0
  6077                           ; Regs used in _PWM1_LoadBufferSet: []
  6078                           
  6079                           
  6080                           ;mcc_generated_files/pwm1.c: 130:     PWM1LDCONbits.LDA = 1;
  6081  05AC  179F               	bsf	31,7	;volatile
  6082  05AD  0008               	return
  6083  05AE                     __end_of_PWM1_LoadBufferSet:	
  6084                           
  6085                           	psect	text35
  6086  052A                     __ptext35:	
  6087 ;; *************** function _PWM1_DutyCycleSet *****************
  6088 ;; Defined at:
  6089 ;;		line 139 in file "mcc_generated_files/pwm1.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;  dutyCycleCou    2    0[BANK0 ] unsigned short 
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;		None
  6094 ;; Return value:  Size  Location     Type
  6095 ;;                  1    wreg      void 
  6096 ;; Registers used:
  6097 ;;		wreg
  6098 ;; Tracked objects:
  6099 ;;		On entry : 1F/0
  6100 ;;		On exit  : 1F/1B
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6103 ;;      Params:         0       2       0       0
  6104 ;;      Locals:         0       0       0       0
  6105 ;;      Temps:          0       0       0       0
  6106 ;;      Totals:         0       2       0       0
  6107 ;;Total ram usage:        2 bytes
  6108 ;; Hardware stack levels used:    1
  6109 ;; Hardware stack levels required when called:    7
  6110 ;; This function calls:
  6111 ;;		Nothing
  6112 ;; This function is called by:
  6113 ;;		_setLEDs
  6114 ;;		_setLED
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           
  6118                           
  6119                           ;psect for function _PWM1_DutyCycleSet
  6120  052A                     _PWM1_DutyCycleSet:	
  6121                           
  6122                           ;mcc_generated_files/pwm1.c: 139: void PWM1_DutyCycleSet(uint16_t dutyCycleCount);mcc_ge
      +                          nerated_files/pwm1.c: 140: {;mcc_generated_files/pwm1.c: 141:     PWM1DCH = (dutyCycleCo
      +                          unt>>8);
  6123                           
  6124                           ;incstack = 0
  6125                           ; Regs used in _PWM1_DutyCycleSet: [wreg]
  6126  052A  0821               	movf	PWM1_DutyCycleSet@dutyCycleCount+1,w
  6127  052B  003B               	movlb	27	; select bank27
  6128  052C  0094               	movwf	20	;volatile
  6129                           
  6130                           ;mcc_generated_files/pwm1.c: 142:     PWM1DCL = (dutyCycleCount);
  6131  052D  0020               	movlb	0	; select bank0
  6132  052E  0820               	movf	PWM1_DutyCycleSet@dutyCycleCount,w
  6133  052F  003B               	movlb	27	; select bank27
  6134  0530  0093               	movwf	19	;volatile
  6135  0531  0008               	return
  6136  0532                     __end_of_PWM1_DutyCycleSet:	
  6137                           
  6138                           	psect	text36
  6139  03C4                     __ptext36:	
  6140 ;; *************** function ___lbmod *****************
  6141 ;; Defined at:
  6142 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lbmod.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;  dividend        1    wreg     unsigned char 
  6145 ;;  divisor         1    0[BANK0 ] unsigned char 
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;  dividend        1    2[BANK0 ] unsigned char 
  6148 ;;  rem             1    4[BANK0 ] unsigned char 
  6149 ;;  counter         1    3[BANK0 ] unsigned char 
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  1    wreg      unsigned char 
  6152 ;; Registers used:
  6153 ;;		wreg, status,2, status,0
  6154 ;; Tracked objects:
  6155 ;;		On entry : 1F/0
  6156 ;;		On exit  : 1F/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6159 ;;      Params:         0       1       0       0
  6160 ;;      Locals:         0       3       0       0
  6161 ;;      Temps:          0       1       0       0
  6162 ;;      Totals:         0       5       0       0
  6163 ;;Total ram usage:        5 bytes
  6164 ;; Hardware stack levels used:    1
  6165 ;; Hardware stack levels required when called:    7
  6166 ;; This function calls:
  6167 ;;		Nothing
  6168 ;; This function is called by:
  6169 ;;		_flashValue
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           
  6174                           ;psect for function ___lbmod
  6175  03C4                     ___lbmod:	
  6176                           
  6177                           ;incstack = 0
  6178                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  6179                           ;___lbmod@dividend stored from wreg
  6180  03C4  00A2               	movwf	___lbmod@dividend
  6181  03C5  3008               	movlw	8
  6182  03C6  00A3               	movwf	___lbmod@counter
  6183  03C7  01A4               	clrf	___lbmod@rem
  6184  03C8                     l2435:	
  6185  03C8  0822               	movf	___lbmod@dividend,w
  6186  03C9  00A1               	movwf	??___lbmod
  6187  03CA  3007               	movlw	7
  6188  03CB                     u1175:	
  6189  03CB  36A1               	lsrf	??___lbmod,f
  6190  03CC  0B89               	decfsz	9,f
  6191  03CD  2BCB               	goto	u1175
  6192  03CE  3524               	lslf	___lbmod@rem,w
  6193  03CF  0421               	iorwf	??___lbmod,w
  6194  03D0  00A4               	movwf	___lbmod@rem
  6195  03D1  35A2               	lslf	___lbmod@dividend,f
  6196  03D2  0820               	movf	___lbmod@divisor,w
  6197  03D3  0224               	subwf	___lbmod@rem,w
  6198  03D4  1C03               	skipc
  6199  03D5  2BD8               	goto	l2443
  6200  03D6  0820               	movf	___lbmod@divisor,w
  6201  03D7  02A4               	subwf	___lbmod@rem,f
  6202  03D8                     l2443:	
  6203  03D8  0BA3               	decfsz	___lbmod@counter,f
  6204  03D9  2BC8               	goto	l2435
  6205  03DA  0824               	movf	___lbmod@rem,w
  6206  03DB  0008               	return
  6207  03DC                     __end_of___lbmod:	
  6208                           
  6209                           	psect	text37
  6210  03DC                     __ptext37:	
  6211 ;; *************** function ___lbdiv *****************
  6212 ;; Defined at:
  6213 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lbdiv.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;  dividend        1    wreg     unsigned char 
  6216 ;;  divisor         1    0[BANK0 ] unsigned char 
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;  dividend        1    1[BANK0 ] unsigned char 
  6219 ;;  quotient        1    3[BANK0 ] unsigned char 
  6220 ;;  counter         1    2[BANK0 ] unsigned char 
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  1    wreg      unsigned char 
  6223 ;; Registers used:
  6224 ;;		wreg, status,2, status,0
  6225 ;; Tracked objects:
  6226 ;;		On entry : 1F/0
  6227 ;;		On exit  : 1F/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6230 ;;      Params:         0       1       0       0
  6231 ;;      Locals:         0       3       0       0
  6232 ;;      Temps:          0       0       0       0
  6233 ;;      Totals:         0       4       0       0
  6234 ;;Total ram usage:        4 bytes
  6235 ;; Hardware stack levels used:    1
  6236 ;; Hardware stack levels required when called:    7
  6237 ;; This function calls:
  6238 ;;		Nothing
  6239 ;; This function is called by:
  6240 ;;		_flashValue
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           
  6245                           ;psect for function ___lbdiv
  6246  03DC                     ___lbdiv:	
  6247                           
  6248                           ;incstack = 0
  6249                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  6250                           ;___lbdiv@dividend stored from wreg
  6251  03DC  00A1               	movwf	___lbdiv@dividend
  6252  03DD  01A3               	clrf	___lbdiv@quotient
  6253  03DE  0820               	movf	___lbdiv@divisor,w
  6254  03DF  1903               	btfsc	3,2
  6255  03E0  2BF2               	goto	l2427
  6256  03E1  01A2               	clrf	___lbdiv@counter
  6257  03E2                     l2413:	
  6258  03E2  0AA2               	incf	___lbdiv@counter,f
  6259  03E3  1BA0               	btfsc	___lbdiv@divisor,7
  6260  03E4  2BE7               	goto	l1067
  6261  03E5  35A0               	lslf	___lbdiv@divisor,f
  6262  03E6  2BE2               	goto	l2413
  6263  03E7                     l1067:	
  6264  03E7  35A3               	lslf	___lbdiv@quotient,f
  6265  03E8  0820               	movf	___lbdiv@divisor,w
  6266  03E9  0221               	subwf	___lbdiv@dividend,w
  6267  03EA  1C03               	skipc
  6268  03EB  2BEF               	goto	l2423
  6269  03EC  0820               	movf	___lbdiv@divisor,w
  6270  03ED  02A1               	subwf	___lbdiv@dividend,f
  6271  03EE  1423               	bsf	___lbdiv@quotient,0
  6272  03EF                     l2423:	
  6273  03EF  36A0               	lsrf	___lbdiv@divisor,f
  6274  03F0  0BA2               	decfsz	___lbdiv@counter,f
  6275  03F1  2BE7               	goto	l1067
  6276  03F2                     l2427:	
  6277  03F2  0823               	movf	___lbdiv@quotient,w
  6278  03F3  0008               	return
  6279  03F4                     __end_of___lbdiv:	
  6280                           
  6281                           	psect	text38
  6282  002E                     __ptext38:	
  6283 ;; *************** function _checkButtons *****************
  6284 ;; Defined at:
  6285 ;;		line 187 in file "aj_hal.c"
  6286 ;; Parameters:    Size  Location     Type
  6287 ;;  buttons         1    wreg     PTR _Bool 
  6288 ;;		 -> buttons(3), 
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;  buttons         1    6[BANK0 ] PTR _Bool 
  6291 ;;		 -> buttons(3), 
  6292 ;;  adc             2    7[BANK0 ] unsigned short 
  6293 ;;  i               1    5[BANK0 ] unsigned char 
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  1    wreg      void 
  6296 ;; Registers used:
  6297 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 1F/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6303 ;;      Params:         0       0       0       0
  6304 ;;      Locals:         0       4       0       0
  6305 ;;      Temps:          0       1       0       0
  6306 ;;      Totals:         0       5       0       0
  6307 ;;Total ram usage:        5 bytes
  6308 ;; Hardware stack levels used:    1
  6309 ;; Hardware stack levels required when called:    8
  6310 ;; This function calls:
  6311 ;;		_ADC1_GetConversion
  6312 ;;		_disableSerial
  6313 ;; This function is called by:
  6314 ;;		_main
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           
  6318                           
  6319                           ;psect for function _checkButtons
  6320  002E                     _checkButtons:	
  6321                           
  6322                           ;incstack = 0
  6323                           ; Regs used in _checkButtons: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6324                           ;checkButtons@buttons stored from wreg
  6325  002E  0020               	movlb	0	; select bank0
  6326  002F  00A6               	movwf	checkButtons@buttons
  6327                           
  6328                           ;aj_hal.c: 187: void checkButtons(_Bool buttons[]);aj_hal.c: 188: {;aj_hal.c: 189:     d
      +                          isableSerial();
  6329  0030  253A               	fcall	_disableSerial
  6330                           
  6331                           ;aj_hal.c: 190:     _delay((unsigned long)((1)*(125000/4000.0)));
  6332  0031  300A               	movlw	10
  6333  0032                     u1777:	
  6334  0032  0B89               	decfsz	9,f
  6335  0033  2832               	goto	u1777
  6336  0034  0000               	nop
  6337                           
  6338                           ;aj_hal.c: 191:     uint16_t adc = (ADC1_GetConversion(channel_AN0) >> 8) & 0xFF;
  6339  0035  3000               	movlw	0
  6340  0036  2370               	fcall	_ADC1_GetConversion
  6341  0037  0821               	movf	?_ADC1_GetConversion+1,w
  6342  0038  00A7               	movwf	checkButtons@adc
  6343  0039  01A8               	clrf	checkButtons@adc+1
  6344  003A  01A8               	clrf	checkButtons@adc+1
  6345                           
  6346                           ;aj_hal.c: 193:     for(i = 0; i < 3; i++)
  6347  003B  01A5               	clrf	checkButtons@i
  6348  003C                     l2491:	
  6349                           
  6350                           ;aj_hal.c: 194:     {;aj_hal.c: 195:         buttons[i] = 0;
  6351  003C  0825               	movf	checkButtons@i,w
  6352  003D  0726               	addwf	checkButtons@buttons,w
  6353  003E  00A4               	movwf	??_checkButtons
  6354  003F  0086               	movwf	6
  6355  0040  3003               	movlw	3
  6356  0041  0187               	clrf	7
  6357  0042  0181               	clrf	1
  6358                           
  6359                           ;aj_hal.c: 196:     }
  6360  0043  0AA5               	incf	checkButtons@i,f
  6361  0044  0225               	subwf	checkButtons@i,w
  6362  0045  1C03               	skipc
  6363  0046  283C               	goto	l2491
  6364                           
  6365                           ;aj_hal.c: 198:     if(adc <= 27)
  6366  0047  3000               	movlw	0
  6367  0048  0228               	subwf	checkButtons@adc+1,w
  6368  0049  301C               	movlw	28
  6369  004A  1903               	skipnz
  6370  004B  0227               	subwf	checkButtons@adc,w
  6371  004C  1C03               	btfss	3,0
  6372  004D  0008               	return
  6373                           
  6374                           ;aj_hal.c: 199:     {;aj_hal.c: 201:     }
  6375  004E  3000               	movlw	0
  6376  004F  0228               	subwf	checkButtons@adc+1,w
  6377  0050  301C               	movlw	28
  6378  0051  1903               	skipnz
  6379  0052  0227               	subwf	checkButtons@adc,w
  6380  0053  3000               	movlw	0
  6381  0054  1C03               	skipc
  6382  0055  2860               	goto	L5
  6383  0056  0228               	subwf	checkButtons@adc+1,w
  6384  0057  3052               	movlw	82
  6385  0058  1903               	skipnz
  6386  0059  0227               	subwf	checkButtons@adc,w
  6387  005A  1803               	skipnc
  6388  005B  285F               	goto	l2507
  6389                           
  6390                           ;aj_hal.c: 203:     {;aj_hal.c: 205:         buttons[2] = 1;
  6391  005C  0826               	movf	checkButtons@buttons,w
  6392  005D  3E02               	addlw	2
  6393                           
  6394                           ;aj_hal.c: 206:     }
  6395  005E  28D6               	ljmp	PL12	;call to abstracted procedure
  6396  005F                     l2507:	
  6397  005F  3000               	movlw	0
  6398  0060                     L5:	
  6399  0060  0228               	subwf	checkButtons@adc+1,w
  6400  0061  3052               	movlw	82
  6401  0062  1903               	skipnz
  6402  0063  0227               	subwf	checkButtons@adc,w
  6403  0064  3000               	movlw	0
  6404  0065  1C03               	skipc
  6405  0066  2879               	goto	L6
  6406  0067  0228               	subwf	checkButtons@adc+1,w
  6407  0068  3062               	movlw	98
  6408  0069  1903               	skipnz
  6409  006A  0227               	subwf	checkButtons@adc,w
  6410  006B  1C03               	btfss	3,0
  6411  006C  2876               	goto	l2511
  6412  006D  2878               	goto	l2513
  6413  006E                     l2515:	
  6414  006E  3000               	movlw	0
  6415  006F  0228               	subwf	checkButtons@adc+1,w
  6416  0070  307D               	movlw	125
  6417  0071  1903               	skipnz
  6418  0072  0227               	subwf	checkButtons@adc,w
  6419  0073  1803               	skipnc
  6420  0074  287F               	goto	l2521
  6421                           
  6422                           ;aj_hal.c: 213:     {;aj_hal.c: 215:         buttons[2] = 1;
  6423  0075  20CA               	fcall	PL6	;call to abstracted procedure
  6424  0076                     l2511:	
  6425                           
  6426                           ;aj_hal.c: 208:     {;aj_hal.c: 210:         buttons[1] = 1;
  6427  0076  0A26               	incf	checkButtons@buttons,w
  6428                           
  6429                           ;aj_hal.c: 211:     }
  6430  0077  28D1               	ljmp	PL10	;call to abstracted procedure
  6431  0078                     l2513:	
  6432  0078  3000               	movlw	0
  6433  0079                     L6:	
  6434  0079  0228               	subwf	checkButtons@adc+1,w
  6435  007A  3062               	movlw	98
  6436  007B  1903               	skipnz
  6437  007C  0227               	subwf	checkButtons@adc,w
  6438  007D  1803               	btfsc	3,0
  6439  007E  286E               	goto	l2515
  6440  007F                     l2521:	
  6441  007F  3000               	movlw	0
  6442  0080  0228               	subwf	checkButtons@adc+1,w
  6443  0081  307D               	movlw	125
  6444  0082  1903               	skipnz
  6445  0083  0227               	subwf	checkButtons@adc,w
  6446  0084  3000               	movlw	0
  6447  0085  1C03               	skipc
  6448  0086  289E               	goto	L7
  6449  0087  0228               	subwf	checkButtons@adc+1,w
  6450  0088  308D               	movlw	141
  6451  0089  1903               	skipnz
  6452  008A  0227               	subwf	checkButtons@adc,w
  6453  008B  1C03               	btfss	3,0
  6454  008C  289B               	goto	l2525
  6455  008D  289D               	goto	l2527
  6456  008E                     l2529:	
  6457  008E  3000               	movlw	0
  6458  008F  0228               	subwf	checkButtons@adc+1,w
  6459  0090  3098               	movlw	152
  6460  0091  1903               	skipnz
  6461  0092  0227               	subwf	checkButtons@adc,w
  6462  0093  1803               	skipnc
  6463  0094  28A4               	goto	l2535
  6464                           
  6465                           ;aj_hal.c: 224:     {;aj_hal.c: 226:         buttons[2] = 1;
  6466  0095  0826               	movf	checkButtons@buttons,w
  6467  0096  3E02               	addlw	2
  6468  0097                     L4:	
  6469  0097  0086               	movwf	6
  6470  0098  0187               	clrf	7
  6471  0099  0181               	clrf	1
  6472  009A  0A81               	incf	1,f
  6473  009B                     l2525:	
  6474                           
  6475                           ;aj_hal.c: 219:     {;aj_hal.c: 221:         buttons[0] = 1;
  6476  009B  0826               	movf	checkButtons@buttons,w
  6477                           
  6478                           ;aj_hal.c: 222:     }
  6479  009C  28D1               	ljmp	PL10	;call to abstracted procedure
  6480  009D                     l2527:	
  6481  009D  3000               	movlw	0
  6482  009E                     L7:	
  6483  009E  0228               	subwf	checkButtons@adc+1,w
  6484  009F  308D               	movlw	141
  6485  00A0  1903               	skipnz
  6486  00A1  0227               	subwf	checkButtons@adc,w
  6487  00A2  1803               	btfsc	3,0
  6488  00A3  288E               	goto	l2529
  6489  00A4                     l2535:	
  6490  00A4  3000               	movlw	0
  6491  00A5  0228               	subwf	checkButtons@adc+1,w
  6492  00A6  3098               	movlw	152
  6493  00A7  1903               	skipnz
  6494  00A8  0227               	subwf	checkButtons@adc,w
  6495  00A9  3000               	movlw	0
  6496  00AA  1C03               	skipc
  6497  00AB  28BA               	goto	L8
  6498  00AC  0228               	subwf	checkButtons@adc+1,w
  6499  00AD  309E               	movlw	158
  6500  00AE  1903               	skipnz
  6501  00AF  0227               	subwf	checkButtons@adc,w
  6502  00B0  1803               	skipnc
  6503  00B1  28B9               	goto	l2541
  6504                           
  6505                           ;aj_hal.c: 230:     {;aj_hal.c: 232:         buttons[1] = 1;
  6506  00B2  0A26               	incf	checkButtons@buttons,w
  6507  00B3  0086               	movwf	6
  6508  00B4  0187               	clrf	7
  6509  00B5  0181               	clrf	1
  6510  00B6  0A81               	incf	1,f
  6511                           
  6512                           ;aj_hal.c: 233:         buttons[0] = 1;
  6513  00B7  0826               	movf	checkButtons@buttons,w
  6514                           
  6515                           ;aj_hal.c: 234:     }
  6516  00B8  28D6               	ljmp	PL12	;call to abstracted procedure
  6517  00B9                     l2541:	
  6518  00B9  3000               	movlw	0
  6519  00BA                     L8:	
  6520  00BA  0228               	subwf	checkButtons@adc+1,w
  6521  00BB  309E               	movlw	158
  6522  00BC  1903               	skipnz
  6523  00BD  0227               	subwf	checkButtons@adc,w
  6524  00BE  1C03               	skipc
  6525  00BF  0008               	return
  6526  00C0  3001               	movlw	1
  6527  00C1  0228               	subwf	checkButtons@adc+1,w
  6528  00C2  3000               	movlw	0
  6529  00C3  1903               	skipnz
  6530  00C4  0227               	subwf	checkButtons@adc,w
  6531  00C5  1803               	skipnc
  6532  00C6  0008               	return
  6533                           
  6534                           ;aj_hal.c: 236:     {;aj_hal.c: 238:         buttons[2] = 1;
  6535  00C7  20CA               	fcall	PL6	;call to abstracted procedure
  6536                           
  6537                           ;aj_hal.c: 239:         buttons[1] = 1;
  6538  00C8  0A26               	incf	checkButtons@buttons,w
  6539  00C9  2897               	goto	L4
  6540  00CA                     __end_of_checkButtons:	
  6541  00CA                     PL6:	
  6542  00CA  0826               	movf	checkButtons@buttons,w
  6543  00CB  3E02               	addlw	2
  6544  00CC  0086               	movwf	6
  6545  00CD  0187               	clrf	7
  6546  00CE  0181               	clrf	1
  6547  00CF  0A81               	incf	1,f
  6548  00D0  0008               	return
  6549  00D1                     __end_ofPL6:	
  6550  00D1                     PL10:	
  6551  00D1  0086               	movwf	6
  6552  00D2  0187               	clrf	7
  6553  00D3  0181               	clrf	1
  6554  00D4  0A81               	incf	1,f
  6555  00D5  0008               	return
  6556  00D6                     __end_ofPL10:	
  6557  00D6                     PL12:	
  6558  00D6  0086               	movwf	6
  6559  00D7  0181               	clrf	1
  6560  00D8  0A81               	incf	1,f
  6561  00D9  0008               	return
  6562  00DA                     __end_ofPL12:	
  6563                           
  6564                           	psect	text39
  6565  053A                     __ptext39:	
  6566 ;; *************** function _disableSerial *****************
  6567 ;; Defined at:
  6568 ;;		line 17 in file "aj_hal.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;		None
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;		None
  6573 ;; Return value:  Size  Location     Type
  6574 ;;                  1    wreg      void 
  6575 ;; Registers used:
  6576 ;;		wreg
  6577 ;; Tracked objects:
  6578 ;;		On entry : 1F/0
  6579 ;;		On exit  : 1F/3
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6582 ;;      Params:         0       0       0       0
  6583 ;;      Locals:         0       0       0       0
  6584 ;;      Temps:          0       0       0       0
  6585 ;;      Totals:         0       0       0       0
  6586 ;;Total ram usage:        0 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:    7
  6589 ;; This function calls:
  6590 ;;		Nothing
  6591 ;; This function is called by:
  6592 ;;		_checkButtons
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           
  6597                           ;psect for function _disableSerial
  6598  053A                     _disableSerial:	
  6599                           
  6600                           ;aj_hal.c: 19:     _delay((unsigned long)((1)*(125000/4000.0)));
  6601                           
  6602                           ;incstack = 0
  6603                           ; Regs used in _disableSerial: [wreg]
  6604  053A  300A               	movlw	10
  6605  053B                     u1787:	
  6606  053B  0B89               	decfsz	9,f
  6607  053C  2D3B               	goto	u1787
  6608  053D  0000               	nop
  6609                           
  6610                           ;aj_hal.c: 20:     RCSTAbits.SPEN = 0;
  6611  053E  0023               	movlb	3	; select bank3
  6612  053F  139D               	bcf	29,7	;volatile
  6613  0540  0008               	return
  6614  0541                     __end_of_disableSerial:	
  6615                           
  6616                           	psect	text40
  6617  0370                     __ptext40:	
  6618 ;; *************** function _ADC1_GetConversion *****************
  6619 ;; Defined at:
  6620 ;;		line 113 in file "mcc_generated_files/adc1.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;  channel         1    wreg     enum E3025
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;  channel         1    3[BANK0 ] enum E3025
  6625 ;; Return value:  Size  Location     Type
  6626 ;;                  2    0[BANK0 ] unsigned short 
  6627 ;; Registers used:
  6628 ;;		wreg, status,2, status,0
  6629 ;; Tracked objects:
  6630 ;;		On entry : 0/3
  6631 ;;		On exit  : 1F/0
  6632 ;;		Unchanged: 0/0
  6633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6634 ;;      Params:         0       2       0       0
  6635 ;;      Locals:         0       1       0       0
  6636 ;;      Temps:          0       1       0       0
  6637 ;;      Totals:         0       4       0       0
  6638 ;;Total ram usage:        4 bytes
  6639 ;; Hardware stack levels used:    1
  6640 ;; Hardware stack levels required when called:    7
  6641 ;; This function calls:
  6642 ;;		Nothing
  6643 ;; This function is called by:
  6644 ;;		_checkButtons
  6645 ;; This function uses a non-reentrant model
  6646 ;;
  6647                           
  6648                           
  6649                           ;psect for function _ADC1_GetConversion
  6650  0370                     _ADC1_GetConversion:	
  6651                           
  6652                           ;incstack = 0
  6653                           ; Regs used in _ADC1_GetConversion: [wreg+status,2+status,0]
  6654                           ;ADC1_GetConversion@channel stored from wreg
  6655  0370  0020               	movlb	0	; select bank0
  6656  0371  00A3               	movwf	ADC1_GetConversion@channel
  6657                           
  6658                           ;mcc_generated_files/adc1.c: 113: adc_result_t ADC1_GetConversion(adc_channel_t channel)
      +                          ;mcc_generated_files/adc1.c: 114: {;mcc_generated_files/adc1.c: 116:     ADCON0bits.CHS 
      +                          = channel;
  6659  0372  00A2               	movwf	??_ADC1_GetConversion
  6660  0373  0DA2               	rlf	??_ADC1_GetConversion,f
  6661  0374  0DA2               	rlf	??_ADC1_GetConversion,f
  6662  0375  0021               	movlb	1	; select bank1
  6663  0376  081D               	movf	29,w	;volatile
  6664  0377  0020               	movlb	0	; select bank0
  6665  0378  0622               	xorwf	??_ADC1_GetConversion,w
  6666  0379  3983               	andlw	-125
  6667  037A  0622               	xorwf	??_ADC1_GetConversion,w
  6668  037B  0021               	movlb	1	; select bank1
  6669  037C  009D               	movwf	29	;volatile
  6670                           
  6671                           ;mcc_generated_files/adc1.c: 119:     ADCON0bits.ADON = 1;
  6672  037D  141D               	bsf	29,0	;volatile
  6673                           
  6674                           ;mcc_generated_files/adc1.c: 125:     ADCON0bits.GO_nDONE = 1;
  6675                           
  6676                           ;mcc_generated_files/adc1.c: 122:     _delay((unsigned long)((5)*(125000/4000000.0)));
  6677  037E  0021               	movlb	1	; select bank1
  6678  037F  149D               	bsf	29,1	;volatile
  6679  0380                     l268:	
  6680                           ;mcc_generated_files/adc1.c: 129:     {;mcc_generated_files/adc1.c: 130:     }
  6681                           
  6682                           
  6683                           ;mcc_generated_files/adc1.c: 128:     while (ADCON0bits.GO_nDONE)
  6684  0380  189D               	btfsc	29,1	;volatile
  6685  0381  2B80               	goto	l268
  6686                           
  6687                           ;mcc_generated_files/adc1.c: 133:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6688  0382  081C               	movf	28,w	;volatile
  6689  0383  0020               	movlb	0	; select bank0
  6690  0384  00A1               	movwf	?_ADC1_GetConversion+1
  6691  0385  01A0               	clrf	?_ADC1_GetConversion
  6692  0386  0021               	movlb	1	; select bank1
  6693  0387  081B               	movf	27,w	;volatile
  6694  0388  0020               	movlb	0	; select bank0
  6695  0389  07A0               	addwf	?_ADC1_GetConversion,f
  6696  038A  1803               	skipnc
  6697  038B  0AA1               	incf	?_ADC1_GetConversion+1,f
  6698  038C  0008               	return
  6699  038D                     __end_of_ADC1_GetConversion:	
  6700                           
  6701                           	psect	text41
  6702  04D8                     __ptext41:	
  6703 ;; *************** function _SYSTEM_Initialize *****************
  6704 ;; Defined at:
  6705 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;		None
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;		None
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  1    wreg      void 
  6712 ;; Registers used:
  6713 ;;		wreg, status,2, status,0, pclath, cstack
  6714 ;; Tracked objects:
  6715 ;;		On entry : B1F/0
  6716 ;;		On exit  : 1F/3
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6719 ;;      Params:         0       0       0       0
  6720 ;;      Locals:         0       0       0       0
  6721 ;;      Temps:          0       0       0       0
  6722 ;;      Totals:         0       0       0       0
  6723 ;;Total ram usage:        0 bytes
  6724 ;; Hardware stack levels used:    1
  6725 ;; Hardware stack levels required when called:    9
  6726 ;; This function calls:
  6727 ;;		_ADC1_Initialize
  6728 ;;		_EUSART_Initialize
  6729 ;;		_OSCILLATOR_Initialize
  6730 ;;		_PIN_MANAGER_Initialize
  6731 ;;		_PWM1_Initialize
  6732 ;;		_PWM2_Initialize
  6733 ;;		_PWM3_Initialize
  6734 ;;		_TMR1_Initialize
  6735 ;;		_WDT_Initialize
  6736 ;; This function is called by:
  6737 ;;		_main
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           
  6742                           ;psect for function _SYSTEM_Initialize
  6743  04D8                     _SYSTEM_Initialize:	
  6744                           
  6745                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6746                           
  6747                           ;incstack = 0
  6748                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6749  04D8  229A               	fcall	_PIN_MANAGER_Initialize
  6750                           
  6751                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6752  04D9  2541               	fcall	_OSCILLATOR_Initialize
  6753                           
  6754                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  6755  04DA  2582               	fcall	_WDT_Initialize
  6756                           
  6757                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
  6758  04DB  244A               	fcall	_PWM1_Initialize
  6759                           
  6760                           ;mcc_generated_files/mcc.c: 57:     PWM2_Initialize();
  6761  04DC  2472               	fcall	_PWM2_Initialize
  6762                           
  6763                           ;mcc_generated_files/mcc.c: 58:     ADC1_Initialize();
  6764  04DD  24E1               	fcall	_ADC1_Initialize
  6765                           
  6766                           ;mcc_generated_files/mcc.c: 59:     PWM3_Initialize();
  6767  04DE  2436               	fcall	_PWM3_Initialize
  6768                           
  6769                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  6770  04DF  23F4               	fcall	_TMR1_Initialize
  6771                           
  6772                           ;mcc_generated_files/mcc.c: 61:     EUSART_Initialize();
  6773  04E0  2CB8               	ljmp	l2289
  6774  04E1                     __end_of_SYSTEM_Initialize:	
  6775                           
  6776                           	psect	text42
  6777  0582                     __ptext42:	
  6778 ;; *************** function _WDT_Initialize *****************
  6779 ;; Defined at:
  6780 ;;		line 74 in file "mcc_generated_files/mcc.c"
  6781 ;; Parameters:    Size  Location     Type
  6782 ;;		None
  6783 ;; Auto vars:     Size  Location     Type
  6784 ;;		None
  6785 ;; Return value:  Size  Location     Type
  6786 ;;                  1    wreg      void 
  6787 ;; Registers used:
  6788 ;;		wreg
  6789 ;; Tracked objects:
  6790 ;;		On entry : B1F/2
  6791 ;;		On exit  : B1F/1
  6792 ;;		Unchanged: B00/0
  6793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6794 ;;      Params:         0       0       0       0
  6795 ;;      Locals:         0       0       0       0
  6796 ;;      Temps:          0       0       0       0
  6797 ;;      Totals:         0       0       0       0
  6798 ;;Total ram usage:        0 bytes
  6799 ;; Hardware stack levels used:    1
  6800 ;; Hardware stack levels required when called:    7
  6801 ;; This function calls:
  6802 ;;		Nothing
  6803 ;; This function is called by:
  6804 ;;		_SYSTEM_Initialize
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           
  6809                           ;psect for function _WDT_Initialize
  6810  0582                     _WDT_Initialize:	
  6811                           
  6812                           ;mcc_generated_files/mcc.c: 77:     WDTCON = 0x16;
  6813                           
  6814                           ;incstack = 0
  6815                           ; Regs used in _WDT_Initialize: [wreg]
  6816  0582  3016               	movlw	22
  6817  0583  0021               	movlb	1	; select bank1
  6818  0584  0097               	movwf	23	;volatile
  6819  0585  0008               	return
  6820  0586                     __end_of_WDT_Initialize:	
  6821                           
  6822                           	psect	text43
  6823  03F4                     __ptext43:	
  6824 ;; *************** function _TMR1_Initialize *****************
  6825 ;; Defined at:
  6826 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  6827 ;; Parameters:    Size  Location     Type
  6828 ;;		None
  6829 ;; Auto vars:     Size  Location     Type
  6830 ;;		None
  6831 ;; Return value:  Size  Location     Type
  6832 ;;                  1    wreg      void 
  6833 ;; Registers used:
  6834 ;;		wreg, status,2, status,0, pclath, cstack
  6835 ;; Tracked objects:
  6836 ;;		On entry : 1F/1B
  6837 ;;		On exit  : 1F/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6840 ;;      Params:         0       0       0       0
  6841 ;;      Locals:         0       0       0       0
  6842 ;;      Temps:          0       0       0       0
  6843 ;;      Totals:         0       0       0       0
  6844 ;;Total ram usage:        0 bytes
  6845 ;; Hardware stack levels used:    1
  6846 ;; Hardware stack levels required when called:    8
  6847 ;; This function calls:
  6848 ;;		_TMR1_SetInterruptHandler
  6849 ;; This function is called by:
  6850 ;;		_SYSTEM_Initialize
  6851 ;; This function uses a non-reentrant model
  6852 ;;
  6853                           
  6854                           
  6855                           ;psect for function _TMR1_Initialize
  6856  03F4                     _TMR1_Initialize:	
  6857                           
  6858                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  6859                           
  6860                           ;incstack = 0
  6861                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6862  03F4  0020               	movlb	0	; select bank0
  6863  03F5  0199               	clrf	25	;volatile
  6864                           
  6865                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x67;
  6866  03F6  3067               	movlw	103
  6867  03F7  0097               	movwf	23	;volatile
  6868                           
  6869                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x69;
  6870  03F8  3069               	movlw	105
  6871  03F9  0096               	movwf	22	;volatile
  6872                           
  6873                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  6874  03FA  0817               	movf	23,w	;volatile
  6875  03FB  00FA               	movwf	_timer1ReloadVal+1	;volatile
  6876  03FC  01F9               	clrf	_timer1ReloadVal	;volatile
  6877  03FD  0816               	movf	22,w	;volatile
  6878  03FE  04F9               	iorwf	_timer1ReloadVal,f	;volatile
  6879                           
  6880                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  6881  03FF  1011               	bcf	17,0	;volatile
  6882                           
  6883                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  6884  0400  0021               	movlb	1	; select bank1
  6885  0401  1411               	bsf	17,0	;volatile
  6886                           
  6887                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  6888  0402  30B8               	movlw	low _TMR1_DefaultInterruptHandler
  6889  0403  0020               	movlb	0	; select bank0
  6890  0404  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  6891  0405  3005               	movlw	high _TMR1_DefaultInterruptHandler
  6892  0406  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  6893  0407  2564               	fcall	_TMR1_SetInterruptHandler
  6894                           
  6895                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x31;
  6896  0408  3031               	movlw	49
  6897  0409  0098               	movwf	24	;volatile
  6898  040A  0008               	return
  6899  040B                     __end_of_TMR1_Initialize:	
  6900                           
  6901                           	psect	text44
  6902  0564                     __ptext44:	
  6903 ;; *************** function _TMR1_SetInterruptHandler *****************
  6904 ;; Defined at:
  6905 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  6906 ;; Parameters:    Size  Location     Type
  6907 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  6908 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;		None
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  1    wreg      void 
  6913 ;; Registers used:
  6914 ;;		wreg
  6915 ;; Tracked objects:
  6916 ;;		On entry : 1F/0
  6917 ;;		On exit  : 1F/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6920 ;;      Params:         0       2       0       0
  6921 ;;      Locals:         0       0       0       0
  6922 ;;      Temps:          0       0       0       0
  6923 ;;      Totals:         0       2       0       0
  6924 ;;Total ram usage:        2 bytes
  6925 ;; Hardware stack levels used:    1
  6926 ;; Hardware stack levels required when called:    7
  6927 ;; This function calls:
  6928 ;;		Nothing
  6929 ;; This function is called by:
  6930 ;;		_TMR1_Initialize
  6931 ;; This function uses a non-reentrant model
  6932 ;;
  6933                           
  6934                           
  6935                           ;psect for function _TMR1_SetInterruptHandler
  6936  0564                     _TMR1_SetInterruptHandler:	
  6937                           
  6938                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  6939                           
  6940                           ;incstack = 0
  6941                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  6942  0564  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  6943  0565  00C7               	movwf	_TMR1_InterruptHandler+1
  6944  0566  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  6945  0567  00C6               	movwf	_TMR1_InterruptHandler
  6946  0568  0008               	return
  6947  0569                     __end_of_TMR1_SetInterruptHandler:	
  6948                           
  6949                           	psect	text45
  6950  0436                     __ptext45:	
  6951 ;; *************** function _PWM3_Initialize *****************
  6952 ;; Defined at:
  6953 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  6954 ;; Parameters:    Size  Location     Type
  6955 ;;		None
  6956 ;; Auto vars:     Size  Location     Type
  6957 ;;		None
  6958 ;; Return value:  Size  Location     Type
  6959 ;;                  1    wreg      void 
  6960 ;; Registers used:
  6961 ;;		wreg, status,2
  6962 ;; Tracked objects:
  6963 ;;		On entry : 1F/1
  6964 ;;		On exit  : 1F/1B
  6965 ;;		Unchanged: 0/0
  6966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6967 ;;      Params:         0       0       0       0
  6968 ;;      Locals:         0       0       0       0
  6969 ;;      Temps:          0       0       0       0
  6970 ;;      Totals:         0       0       0       0
  6971 ;;Total ram usage:        0 bytes
  6972 ;; Hardware stack levels used:    1
  6973 ;; Hardware stack levels required when called:    7
  6974 ;; This function calls:
  6975 ;;		Nothing
  6976 ;; This function is called by:
  6977 ;;		_SYSTEM_Initialize
  6978 ;; This function uses a non-reentrant model
  6979 ;;
  6980                           
  6981                           
  6982                           ;psect for function _PWM3_Initialize
  6983  0436                     _PWM3_Initialize:	
  6984                           
  6985                           ;mcc_generated_files/pwm3.c: 63:     PWM3INTE = 0x00;
  6986                           
  6987                           ;incstack = 0
  6988                           ; Regs used in _PWM3_Initialize: [wreg+status,2]
  6989  0436  003B               	movlb	27	; select bank27
  6990  0437  01BC               	clrf	60	;volatile
  6991                           
  6992                           ;mcc_generated_files/pwm3.c: 66:     PWM3INTF = 0x00;
  6993  0438  01BD               	clrf	61	;volatile
  6994                           
  6995                           ;mcc_generated_files/pwm3.c: 69:     PWM3CLKCON = 0x00;
  6996  0439  01BE               	clrf	62	;volatile
  6997                           
  6998                           ;mcc_generated_files/pwm3.c: 72:     PWM3LDCON = 0x00;
  6999  043A  01BF               	clrf	63	;volatile
  7000                           
  7001                           ;mcc_generated_files/pwm3.c: 75:     PWM3OFCON = 0x00;
  7002  043B  01C0               	clrf	64	;volatile
  7003                           
  7004                           ;mcc_generated_files/pwm3.c: 78:     PWM3PHH = 0x00;
  7005  043C  01B2               	clrf	50	;volatile
  7006                           
  7007                           ;mcc_generated_files/pwm3.c: 81:     PWM3PHL = 0x00;
  7008  043D  01B1               	clrf	49	;volatile
  7009                           
  7010                           ;mcc_generated_files/pwm3.c: 84:     PWM3DCH = 0x00;
  7011  043E  01B4               	clrf	52	;volatile
  7012                           
  7013                           ;mcc_generated_files/pwm3.c: 87:     PWM3DCL = 0x00;
  7014  043F  01B3               	clrf	51	;volatile
  7015                           
  7016                           ;mcc_generated_files/pwm3.c: 90:     PWM3PRH = 0x00;
  7017  0440  01B6               	clrf	54	;volatile
  7018                           
  7019                           ;mcc_generated_files/pwm3.c: 93:     PWM3PRL = 0x01;
  7020  0441  3001               	movlw	1
  7021  0442  00B5               	movwf	53	;volatile
  7022                           
  7023                           ;mcc_generated_files/pwm3.c: 96:     PWM3OFH = 0x00;
  7024  0443  01B8               	clrf	56	;volatile
  7025                           
  7026                           ;mcc_generated_files/pwm3.c: 99:     PWM3OFL = 0x01;
  7027  0444  00B7               	movwf	55	;volatile
  7028                           
  7029                           ;mcc_generated_files/pwm3.c: 102:     PWM3TMRH = 0x00;
  7030  0445  01BA               	clrf	58	;volatile
  7031                           
  7032                           ;mcc_generated_files/pwm3.c: 105:     PWM3TMRL = 0x00;
  7033  0446  01B9               	clrf	57	;volatile
  7034                           
  7035                           ;mcc_generated_files/pwm3.c: 108:     PWM3CON = 0xC0;
  7036  0447  30C0               	movlw	192
  7037  0448  00BB               	movwf	59	;volatile
  7038  0449  0008               	return
  7039  044A                     __end_of_PWM3_Initialize:	
  7040                           
  7041                           	psect	text46
  7042  0472                     __ptext46:	
  7043 ;; *************** function _PWM2_Initialize *****************
  7044 ;; Defined at:
  7045 ;;		line 58 in file "mcc_generated_files/pwm2.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;		None
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;		None
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  1    wreg      void 
  7052 ;; Registers used:
  7053 ;;		wreg, status,2
  7054 ;; Tracked objects:
  7055 ;;		On entry : B1F/1B
  7056 ;;		On exit  : B1F/1B
  7057 ;;		Unchanged: B00/0
  7058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7059 ;;      Params:         0       0       0       0
  7060 ;;      Locals:         0       0       0       0
  7061 ;;      Temps:          0       0       0       0
  7062 ;;      Totals:         0       0       0       0
  7063 ;;Total ram usage:        0 bytes
  7064 ;; Hardware stack levels used:    1
  7065 ;; Hardware stack levels required when called:    7
  7066 ;; This function calls:
  7067 ;;		Nothing
  7068 ;; This function is called by:
  7069 ;;		_SYSTEM_Initialize
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           
  7074                           ;psect for function _PWM2_Initialize
  7075  0472                     _PWM2_Initialize:	
  7076                           
  7077                           ;mcc_generated_files/pwm2.c: 63:     PWM2INTE = 0x00;
  7078                           
  7079                           ;incstack = 0
  7080                           ; Regs used in _PWM2_Initialize: [wreg+status,2]
  7081  0472  01AC               	clrf	44	;volatile
  7082                           
  7083                           ;mcc_generated_files/pwm2.c: 66:     PWM2INTF = 0x00;
  7084  0473  01AD               	clrf	45	;volatile
  7085                           
  7086                           ;mcc_generated_files/pwm2.c: 69:     PWM2CLKCON = 0x00;
  7087  0474  01AE               	clrf	46	;volatile
  7088                           
  7089                           ;mcc_generated_files/pwm2.c: 72:     PWM2LDCON = 0x00;
  7090  0475  01AF               	clrf	47	;volatile
  7091                           
  7092                           ;mcc_generated_files/pwm2.c: 75:     PWM2OFCON = 0x00;
  7093  0476  01B0               	clrf	48	;volatile
  7094                           
  7095                           ;mcc_generated_files/pwm2.c: 78:     PWM2PHH = 0x00;
  7096  0477  01A2               	clrf	34	;volatile
  7097                           
  7098                           ;mcc_generated_files/pwm2.c: 81:     PWM2PHL = 0x00;
  7099  0478  01A1               	clrf	33	;volatile
  7100                           
  7101                           ;mcc_generated_files/pwm2.c: 84:     PWM2DCH = 0x00;
  7102  0479  01A4               	clrf	36	;volatile
  7103                           
  7104                           ;mcc_generated_files/pwm2.c: 87:     PWM2DCL = 0x00;
  7105  047A  01A3               	clrf	35	;volatile
  7106                           
  7107                           ;mcc_generated_files/pwm2.c: 90:     PWM2PRH = 0x00;
  7108  047B  01A6               	clrf	38	;volatile
  7109                           
  7110                           ;mcc_generated_files/pwm2.c: 93:     PWM2PRL = 0x01;
  7111  047C  3001               	movlw	1
  7112  047D  00A5               	movwf	37	;volatile
  7113                           
  7114                           ;mcc_generated_files/pwm2.c: 96:     PWM2OFH = 0x00;
  7115  047E  01A8               	clrf	40	;volatile
  7116                           
  7117                           ;mcc_generated_files/pwm2.c: 99:     PWM2OFL = 0x01;
  7118  047F  00A7               	movwf	39	;volatile
  7119                           
  7120                           ;mcc_generated_files/pwm2.c: 102:     PWM2TMRH = 0x00;
  7121  0480  01AA               	clrf	42	;volatile
  7122                           
  7123                           ;mcc_generated_files/pwm2.c: 105:     PWM2TMRL = 0x00;
  7124  0481  01A9               	clrf	41	;volatile
  7125                           
  7126                           ;mcc_generated_files/pwm2.c: 108:     PWM2CON = 0xC0;
  7127  0482  30C0               	movlw	192
  7128  0483  00AB               	movwf	43	;volatile
  7129  0484  0008               	return
  7130  0485                     __end_of_PWM2_Initialize:	
  7131                           
  7132                           	psect	text47
  7133  044A                     __ptext47:	
  7134 ;; *************** function _PWM1_Initialize *****************
  7135 ;; Defined at:
  7136 ;;		line 58 in file "mcc_generated_files/pwm1.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;		None
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;		None
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1    wreg      void 
  7143 ;; Registers used:
  7144 ;;		wreg, status,2
  7145 ;; Tracked objects:
  7146 ;;		On entry : B1F/1
  7147 ;;		On exit  : B1F/1B
  7148 ;;		Unchanged: B00/0
  7149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7150 ;;      Params:         0       0       0       0
  7151 ;;      Locals:         0       0       0       0
  7152 ;;      Temps:          0       0       0       0
  7153 ;;      Totals:         0       0       0       0
  7154 ;;Total ram usage:        0 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; Hardware stack levels required when called:    7
  7157 ;; This function calls:
  7158 ;;		Nothing
  7159 ;; This function is called by:
  7160 ;;		_SYSTEM_Initialize
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           
  7165                           ;psect for function _PWM1_Initialize
  7166  044A                     _PWM1_Initialize:	
  7167                           
  7168                           ;mcc_generated_files/pwm1.c: 63:     PWM1INTE = 0x00;
  7169                           
  7170                           ;incstack = 0
  7171                           ; Regs used in _PWM1_Initialize: [wreg+status,2]
  7172  044A  003B               	movlb	27	; select bank27
  7173  044B  019C               	clrf	28	;volatile
  7174                           
  7175                           ;mcc_generated_files/pwm1.c: 66:     PWM1INTF = 0x00;
  7176  044C  019D               	clrf	29	;volatile
  7177                           
  7178                           ;mcc_generated_files/pwm1.c: 69:     PWM1CLKCON = 0x00;
  7179  044D  019E               	clrf	30	;volatile
  7180                           
  7181                           ;mcc_generated_files/pwm1.c: 72:     PWM1LDCON = 0x00;
  7182  044E  019F               	clrf	31	;volatile
  7183                           
  7184                           ;mcc_generated_files/pwm1.c: 75:     PWM1OFCON = 0x00;
  7185  044F  01A0               	clrf	32	;volatile
  7186                           
  7187                           ;mcc_generated_files/pwm1.c: 78:     PWM1PHH = 0x00;
  7188  0450  0192               	clrf	18	;volatile
  7189                           
  7190                           ;mcc_generated_files/pwm1.c: 81:     PWM1PHL = 0x00;
  7191  0451  0191               	clrf	17	;volatile
  7192                           
  7193                           ;mcc_generated_files/pwm1.c: 84:     PWM1DCH = 0x00;
  7194  0452  0194               	clrf	20	;volatile
  7195                           
  7196                           ;mcc_generated_files/pwm1.c: 87:     PWM1DCL = 0x00;
  7197  0453  0193               	clrf	19	;volatile
  7198                           
  7199                           ;mcc_generated_files/pwm1.c: 90:     PWM1PRH = 0x00;
  7200  0454  0196               	clrf	22	;volatile
  7201                           
  7202                           ;mcc_generated_files/pwm1.c: 93:     PWM1PRL = 0x01;
  7203  0455  3001               	movlw	1
  7204  0456  0095               	movwf	21	;volatile
  7205                           
  7206                           ;mcc_generated_files/pwm1.c: 96:     PWM1OFH = 0x00;
  7207  0457  0198               	clrf	24	;volatile
  7208                           
  7209                           ;mcc_generated_files/pwm1.c: 99:     PWM1OFL = 0x01;
  7210  0458  0097               	movwf	23	;volatile
  7211                           
  7212                           ;mcc_generated_files/pwm1.c: 102:     PWM1TMRH = 0x00;
  7213  0459  019A               	clrf	26	;volatile
  7214                           
  7215                           ;mcc_generated_files/pwm1.c: 105:     PWM1TMRL = 0x00;
  7216  045A  0199               	clrf	25	;volatile
  7217                           
  7218                           ;mcc_generated_files/pwm1.c: 108:     PWM1CON = 0xC0;
  7219  045B  30C0               	movlw	192
  7220  045C  009B               	movwf	27	;volatile
  7221  045D  0008               	return
  7222  045E                     __end_of_PWM1_Initialize:	
  7223                           
  7224                           	psect	text48
  7225  029A                     __ptext48:	
  7226 ;; *************** function _PIN_MANAGER_Initialize *****************
  7227 ;; Defined at:
  7228 ;;		line 60 in file "mcc_generated_files/pin_manager.c"
  7229 ;; Parameters:    Size  Location     Type
  7230 ;;		None
  7231 ;; Auto vars:     Size  Location     Type
  7232 ;;		None
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  1    wreg      void 
  7235 ;; Registers used:
  7236 ;;		wreg, status,2, status,0, pclath, cstack
  7237 ;; Tracked objects:
  7238 ;;		On entry : B1F/0
  7239 ;;		On exit  : B1F/0
  7240 ;;		Unchanged: B00/0
  7241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7242 ;;      Params:         0       0       0       0
  7243 ;;      Locals:         0       0       0       0
  7244 ;;      Temps:          0       0       0       0
  7245 ;;      Totals:         0       0       0       0
  7246 ;;Total ram usage:        0 bytes
  7247 ;; Hardware stack levels used:    1
  7248 ;; Hardware stack levels required when called:    8
  7249 ;; This function calls:
  7250 ;;		_IOCAF0_SetInterruptHandler
  7251 ;;		_IOCAF5_SetInterruptHandler
  7252 ;; This function is called by:
  7253 ;;		_SYSTEM_Initialize
  7254 ;; This function uses a non-reentrant model
  7255 ;;
  7256                           
  7257                           
  7258                           ;psect for function _PIN_MANAGER_Initialize
  7259  029A                     _PIN_MANAGER_Initialize:	
  7260                           
  7261                           ;mcc_generated_files/pin_manager.c: 65:     LATA = 0x00;
  7262                           
  7263                           ;incstack = 0
  7264                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7265  029A  0022               	movlb	2	; select bank2
  7266  029B  018C               	clrf	12	;volatile
  7267                           
  7268                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x29;
  7269  029C  3029               	movlw	41
  7270  029D  0021               	movlb	1	; select bank1
  7271  029E  008C               	movwf	12	;volatile
  7272                           
  7273                           ;mcc_generated_files/pin_manager.c: 75:     ANSELA = 0x01;
  7274  029F  3001               	movlw	1
  7275  02A0  0023               	movlb	3	; select bank3
  7276  02A1  008C               	movwf	12	;volatile
  7277                           
  7278                           ;mcc_generated_files/pin_manager.c: 80:     WPUA = 0x20;
  7279  02A2  3020               	movlw	32
  7280  02A3  0024               	movlb	4	; select bank4
  7281  02A4  008C               	movwf	12	;volatile
  7282                           
  7283                           ;mcc_generated_files/pin_manager.c: 81:     OPTION_REGbits.nWPUEN = 0;
  7284  02A5  0021               	movlb	1	; select bank1
  7285  02A6  1395               	bcf	21,7	;volatile
  7286                           
  7287                           ;mcc_generated_files/pin_manager.c: 86:     ODCONA = 0x00;
  7288  02A7  0025               	movlb	5	; select bank5
  7289  02A8  018C               	clrf	12	;volatile
  7290                           
  7291                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONA = 0x37;
  7292  02A9  3037               	movlw	55
  7293  02AA  0026               	movlb	6	; select bank6
  7294  02AB  008C               	movwf	12	;volatile
  7295                           
  7296                           ;mcc_generated_files/pin_manager.c: 96:     APFCON = 0x82;
  7297  02AC  3082               	movlw	130
  7298  02AD  0022               	movlb	2	; select bank2
  7299  02AE  009D               	movwf	29	;volatile
  7300                           
  7301                           ;mcc_generated_files/pin_manager.c: 102:     IOCAFbits.IOCAF0 = 0;
  7302  02AF  0027               	movlb	7	; select bank7
  7303  02B0  1013               	bcf	19,0	;volatile
  7304                           
  7305                           ;mcc_generated_files/pin_manager.c: 104:     IOCAFbits.IOCAF5 = 0;
  7306  02B1  1293               	bcf	19,5	;volatile
  7307                           
  7308                           ;mcc_generated_files/pin_manager.c: 106:     IOCANbits.IOCAN0 = 0;
  7309  02B2  1012               	bcf	18,0	;volatile
  7310                           
  7311                           ;mcc_generated_files/pin_manager.c: 108:     IOCANbits.IOCAN5 = 0;
  7312  02B3  1292               	bcf	18,5	;volatile
  7313                           
  7314                           ;mcc_generated_files/pin_manager.c: 110:     IOCAPbits.IOCAP0 = 1;
  7315  02B4  1411               	bsf	17,0	;volatile
  7316                           
  7317                           ;mcc_generated_files/pin_manager.c: 112:     IOCAPbits.IOCAP5 = 1;
  7318  02B5  1691               	bsf	17,5	;volatile
  7319                           
  7320                           ;mcc_generated_files/pin_manager.c: 117:     IOCAF0_SetInterruptHandler(IOCAF0_DefaultIn
      +                          terruptHandler);
  7321  02B6  30BA               	movlw	low _IOCAF0_DefaultInterruptHandler
  7322  02B7  0020               	movlb	0	; select bank0
  7323  02B8  00A0               	movwf	IOCAF0_SetInterruptHandler@InterruptHandler
  7324  02B9  3005               	movlw	high _IOCAF0_DefaultInterruptHandler
  7325  02BA  00A1               	movwf	IOCAF0_SetInterruptHandler@InterruptHandler+1
  7326  02BB  256E               	fcall	_IOCAF0_SetInterruptHandler
  7327                           
  7328                           ;mcc_generated_files/pin_manager.c: 118:     IOCAF5_SetInterruptHandler(IOCAF5_DefaultIn
      +                          terruptHandler);
  7329  02BC  30B9               	movlw	low _IOCAF5_DefaultInterruptHandler
  7330  02BD  00A0               	movwf	IOCAF5_SetInterruptHandler@InterruptHandler
  7331  02BE  3005               	movlw	high _IOCAF5_DefaultInterruptHandler
  7332  02BF  00A1               	movwf	IOCAF5_SetInterruptHandler@InterruptHandler+1
  7333  02C0  2569               	fcall	_IOCAF5_SetInterruptHandler
  7334                           
  7335                           ;mcc_generated_files/pin_manager.c: 121:     INTCONbits.IOCIE = 1;
  7336  02C1  158B               	bsf	11,3	;volatile
  7337  02C2  0008               	return
  7338  02C3                     __end_of_PIN_MANAGER_Initialize:	
  7339                           
  7340                           	psect	text49
  7341  0569                     __ptext49:	
  7342 ;; *************** function _IOCAF5_SetInterruptHandler *****************
  7343 ;; Defined at:
  7344 ;;		line 187 in file "mcc_generated_files/pin_manager.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  7347 ;;		 -> connectHandler(1), IOCAF5_DefaultInterruptHandler(1), 
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;		None
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  1    wreg      void 
  7352 ;; Registers used:
  7353 ;;		wreg
  7354 ;; Tracked objects:
  7355 ;;		On entry : B1F/0
  7356 ;;		On exit  : B1F/0
  7357 ;;		Unchanged: B00/0
  7358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7359 ;;      Params:         0       2       0       0
  7360 ;;      Locals:         0       0       0       0
  7361 ;;      Temps:          0       0       0       0
  7362 ;;      Totals:         0       2       0       0
  7363 ;;Total ram usage:        2 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; Hardware stack levels required when called:    7
  7366 ;; This function calls:
  7367 ;;		Nothing
  7368 ;; This function is called by:
  7369 ;;		_PIN_MANAGER_Initialize
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           
  7374                           ;psect for function _IOCAF5_SetInterruptHandler
  7375  0569                     _IOCAF5_SetInterruptHandler:	
  7376                           
  7377                           ;mcc_generated_files/pin_manager.c: 188:     IOCAF5_InterruptHandler = InterruptHandler;
  7378                           
  7379                           ;incstack = 0
  7380                           ; Regs used in _IOCAF5_SetInterruptHandler: [wreg]
  7381  0569  0821               	movf	IOCAF5_SetInterruptHandler@InterruptHandler+1,w
  7382  056A  00FC               	movwf	_IOCAF5_InterruptHandler+1
  7383  056B  0820               	movf	IOCAF5_SetInterruptHandler@InterruptHandler,w
  7384  056C  00FB               	movwf	_IOCAF5_InterruptHandler
  7385  056D  0008               	return
  7386  056E                     __end_of_IOCAF5_SetInterruptHandler:	
  7387                           
  7388                           	psect	text50
  7389  056E                     __ptext50:	
  7390 ;; *************** function _IOCAF0_SetInterruptHandler *****************
  7391 ;; Defined at:
  7392 ;;		line 157 in file "mcc_generated_files/pin_manager.c"
  7393 ;; Parameters:    Size  Location     Type
  7394 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  7395 ;;		 -> buttonHandler(1), IOCAF0_DefaultInterruptHandler(1), 
  7396 ;; Auto vars:     Size  Location     Type
  7397 ;;		None
  7398 ;; Return value:  Size  Location     Type
  7399 ;;                  1    wreg      void 
  7400 ;; Registers used:
  7401 ;;		wreg
  7402 ;; Tracked objects:
  7403 ;;		On entry : B1F/0
  7404 ;;		On exit  : B1F/0
  7405 ;;		Unchanged: B00/0
  7406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7407 ;;      Params:         0       2       0       0
  7408 ;;      Locals:         0       0       0       0
  7409 ;;      Temps:          0       0       0       0
  7410 ;;      Totals:         0       2       0       0
  7411 ;;Total ram usage:        2 bytes
  7412 ;; Hardware stack levels used:    1
  7413 ;; Hardware stack levels required when called:    7
  7414 ;; This function calls:
  7415 ;;		Nothing
  7416 ;; This function is called by:
  7417 ;;		_PIN_MANAGER_Initialize
  7418 ;; This function uses a non-reentrant model
  7419 ;;
  7420                           
  7421                           
  7422                           ;psect for function _IOCAF0_SetInterruptHandler
  7423  056E                     _IOCAF0_SetInterruptHandler:	
  7424                           
  7425                           ;mcc_generated_files/pin_manager.c: 158:     IOCAF0_InterruptHandler = InterruptHandler;
  7426                           
  7427                           ;incstack = 0
  7428                           ; Regs used in _IOCAF0_SetInterruptHandler: [wreg]
  7429  056E  0821               	movf	IOCAF0_SetInterruptHandler@InterruptHandler+1,w
  7430  056F  00C9               	movwf	_IOCAF0_InterruptHandler+1
  7431  0570  0820               	movf	IOCAF0_SetInterruptHandler@InterruptHandler,w
  7432  0571  00C8               	movwf	_IOCAF0_InterruptHandler
  7433  0572  0008               	return
  7434  0573                     __end_of_IOCAF0_SetInterruptHandler:	
  7435                           
  7436                           	psect	text51
  7437  0541                     __ptext51:	
  7438 ;; *************** function _OSCILLATOR_Initialize *****************
  7439 ;; Defined at:
  7440 ;;		line 64 in file "mcc_generated_files/mcc.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;		None
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;		None
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  1    wreg      void 
  7447 ;; Registers used:
  7448 ;;		wreg, status,2
  7449 ;; Tracked objects:
  7450 ;;		On entry : B1F/0
  7451 ;;		On exit  : B1F/2
  7452 ;;		Unchanged: B00/0
  7453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7454 ;;      Params:         0       0       0       0
  7455 ;;      Locals:         0       0       0       0
  7456 ;;      Temps:          0       0       0       0
  7457 ;;      Totals:         0       0       0       0
  7458 ;;Total ram usage:        0 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; Hardware stack levels required when called:    7
  7461 ;; This function calls:
  7462 ;;		Nothing
  7463 ;; This function is called by:
  7464 ;;		_SYSTEM_Initialize
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           
  7469                           ;psect for function _OSCILLATOR_Initialize
  7470  0541                     _OSCILLATOR_Initialize:	
  7471                           
  7472                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x38;
  7473                           
  7474                           ;incstack = 0
  7475                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7476  0541  3038               	movlw	56
  7477  0542  0021               	movlb	1	; select bank1
  7478  0543  0099               	movwf	25	;volatile
  7479                           
  7480                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  7481  0544  0198               	clrf	24	;volatile
  7482                           
  7483                           ;mcc_generated_files/mcc.c: 71:     BORCON = 0x00;
  7484  0545  0022               	movlb	2	; select bank2
  7485  0546  0196               	clrf	22	;volatile
  7486  0547  0008               	return
  7487  0548                     __end_of_OSCILLATOR_Initialize:	
  7488                           
  7489                           	psect	text52
  7490  04B8                     __ptext52:	
  7491 ;; *************** function _EUSART_Initialize *****************
  7492 ;; Defined at:
  7493 ;;		line 56 in file "mcc_generated_files/eusart.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;		None
  7496 ;; Auto vars:     Size  Location     Type
  7497 ;;		None
  7498 ;; Return value:  Size  Location     Type
  7499 ;;                  1    wreg      void 
  7500 ;; Registers used:
  7501 ;;		wreg, status,2
  7502 ;; Tracked objects:
  7503 ;;		On entry : 1F/0
  7504 ;;		On exit  : 1F/3
  7505 ;;		Unchanged: 0/0
  7506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7507 ;;      Params:         0       0       0       0
  7508 ;;      Locals:         0       0       0       0
  7509 ;;      Temps:          0       0       0       0
  7510 ;;      Totals:         0       0       0       0
  7511 ;;Total ram usage:        0 bytes
  7512 ;; Hardware stack levels used:    1
  7513 ;; Hardware stack levels required when called:    7
  7514 ;; This function calls:
  7515 ;;		Nothing
  7516 ;; This function is called by:
  7517 ;;		_SYSTEM_Initialize
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           
  7522                           ;psect for function _EUSART_Initialize
  7523  04B8                     _EUSART_Initialize:	
  7524  04B8                     l2289:	
  7525                           ;incstack = 0
  7526                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  7527                           
  7528                           
  7529                           ;mcc_generated_files/eusart.c: 61:     BAUDCON = 0x08;
  7530  04B8  3008               	movlw	8
  7531  04B9  0023               	movlb	3	; select bank3
  7532  04BA  009F               	movwf	31	;volatile
  7533                           
  7534                           ;mcc_generated_files/eusart.c: 64:     RCSTA = 0x90;
  7535  04BB  3090               	movlw	144
  7536  04BC  009D               	movwf	29	;volatile
  7537                           
  7538                           ;mcc_generated_files/eusart.c: 67:     TXSTA = 0x24;
  7539  04BD  3024               	movlw	36
  7540  04BE  009E               	movwf	30	;volatile
  7541                           
  7542                           ;mcc_generated_files/eusart.c: 70:     SPBRGL = 0x0C;
  7543  04BF  300C               	movlw	12
  7544  04C0  009B               	movwf	27	;volatile
  7545                           
  7546                           ;mcc_generated_files/eusart.c: 73:     SPBRGH = 0x00;
  7547  04C1  019C               	clrf	28	;volatile
  7548  04C2  0008               	return
  7549  04C3                     __end_of_EUSART_Initialize:	
  7550                           
  7551                           	psect	text53
  7552  04E1                     __ptext53:	
  7553 ;; *************** function _ADC1_Initialize *****************
  7554 ;; Defined at:
  7555 ;;		line 65 in file "mcc_generated_files/adc1.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;		None
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;		None
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  1    wreg      void 
  7562 ;; Registers used:
  7563 ;;		wreg, status,2
  7564 ;; Tracked objects:
  7565 ;;		On entry : B1F/1B
  7566 ;;		On exit  : B1F/1
  7567 ;;		Unchanged: B00/0
  7568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7569 ;;      Params:         0       0       0       0
  7570 ;;      Locals:         0       0       0       0
  7571 ;;      Temps:          0       0       0       0
  7572 ;;      Totals:         0       0       0       0
  7573 ;;Total ram usage:        0 bytes
  7574 ;; Hardware stack levels used:    1
  7575 ;; Hardware stack levels required when called:    7
  7576 ;; This function calls:
  7577 ;;		Nothing
  7578 ;; This function is called by:
  7579 ;;		_SYSTEM_Initialize
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           
  7584                           ;psect for function _ADC1_Initialize
  7585  04E1                     _ADC1_Initialize:	
  7586                           
  7587                           ;mcc_generated_files/adc1.c: 70:     ADCON0 = 0x01;
  7588                           
  7589                           ;incstack = 0
  7590                           ; Regs used in _ADC1_Initialize: [wreg+status,2]
  7591  04E1  3001               	movlw	1
  7592  04E2  0021               	movlb	1	; select bank1
  7593  04E3  009D               	movwf	29	;volatile
  7594                           
  7595                           ;mcc_generated_files/adc1.c: 73:     ADCON1 = 0x70;
  7596  04E4  3070               	movlw	112
  7597  04E5  009E               	movwf	30	;volatile
  7598                           
  7599                           ;mcc_generated_files/adc1.c: 76:     ADCON2 = 0x00;
  7600  04E6  019F               	clrf	31	;volatile
  7601                           
  7602                           ;mcc_generated_files/adc1.c: 79:     ADRESL = 0x00;
  7603  04E7  019B               	clrf	27	;volatile
  7604                           
  7605                           ;mcc_generated_files/adc1.c: 82:     ADRESH = 0x00;
  7606  04E8  019C               	clrf	28	;volatile
  7607  04E9  0008               	return
  7608  04EA                     __end_of_ADC1_Initialize:	
  7609                           
  7610                           	psect	intentry
  7611  0004                     __pintentry:	
  7612 ;; *************** function _INTERRUPT_InterruptManager *****************
  7613 ;; Defined at:
  7614 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;		None
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;		None
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  1    wreg      void 
  7621 ;; Registers used:
  7622 ;;		wreg, status,2, status,0, pclath, cstack
  7623 ;; Tracked objects:
  7624 ;;		On entry : 0/0
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7628 ;;      Params:         0       0       0       0
  7629 ;;      Locals:         0       0       0       0
  7630 ;;      Temps:          0       0       0       0
  7631 ;;      Totals:         0       0       0       0
  7632 ;;Total ram usage:        0 bytes
  7633 ;; Hardware stack levels used:    1
  7634 ;; Hardware stack levels required when called:    6
  7635 ;; This function calls:
  7636 ;;		_PIN_MANAGER_IOC
  7637 ;;		_TMR1_ISR
  7638 ;; This function is called by:
  7639 ;;		Interrupt level 1
  7640 ;; This function uses a non-reentrant model
  7641 ;;
  7642                           
  7643  0004                     _INTERRUPT_InterruptManager:	
  7644                           
  7645                           ;incstack = 0
  7646  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7647                           
  7648                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  7649  0005  3180               	pagesel	$
  7650                           
  7651                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  7652  0006  198B               	btfsc	11,3	;volatile
  7653  0007  1C0B               	btfss	11,0	;volatile
  7654  0008  280B               	goto	i1l449
  7655                           
  7656                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  7657  0009  254F               	fcall	_PIN_MANAGER_IOC
  7658                           
  7659                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  7660  000A  2814               	goto	i1l455
  7661  000B                     i1l449:	
  7662                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  7663                           
  7664  000B  1F0B               	btfss	11,6	;volatile
  7665  000C  2814               	goto	i1l455
  7666                           
  7667                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  7668  000D  0021               	movlb	1	; select bank1
  7669  000E  1C11               	btfss	17,0	;volatile
  7670  000F  2814               	goto	i1l455
  7671  0010  0020               	movlb	0	; select bank0
  7672  0011  1C11               	btfss	17,0	;volatile
  7673  0012  2814               	goto	i1l455
  7674                           
  7675                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_ISR();
  7676  0013  2548               	fcall	_TMR1_ISR
  7677  0014                     i1l455:	
  7678                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  7679                           
  7680                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  7681                           
  7682  0014  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7683  0015  0009               	retfie
  7684  0016                     __end_of_INTERRUPT_InterruptManager:	
  7685                           
  7686                           	psect	text55
  7687  0548                     __ptext55:	
  7688 ;; *************** function _TMR1_ISR *****************
  7689 ;; Defined at:
  7690 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  7691 ;; Parameters:    Size  Location     Type
  7692 ;;		None
  7693 ;; Auto vars:     Size  Location     Type
  7694 ;;		None
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  1    wreg      void 
  7697 ;; Registers used:
  7698 ;;		wreg, status,2, status,0, pclath, cstack
  7699 ;; Tracked objects:
  7700 ;;		On entry : 1F/0
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7704 ;;      Params:         0       0       0       0
  7705 ;;      Locals:         0       0       0       0
  7706 ;;      Temps:          0       0       0       0
  7707 ;;      Totals:         0       0       0       0
  7708 ;;Total ram usage:        0 bytes
  7709 ;; Hardware stack levels used:    1
  7710 ;; Hardware stack levels required when called:    2
  7711 ;; This function calls:
  7712 ;;		_TMR1_CallBack
  7713 ;;		_TMR1_WriteTimer
  7714 ;; This function is called by:
  7715 ;;		_INTERRUPT_InterruptManager
  7716 ;; This function uses a non-reentrant model
  7717 ;;
  7718                           
  7719                           
  7720                           ;psect for function _TMR1_ISR
  7721  0548                     _TMR1_ISR:	
  7722                           
  7723                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  7724                           
  7725                           ;incstack = 0
  7726                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  7727  0548  1011               	bcf	17,0	;volatile
  7728                           
  7729                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  7730  0549  087A               	movf	_timer1ReloadVal+1,w	;volatile
  7731  054A  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  7732  054B  0879               	movf	_timer1ReloadVal,w	;volatile
  7733  054C  00F0               	movwf	TMR1_WriteTimer@timerVal
  7734  054D  2485               	fcall	_TMR1_WriteTimer
  7735                           
  7736                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  7737  054E  2CCE               	ljmp	i1l2327
  7738  054F                     __end_of_TMR1_ISR:	
  7739                           
  7740                           	psect	text56
  7741  0485                     __ptext56:	
  7742 ;; *************** function _TMR1_WriteTimer *****************
  7743 ;; Defined at:
  7744 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;  timerVal        2    0[COMMON] unsigned short 
  7747 ;; Auto vars:     Size  Location     Type
  7748 ;;		None
  7749 ;; Return value:  Size  Location     Type
  7750 ;;                  1    wreg      void 
  7751 ;; Registers used:
  7752 ;;		wreg
  7753 ;; Tracked objects:
  7754 ;;		On entry : 1F/0
  7755 ;;		On exit  : 1F/0
  7756 ;;		Unchanged: 0/0
  7757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7758 ;;      Params:         2       0       0       0
  7759 ;;      Locals:         0       0       0       0
  7760 ;;      Temps:          0       0       0       0
  7761 ;;      Totals:         2       0       0       0
  7762 ;;Total ram usage:        2 bytes
  7763 ;; Hardware stack levels used:    1
  7764 ;; This function calls:
  7765 ;;		Nothing
  7766 ;; This function is called by:
  7767 ;;		_TMR1_ISR
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           
  7772                           ;psect for function _TMR1_WriteTimer
  7773  0485                     _TMR1_WriteTimer:	
  7774                           
  7775                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  7776                           
  7777                           ;incstack = 0
  7778                           ; Regs used in _TMR1_WriteTimer: [wreg]
  7779  0485  1D18               	btfss	24,2	;volatile
  7780  0486  2C8E               	goto	i1l2325
  7781                           
  7782                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  7783  0487  1018               	bcf	24,0	;volatile
  7784                           
  7785                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  7786  0488  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  7787  0489  0097               	movwf	23	;volatile
  7788                           
  7789                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  7790  048A  0870               	movf	TMR1_WriteTimer@timerVal,w
  7791  048B  0096               	movwf	22	;volatile
  7792                           
  7793                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  7794  048C  1418               	bsf	24,0	;volatile
  7795                           
  7796                           ;mcc_generated_files/tmr1.c: 133:     }
  7797  048D  0008               	return
  7798  048E                     i1l2325:	
  7799                           
  7800                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  7801  048E  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  7802  048F  0097               	movwf	23	;volatile
  7803                           
  7804                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  7805  0490  0870               	movf	TMR1_WriteTimer@timerVal,w
  7806  0491  0096               	movwf	22	;volatile
  7807  0492  0008               	return
  7808  0493                     __end_of_TMR1_WriteTimer:	
  7809                           
  7810                           	psect	text57
  7811  04CE                     __ptext57:	
  7812 ;; *************** function _TMR1_CallBack *****************
  7813 ;; Defined at:
  7814 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  7815 ;; Parameters:    Size  Location     Type
  7816 ;;		None
  7817 ;; Auto vars:     Size  Location     Type
  7818 ;;		None
  7819 ;; Return value:  Size  Location     Type
  7820 ;;                  1    wreg      void 
  7821 ;; Registers used:
  7822 ;;		wreg, status,2, status,0, pclath, cstack
  7823 ;; Tracked objects:
  7824 ;;		On entry : 1F/0
  7825 ;;		On exit  : 0/0
  7826 ;;		Unchanged: 0/0
  7827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7828 ;;      Params:         0       0       0       0
  7829 ;;      Locals:         0       0       0       0
  7830 ;;      Temps:          0       0       0       0
  7831 ;;      Totals:         0       0       0       0
  7832 ;;Total ram usage:        0 bytes
  7833 ;; Hardware stack levels used:    1
  7834 ;; Hardware stack levels required when called:    1
  7835 ;; This function calls:
  7836 ;;		Absolute function
  7837 ;;		_TMR1_DefaultInterruptHandler
  7838 ;; This function is called by:
  7839 ;;		_TMR1_ISR
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           
  7844                           ;psect for function _TMR1_CallBack
  7845  04CE                     _TMR1_CallBack:	
  7846  04CE                     i1l2327:	
  7847                           ;incstack = 0
  7848                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  7849                           
  7850                           
  7851                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  7852  04CE  0846               	movf	_TMR1_InterruptHandler,w
  7853  04CF  0447               	iorwf	_TMR1_InterruptHandler+1,w
  7854  04D0  1903               	btfsc	3,2
  7855  04D1  0008               	return
  7856                           
  7857                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  7858  04D2  0847               	movf	_TMR1_InterruptHandler+1,w
  7859  04D3  008A               	movwf	10
  7860  04D4  0846               	movf	_TMR1_InterruptHandler,w
  7861  04D5  000A               	callw
  7862  04D6  3184               	pagesel	$
  7863  04D7  0008               	return
  7864  04D8                     __end_of_TMR1_CallBack:	
  7865                           
  7866                           	psect	text58
  7867  05B8                     __ptext58:	
  7868 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  7869 ;; Defined at:
  7870 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;		None
  7873 ;; Auto vars:     Size  Location     Type
  7874 ;;		None
  7875 ;; Return value:  Size  Location     Type
  7876 ;;                  1    wreg      void 
  7877 ;; Registers used:
  7878 ;;		None
  7879 ;; Tracked objects:
  7880 ;;		On entry : 1F/0
  7881 ;;		On exit  : 1F/0
  7882 ;;		Unchanged: 1F/0
  7883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7884 ;;      Params:         0       0       0       0
  7885 ;;      Locals:         0       0       0       0
  7886 ;;      Temps:          0       0       0       0
  7887 ;;      Totals:         0       0       0       0
  7888 ;;Total ram usage:        0 bytes
  7889 ;; Hardware stack levels used:    1
  7890 ;; This function calls:
  7891 ;;		Nothing
  7892 ;; This function is called by:
  7893 ;;		_TMR1_Initialize
  7894 ;;		_TMR1_CallBack
  7895 ;; This function uses a non-reentrant model
  7896 ;;
  7897                           
  7898                           
  7899                           ;psect for function _TMR1_DefaultInterruptHandler
  7900  05B8                     _TMR1_DefaultInterruptHandler:	
  7901                           
  7902                           ;incstack = 0
  7903                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  7904  05B8  0008               	return
  7905  05B9                     __end_of_TMR1_DefaultInterruptHandler:	
  7906                           
  7907                           	psect	text59
  7908  054F                     __ptext59:	
  7909 ;; *************** function _PIN_MANAGER_IOC *****************
  7910 ;; Defined at:
  7911 ;;		line 125 in file "mcc_generated_files/pin_manager.c"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;		None
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;		None
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  1    wreg      void 
  7918 ;; Registers used:
  7919 ;;		wreg, status,2, status,0, pclath, cstack
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 1F/7
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7925 ;;      Params:         0       0       0       0
  7926 ;;      Locals:         0       0       0       0
  7927 ;;      Temps:          0       0       0       0
  7928 ;;      Totals:         0       0       0       0
  7929 ;;Total ram usage:        0 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; Hardware stack levels required when called:    5
  7932 ;; This function calls:
  7933 ;;		_IOCAF0_ISR
  7934 ;;		_IOCAF5_ISR
  7935 ;; This function is called by:
  7936 ;;		_INTERRUPT_InterruptManager
  7937 ;; This function uses a non-reentrant model
  7938 ;;
  7939                           
  7940                           
  7941                           ;psect for function _PIN_MANAGER_IOC
  7942  054F                     _PIN_MANAGER_IOC:	
  7943                           
  7944                           ;mcc_generated_files/pin_manager.c: 128:     if(IOCAFbits.IOCAF0 == 1)
  7945                           
  7946                           ;incstack = 0
  7947                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  7948  054F  0027               	movlb	7	; select bank7
  7949  0550  1C13               	btfss	19,0	;volatile
  7950  0551  2D53               	goto	i1l2453
  7951                           
  7952                           ;mcc_generated_files/pin_manager.c: 129:     {;mcc_generated_files/pin_manager.c: 130:  
      +                                 IOCAF0_ISR();
  7953  0552  2493               	fcall	_IOCAF0_ISR
  7954  0553                     i1l2453:	
  7955                           
  7956                           ;mcc_generated_files/pin_manager.c: 133:     if(IOCAFbits.IOCAF5 == 1)
  7957  0553  1E93               	btfss	19,5	;volatile
  7958  0554  0008               	return
  7959                           
  7960                           ;mcc_generated_files/pin_manager.c: 134:     {;mcc_generated_files/pin_manager.c: 135:  
      +                                 IOCAF5_ISR();
  7961  0555  2CAC               	ljmp	i1l2219
  7962  0556                     __end_of_PIN_MANAGER_IOC:	
  7963                           
  7964                           	psect	text60
  7965  04AC                     __ptext60:	
  7966 ;; *************** function _IOCAF5_ISR *****************
  7967 ;; Defined at:
  7968 ;;		line 172 in file "mcc_generated_files/pin_manager.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;		None
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;		None
  7973 ;; Return value:  Size  Location     Type
  7974 ;;                  1    wreg      void 
  7975 ;; Registers used:
  7976 ;;		wreg, status,2, status,0, pclath, cstack
  7977 ;; Tracked objects:
  7978 ;;		On entry : 1F/7
  7979 ;;		On exit  : 1F/7
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7982 ;;      Params:         0       0       0       0
  7983 ;;      Locals:         0       0       0       0
  7984 ;;      Temps:          0       0       0       0
  7985 ;;      Totals:         0       0       0       0
  7986 ;;Total ram usage:        0 bytes
  7987 ;; Hardware stack levels used:    1
  7988 ;; Hardware stack levels required when called:    4
  7989 ;; This function calls:
  7990 ;;		Absolute function
  7991 ;;		_IOCAF5_DefaultInterruptHandler
  7992 ;;		_connectHandler
  7993 ;; This function is called by:
  7994 ;;		_PIN_MANAGER_IOC
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           
  7999                           ;psect for function _IOCAF5_ISR
  8000  04AC                     _IOCAF5_ISR:	
  8001  04AC                     i1l2219:	
  8002                           ;incstack = 0
  8003                           ; Regs used in _IOCAF5_ISR: [wreg+status,2+status,0+pclath+cstack]
  8004                           
  8005                           
  8006                           ;mcc_generated_files/pin_manager.c: 177:     if(IOCAF5_InterruptHandler)
  8007  04AC  087B               	movf	_IOCAF5_InterruptHandler,w
  8008  04AD  047C               	iorwf	_IOCAF5_InterruptHandler+1,w
  8009  04AE  1903               	btfsc	3,2
  8010  04AF  2CB5               	goto	i1l2223
  8011                           
  8012                           ;mcc_generated_files/pin_manager.c: 178:     {;mcc_generated_files/pin_manager.c: 179:  
      +                                 IOCAF5_InterruptHandler();
  8013  04B0  087C               	movf	_IOCAF5_InterruptHandler+1,w
  8014  04B1  008A               	movwf	10
  8015  04B2  087B               	movf	_IOCAF5_InterruptHandler,w
  8016  04B3  000A               	callw
  8017  04B4  3184               	pagesel	$
  8018  04B5                     i1l2223:	
  8019                           
  8020                           ;mcc_generated_files/pin_manager.c: 181:     IOCAFbits.IOCAF5 = 0;
  8021  04B5  0027               	movlb	7	; select bank7
  8022  04B6  1293               	bcf	19,5	;volatile
  8023  04B7  0008               	return
  8024  04B8                     __end_of_IOCAF5_ISR:	
  8025                           
  8026                           	psect	text61
  8027  05B9                     __ptext61:	
  8028 ;; *************** function _IOCAF5_DefaultInterruptHandler *****************
  8029 ;; Defined at:
  8030 ;;		line 194 in file "mcc_generated_files/pin_manager.c"
  8031 ;; Parameters:    Size  Location     Type
  8032 ;;		None
  8033 ;; Auto vars:     Size  Location     Type
  8034 ;;		None
  8035 ;; Return value:  Size  Location     Type
  8036 ;;                  1    wreg      void 
  8037 ;; Registers used:
  8038 ;;		None
  8039 ;; Tracked objects:
  8040 ;;		On entry : 1F/7
  8041 ;;		On exit  : 1F/7
  8042 ;;		Unchanged: 1E/0
  8043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8044 ;;      Params:         0       0       0       0
  8045 ;;      Locals:         0       0       0       0
  8046 ;;      Temps:          0       0       0       0
  8047 ;;      Totals:         0       0       0       0
  8048 ;;Total ram usage:        0 bytes
  8049 ;; Hardware stack levels used:    1
  8050 ;; This function calls:
  8051 ;;		Nothing
  8052 ;; This function is called by:
  8053 ;;		_PIN_MANAGER_Initialize
  8054 ;;		_IOCAF5_ISR
  8055 ;; This function uses a non-reentrant model
  8056 ;;
  8057                           
  8058                           
  8059                           ;psect for function _IOCAF5_DefaultInterruptHandler
  8060  05B9                     _IOCAF5_DefaultInterruptHandler:	
  8061                           
  8062                           ;incstack = 0
  8063                           ; Regs used in _IOCAF5_DefaultInterruptHandler: []
  8064  05B9  0008               	return
  8065  05BA                     __end_of_IOCAF5_DefaultInterruptHandler:	
  8066                           
  8067                           	psect	text62
  8068  0186                     __ptext62:	
  8069 ;; *************** function _connectHandler *****************
  8070 ;; Defined at:
  8071 ;;		line 92 in file "aj_hal.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;		None
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;		None
  8076 ;; Return value:  Size  Location     Type
  8077 ;;                  1    wreg      void 
  8078 ;; Registers used:
  8079 ;;		wreg, status,2, status,0, pclath, cstack
  8080 ;; Tracked objects:
  8081 ;;		On entry : 1F/7
  8082 ;;		On exit  : 1F/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8085 ;;      Params:         0       0       0       0
  8086 ;;      Locals:         0       0       0       0
  8087 ;;      Temps:          1       0       0       0
  8088 ;;      Totals:         1       0       0       0
  8089 ;;Total ram usage:        1 bytes
  8090 ;; Hardware stack levels used:    1
  8091 ;; Hardware stack levels required when called:    3
  8092 ;; This function calls:
  8093 ;;		_EUSART_Write
  8094 ;;		_EUSART_is_tx_done
  8095 ;;		_EUSART_is_tx_ready
  8096 ;;		_enableSerial
  8097 ;;		i1_disableSerial
  8098 ;;		i1_setLEDs
  8099 ;; This function is called by:
  8100 ;;		_IOCAF5_ISR
  8101 ;; This function uses a non-reentrant model
  8102 ;;
  8103                           
  8104                           
  8105                           ;psect for function _connectHandler
  8106  0186                     _connectHandler:	
  8107                           
  8108                           ;aj_hal.c: 94:     setLEDs(2000, 2000, 2000);enableSerial();
  8109                           
  8110                           ;incstack = 0
  8111                           ; Regs used in _connectHandler: [wreg+status,2+status,0+pclath+cstack]
  8112  0186  30D0               	movlw	208
  8113  0187  00F2               	movwf	i1setLEDs@led1
  8114  0188  3007               	movlw	7
  8115  0189  00F3               	movwf	i1setLEDs@led1+1
  8116  018A  30D0               	movlw	208
  8117  018B  00F4               	movwf	i1setLEDs@led2
  8118  018C  3007               	movlw	7
  8119  018D  00F5               	movwf	i1setLEDs@led2+1
  8120  018E  30D0               	movlw	208
  8121  018F  00F6               	movwf	i1setLEDs@led3
  8122  0190  3007               	movlw	7
  8123  0191  00F7               	movwf	i1setLEDs@led3+1
  8124  0192  245E               	fcall	i1_setLEDs
  8125  0193  255D               	fcall	_enableSerial
  8126                           
  8127                           ;aj_hal.c: 95:     _delay((unsigned long)((100)*(125000/4000.0)));
  8128  0194  3005               	movlw	5
  8129  0195  00F8               	movwf	??_connectHandler
  8130  0196  300D               	movlw	13
  8131  0197                     u179_27:	
  8132  0197  0B89               	decfsz	9,f
  8133  0198  2997               	goto	u179_27
  8134  0199  0BF8               	decfsz	??_connectHandler,f
  8135  019A  2997               	goto	u179_27
  8136  019B  3200               	nop2
  8137  019C                     i1l2127:	
  8138                           ;aj_hal.c: 96:     while(!EUSART_is_tx_ready());
  8139                           
  8140  019C  24C3               	fcall	_EUSART_is_tx_ready
  8141  019D  3A00               	xorlw	0
  8142  019E  1903               	skipnz
  8143  019F  299C               	goto	i1l2127
  8144                           
  8145                           ;aj_hal.c: 97:     EUSART_Write('+');
  8146  01A0  302B               	movlw	43
  8147  01A1  2532               	fcall	_EUSART_Write
  8148  01A2                     i1l2131:	
  8149                           ;aj_hal.c: 98:     while(!EUSART_is_tx_ready());
  8150                           
  8151  01A2  24C3               	fcall	_EUSART_is_tx_ready
  8152  01A3  3A00               	xorlw	0
  8153  01A4  1903               	skipnz
  8154  01A5  29A2               	goto	i1l2131
  8155                           
  8156                           ;aj_hal.c: 99:     EUSART_Write('+');
  8157  01A6  302B               	movlw	43
  8158  01A7  2532               	fcall	_EUSART_Write
  8159  01A8                     i1l2135:	
  8160                           ;aj_hal.c: 100:     while(!EUSART_is_tx_ready());
  8161                           
  8162  01A8  24C3               	fcall	_EUSART_is_tx_ready
  8163  01A9  3A00               	xorlw	0
  8164  01AA  1903               	skipnz
  8165  01AB  29A8               	goto	i1l2135
  8166                           
  8167                           ;aj_hal.c: 101:     EUSART_Write('+');
  8168  01AC  302B               	movlw	43
  8169  01AD  2532               	fcall	_EUSART_Write
  8170  01AE                     i1l2139:	
  8171                           ;aj_hal.c: 102:     while(!EUSART_is_tx_ready());
  8172                           
  8173  01AE  24C3               	fcall	_EUSART_is_tx_ready
  8174  01AF  3A00               	xorlw	0
  8175  01B0  1903               	skipnz
  8176  01B1  29AE               	goto	i1l2139
  8177                           
  8178                           ;aj_hal.c: 103:     EUSART_Write('+');
  8179  01B2  302B               	movlw	43
  8180  01B3  2532               	fcall	_EUSART_Write
  8181  01B4                     i1l2143:	
  8182                           ;aj_hal.c: 104:     while(!EUSART_is_tx_ready());
  8183                           
  8184  01B4  24C3               	fcall	_EUSART_is_tx_ready
  8185  01B5  3A00               	xorlw	0
  8186  01B6  1903               	skipnz
  8187  01B7  29B4               	goto	i1l2143
  8188                           
  8189                           ;aj_hal.c: 105:     EUSART_Write('+');
  8190  01B8  302B               	movlw	43
  8191  01B9  2532               	fcall	_EUSART_Write
  8192  01BA                     i1l2147:	
  8193                           ;aj_hal.c: 106:     while(!EUSART_is_tx_done());
  8194                           
  8195  01BA  258A               	fcall	_EUSART_is_tx_done
  8196  01BB  3A00               	xorlw	0
  8197  01BC  1903               	skipnz
  8198  01BD  29BA               	goto	i1l2147
  8199                           
  8200                           ;aj_hal.c: 107:     _delay((unsigned long)((900)*(125000/4000.0)));
  8201  01BE  3025               	movlw	37
  8202  01BF  00F8               	movwf	??_connectHandler
  8203  01C0  3085               	movlw	133
  8204  01C1                     u180_27:	
  8205  01C1  0B89               	decfsz	9,f
  8206  01C2  29C1               	goto	u180_27
  8207  01C3  0BF8               	decfsz	??_connectHandler,f
  8208  01C4  29C1               	goto	u180_27
  8209  01C5  3200               	nop2
  8210                           
  8211                           ;aj_hal.c: 108:     disableSerial();
  8212  01C6  2556               	fcall	i1_disableSerial
  8213  01C7                     i1l725:	
  8214                           ;aj_hal.c: 109:     while(PORTAbits.RA5 == 0);
  8215                           
  8216  01C7  0020               	movlb	0	; select bank0
  8217  01C8  1A8C               	btfsc	12,5	;volatile
  8218  01C9  0008               	return
  8219  01CA  29C7               	goto	i1l725
  8220  01CB                     __end_of_connectHandler:	
  8221                           
  8222                           	psect	text63
  8223  045E                     __ptext63:	
  8224 ;; *************** function i1_setLEDs *****************
  8225 ;; Defined at:
  8226 ;;		line 44 in file "aj_hal.c"
  8227 ;; Parameters:    Size  Location     Type
  8228 ;;  led1            2    2[COMMON] unsigned short 
  8229 ;;  led2            2    4[COMMON] unsigned short 
  8230 ;;  led3            2    6[COMMON] unsigned short 
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;		None
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  1    wreg      void 
  8235 ;; Registers used:
  8236 ;;		wreg, status,2, status,0, pclath, cstack
  8237 ;; Tracked objects:
  8238 ;;		On entry : 1F/7
  8239 ;;		On exit  : 1F/1B
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8242 ;;      Params:         6       0       0       0
  8243 ;;      Locals:         0       0       0       0
  8244 ;;      Temps:          0       0       0       0
  8245 ;;      Totals:         6       0       0       0
  8246 ;;Total ram usage:        6 bytes
  8247 ;; Hardware stack levels used:    1
  8248 ;; Hardware stack levels required when called:    2
  8249 ;; This function calls:
  8250 ;;		i1_PWM1_DutyCycleSet
  8251 ;;		i1_PWM1_LoadBufferSet
  8252 ;;		i1_PWM2_DutyCycleSet
  8253 ;;		i1_PWM2_LoadBufferSet
  8254 ;;		i1_PWM3_DutyCycleSet
  8255 ;;		i1_PWM3_LoadBufferSet
  8256 ;;		i1_startLEDs
  8257 ;; This function is called by:
  8258 ;;		_connectHandler
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           
  8263                           ;psect for function i1_setLEDs
  8264  045E                     i1_setLEDs:	
  8265                           
  8266                           ;aj_hal.c: 44: void setLEDs (uint16_t led1, uint16_t led2, uint16_t led3);aj_hal.c: 45: 
      +                          {;aj_hal.c: 46:     startLEDs();
  8267                           
  8268                           ;incstack = 0
  8269                           ; Regs used in i1_setLEDs: [wreg+status,2+status,0+pclath+cstack]
  8270  045E  2586               	fcall	i1_startLEDs
  8271                           
  8272                           ;aj_hal.c: 47:     PWM1_DutyCycleSet(led1);
  8273  045F  0873               	movf	i1setLEDs@led1+1,w
  8274  0460  00F1               	movwf	i1PWM1_DutyCycleSet@dutyCycleCount+1
  8275  0461  0872               	movf	i1setLEDs@led1,w
  8276  0462  00F0               	movwf	i1PWM1_DutyCycleSet@dutyCycleCount
  8277  0463  257D               	fcall	i1_PWM1_DutyCycleSet
  8278                           
  8279                           ;aj_hal.c: 48:     PWM1_LoadBufferSet();
  8280  0464  25B6               	fcall	i1_PWM1_LoadBufferSet
  8281                           
  8282                           ;aj_hal.c: 49:     PWM2_DutyCycleSet(led2);
  8283  0465  0875               	movf	i1setLEDs@led2+1,w
  8284  0466  00F1               	movwf	i1PWM2_DutyCycleSet@dutyCycleCount+1
  8285  0467  0874               	movf	i1setLEDs@led2,w
  8286  0468  00F0               	movwf	i1PWM2_DutyCycleSet@dutyCycleCount
  8287  0469  2578               	fcall	i1_PWM2_DutyCycleSet
  8288                           
  8289                           ;aj_hal.c: 50:     PWM2_LoadBufferSet();
  8290  046A  25B4               	fcall	i1_PWM2_LoadBufferSet
  8291                           
  8292                           ;aj_hal.c: 51:     PWM3_DutyCycleSet(led3);
  8293  046B  0877               	movf	i1setLEDs@led3+1,w
  8294  046C  00F1               	movwf	i1PWM3_DutyCycleSet@dutyCycleCount+1
  8295  046D  0876               	movf	i1setLEDs@led3,w
  8296  046E  00F0               	movwf	i1PWM3_DutyCycleSet@dutyCycleCount
  8297  046F  2573               	fcall	i1_PWM3_DutyCycleSet
  8298                           
  8299                           ;aj_hal.c: 52:     PWM3_LoadBufferSet();
  8300  0470  25B2               	fcall	i1_PWM3_LoadBufferSet
  8301  0471  0008               	return
  8302  0472                     __end_ofi1_setLEDs:	
  8303                           
  8304                           	psect	text64
  8305  0586                     __ptext64:	
  8306 ;; *************** function i1_startLEDs *****************
  8307 ;; Defined at:
  8308 ;;		line 37 in file "aj_hal.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;		None
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;		None
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      void 
  8315 ;; Registers used:
  8316 ;;		status,2, status,0, pclath, cstack
  8317 ;; Tracked objects:
  8318 ;;		On entry : 1F/7
  8319 ;;		On exit  : 1F/1B
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8322 ;;      Params:         0       0       0       0
  8323 ;;      Locals:         0       0       0       0
  8324 ;;      Temps:          0       0       0       0
  8325 ;;      Totals:         0       0       0       0
  8326 ;;Total ram usage:        0 bytes
  8327 ;; Hardware stack levels used:    1
  8328 ;; Hardware stack levels required when called:    1
  8329 ;; This function calls:
  8330 ;;		i1_PWM1_Start
  8331 ;;		i1_PWM2_Start
  8332 ;;		i1_PWM3_Start
  8333 ;; This function is called by:
  8334 ;;		i1_setLEDs
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           
  8339                           ;psect for function i1_startLEDs
  8340  0586                     i1_startLEDs:	
  8341                           
  8342                           ;aj_hal.c: 39:     PWM1_Start();
  8343                           
  8344                           ;incstack = 0
  8345                           ; Regs used in i1_startLEDs: [status,2+status,0+pclath+cstack]
  8346  0586  259D               	fcall	i1_PWM1_Start
  8347                           
  8348                           ;aj_hal.c: 40:     PWM2_Start();
  8349  0587  25B0               	fcall	i1_PWM2_Start
  8350                           
  8351                           ;aj_hal.c: 41:     PWM3_Start();
  8352  0588  25AE               	fcall	i1_PWM3_Start
  8353  0589  0008               	return
  8354  058A                     __end_ofi1_startLEDs:	
  8355                           
  8356                           	psect	text65
  8357  05AE                     __ptext65:	
  8358 ;; *************** function i1_PWM3_Start *****************
  8359 ;; Defined at:
  8360 ;;		line 113 in file "mcc_generated_files/pwm3.c"
  8361 ;; Parameters:    Size  Location     Type
  8362 ;;		None
  8363 ;; Auto vars:     Size  Location     Type
  8364 ;;		None
  8365 ;; Return value:  Size  Location     Type
  8366 ;;                  1    wreg      void 
  8367 ;; Registers used:
  8368 ;;		None
  8369 ;; Tracked objects:
  8370 ;;		On entry : 1F/1B
  8371 ;;		On exit  : 1F/1B
  8372 ;;		Unchanged: 0/0
  8373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8374 ;;      Params:         0       0       0       0
  8375 ;;      Locals:         0       0       0       0
  8376 ;;      Temps:          0       0       0       0
  8377 ;;      Totals:         0       0       0       0
  8378 ;;Total ram usage:        0 bytes
  8379 ;; Hardware stack levels used:    1
  8380 ;; This function calls:
  8381 ;;		Nothing
  8382 ;; This function is called by:
  8383 ;;		i1_startLEDs
  8384 ;; This function uses a non-reentrant model
  8385 ;;
  8386                           
  8387                           
  8388                           ;psect for function i1_PWM3_Start
  8389  05AE                     i1_PWM3_Start:	
  8390                           
  8391                           ;mcc_generated_files/pwm3.c: 115:     PWM3CONbits.EN = 1;
  8392                           
  8393                           ;incstack = 0
  8394                           ; Regs used in i1_PWM3_Start: []
  8395  05AE  17BB               	bsf	59,7	;volatile
  8396  05AF  0008               	return
  8397  05B0                     __end_ofi1_PWM3_Start:	
  8398                           
  8399                           	psect	text66
  8400  05B0                     __ptext66:	
  8401 ;; *************** function i1_PWM2_Start *****************
  8402 ;; Defined at:
  8403 ;;		line 113 in file "mcc_generated_files/pwm2.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;		None
  8406 ;; Auto vars:     Size  Location     Type
  8407 ;;		None
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  1    wreg      void 
  8410 ;; Registers used:
  8411 ;;		None
  8412 ;; Tracked objects:
  8413 ;;		On entry : 1F/1B
  8414 ;;		On exit  : 1F/1B
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8417 ;;      Params:         0       0       0       0
  8418 ;;      Locals:         0       0       0       0
  8419 ;;      Temps:          0       0       0       0
  8420 ;;      Totals:         0       0       0       0
  8421 ;;Total ram usage:        0 bytes
  8422 ;; Hardware stack levels used:    1
  8423 ;; This function calls:
  8424 ;;		Nothing
  8425 ;; This function is called by:
  8426 ;;		i1_startLEDs
  8427 ;; This function uses a non-reentrant model
  8428 ;;
  8429                           
  8430                           
  8431                           ;psect for function i1_PWM2_Start
  8432  05B0                     i1_PWM2_Start:	
  8433                           
  8434                           ;mcc_generated_files/pwm2.c: 115:     PWM2CONbits.EN = 1;
  8435                           
  8436                           ;incstack = 0
  8437                           ; Regs used in i1_PWM2_Start: []
  8438  05B0  17AB               	bsf	43,7	;volatile
  8439  05B1  0008               	return
  8440  05B2                     __end_ofi1_PWM2_Start:	
  8441                           
  8442                           	psect	text67
  8443  059D                     __ptext67:	
  8444 ;; *************** function i1_PWM1_Start *****************
  8445 ;; Defined at:
  8446 ;;		line 113 in file "mcc_generated_files/pwm1.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;		None
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;		None
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  1    wreg      void 
  8453 ;; Registers used:
  8454 ;;		None
  8455 ;; Tracked objects:
  8456 ;;		On entry : 1F/7
  8457 ;;		On exit  : 1F/1B
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8460 ;;      Params:         0       0       0       0
  8461 ;;      Locals:         0       0       0       0
  8462 ;;      Temps:          0       0       0       0
  8463 ;;      Totals:         0       0       0       0
  8464 ;;Total ram usage:        0 bytes
  8465 ;; Hardware stack levels used:    1
  8466 ;; This function calls:
  8467 ;;		Nothing
  8468 ;; This function is called by:
  8469 ;;		i1_startLEDs
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473                           
  8474                           ;psect for function i1_PWM1_Start
  8475  059D                     i1_PWM1_Start:	
  8476                           
  8477                           ;mcc_generated_files/pwm1.c: 115:     PWM1CONbits.EN = 1;
  8478                           
  8479                           ;incstack = 0
  8480                           ; Regs used in i1_PWM1_Start: []
  8481  059D  003B               	movlb	27	; select bank27
  8482  059E  179B               	bsf	27,7	;volatile
  8483  059F  0008               	return
  8484  05A0                     __end_ofi1_PWM1_Start:	
  8485                           
  8486                           	psect	text68
  8487  05B2                     __ptext68:	
  8488 ;; *************** function i1_PWM3_LoadBufferSet *****************
  8489 ;; Defined at:
  8490 ;;		line 128 in file "mcc_generated_files/pwm3.c"
  8491 ;; Parameters:    Size  Location     Type
  8492 ;;		None
  8493 ;; Auto vars:     Size  Location     Type
  8494 ;;		None
  8495 ;; Return value:  Size  Location     Type
  8496 ;;                  1    wreg      void 
  8497 ;; Registers used:
  8498 ;;		None
  8499 ;; Tracked objects:
  8500 ;;		On entry : 1F/1B
  8501 ;;		On exit  : 1F/1B
  8502 ;;		Unchanged: 0/0
  8503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8504 ;;      Params:         0       0       0       0
  8505 ;;      Locals:         0       0       0       0
  8506 ;;      Temps:          0       0       0       0
  8507 ;;      Totals:         0       0       0       0
  8508 ;;Total ram usage:        0 bytes
  8509 ;; Hardware stack levels used:    1
  8510 ;; This function calls:
  8511 ;;		Nothing
  8512 ;; This function is called by:
  8513 ;;		i1_setLEDs
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517                           
  8518                           ;psect for function i1_PWM3_LoadBufferSet
  8519  05B2                     i1_PWM3_LoadBufferSet:	
  8520                           
  8521                           ;mcc_generated_files/pwm3.c: 130:     PWM3LDCONbits.LDA = 1;
  8522                           
  8523                           ;incstack = 0
  8524                           ; Regs used in i1_PWM3_LoadBufferSet: []
  8525  05B2  17BF               	bsf	63,7	;volatile
  8526  05B3  0008               	return
  8527  05B4                     __end_ofi1_PWM3_LoadBufferSet:	
  8528                           
  8529                           	psect	text69
  8530  0573                     __ptext69:	
  8531 ;; *************** function i1_PWM3_DutyCycleSet *****************
  8532 ;; Defined at:
  8533 ;;		line 139 in file "mcc_generated_files/pwm3.c"
  8534 ;; Parameters:    Size  Location     Type
  8535 ;;  dutyCycleCou    2    0[COMMON] unsigned short 
  8536 ;; Auto vars:     Size  Location     Type
  8537 ;;		None
  8538 ;; Return value:  Size  Location     Type
  8539 ;;                  1    wreg      void 
  8540 ;; Registers used:
  8541 ;;		wreg
  8542 ;; Tracked objects:
  8543 ;;		On entry : 1F/1B
  8544 ;;		On exit  : 1F/1B
  8545 ;;		Unchanged: 0/0
  8546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8547 ;;      Params:         2       0       0       0
  8548 ;;      Locals:         0       0       0       0
  8549 ;;      Temps:          0       0       0       0
  8550 ;;      Totals:         2       0       0       0
  8551 ;;Total ram usage:        2 bytes
  8552 ;; Hardware stack levels used:    1
  8553 ;; This function calls:
  8554 ;;		Nothing
  8555 ;; This function is called by:
  8556 ;;		i1_setLEDs
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           
  8560                           
  8561                           ;psect for function i1_PWM3_DutyCycleSet
  8562  0573                     i1_PWM3_DutyCycleSet:	
  8563                           
  8564                           ;mcc_generated_files/pwm3.c: 139: void PWM3_DutyCycleSet(uint16_t dutyCycleCount);mcc_ge
      +                          nerated_files/pwm3.c: 140: {;mcc_generated_files/pwm3.c: 141:     PWM3DCH = (dutyCycleCo
      +                          unt>>8);
  8565                           
  8566                           ;incstack = 0
  8567                           ; Regs used in i1_PWM3_DutyCycleSet: [wreg]
  8568  0573  0871               	movf	i1PWM3_DutyCycleSet@dutyCycleCount+1,w
  8569  0574  00B4               	movwf	52	;volatile
  8570                           
  8571                           ;mcc_generated_files/pwm3.c: 142:     PWM3DCL = (dutyCycleCount);
  8572  0575  0870               	movf	i1PWM3_DutyCycleSet@dutyCycleCount,w
  8573  0576  00B3               	movwf	51	;volatile
  8574  0577  0008               	return
  8575  0578                     __end_ofi1_PWM3_DutyCycleSet:	
  8576                           
  8577                           	psect	text70
  8578  05B4                     __ptext70:	
  8579 ;; *************** function i1_PWM2_LoadBufferSet *****************
  8580 ;; Defined at:
  8581 ;;		line 128 in file "mcc_generated_files/pwm2.c"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;		None
  8584 ;; Auto vars:     Size  Location     Type
  8585 ;;		None
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  1    wreg      void 
  8588 ;; Registers used:
  8589 ;;		None
  8590 ;; Tracked objects:
  8591 ;;		On entry : 1F/1B
  8592 ;;		On exit  : 1F/1B
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8595 ;;      Params:         0       0       0       0
  8596 ;;      Locals:         0       0       0       0
  8597 ;;      Temps:          0       0       0       0
  8598 ;;      Totals:         0       0       0       0
  8599 ;;Total ram usage:        0 bytes
  8600 ;; Hardware stack levels used:    1
  8601 ;; This function calls:
  8602 ;;		Nothing
  8603 ;; This function is called by:
  8604 ;;		i1_setLEDs
  8605 ;; This function uses a non-reentrant model
  8606 ;;
  8607                           
  8608                           
  8609                           ;psect for function i1_PWM2_LoadBufferSet
  8610  05B4                     i1_PWM2_LoadBufferSet:	
  8611                           
  8612                           ;mcc_generated_files/pwm2.c: 130:     PWM2LDCONbits.LDA = 1;
  8613                           
  8614                           ;incstack = 0
  8615                           ; Regs used in i1_PWM2_LoadBufferSet: []
  8616  05B4  17AF               	bsf	47,7	;volatile
  8617  05B5  0008               	return
  8618  05B6                     __end_ofi1_PWM2_LoadBufferSet:	
  8619                           
  8620                           	psect	text71
  8621  0578                     __ptext71:	
  8622 ;; *************** function i1_PWM2_DutyCycleSet *****************
  8623 ;; Defined at:
  8624 ;;		line 139 in file "mcc_generated_files/pwm2.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;  dutyCycleCou    2    0[COMMON] unsigned short 
  8627 ;; Auto vars:     Size  Location     Type
  8628 ;;		None
  8629 ;; Return value:  Size  Location     Type
  8630 ;;                  1    wreg      void 
  8631 ;; Registers used:
  8632 ;;		wreg
  8633 ;; Tracked objects:
  8634 ;;		On entry : 1F/1B
  8635 ;;		On exit  : 1F/1B
  8636 ;;		Unchanged: 0/0
  8637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8638 ;;      Params:         2       0       0       0
  8639 ;;      Locals:         0       0       0       0
  8640 ;;      Temps:          0       0       0       0
  8641 ;;      Totals:         2       0       0       0
  8642 ;;Total ram usage:        2 bytes
  8643 ;; Hardware stack levels used:    1
  8644 ;; This function calls:
  8645 ;;		Nothing
  8646 ;; This function is called by:
  8647 ;;		i1_setLEDs
  8648 ;; This function uses a non-reentrant model
  8649 ;;
  8650                           
  8651                           
  8652                           ;psect for function i1_PWM2_DutyCycleSet
  8653  0578                     i1_PWM2_DutyCycleSet:	
  8654                           
  8655                           ;mcc_generated_files/pwm2.c: 139: void PWM2_DutyCycleSet(uint16_t dutyCycleCount);mcc_ge
      +                          nerated_files/pwm2.c: 140: {;mcc_generated_files/pwm2.c: 141:     PWM2DCH = (dutyCycleCo
      +                          unt>>8);
  8656                           
  8657                           ;incstack = 0
  8658                           ; Regs used in i1_PWM2_DutyCycleSet: [wreg]
  8659  0578  0871               	movf	i1PWM2_DutyCycleSet@dutyCycleCount+1,w
  8660  0579  00A4               	movwf	36	;volatile
  8661                           
  8662                           ;mcc_generated_files/pwm2.c: 142:     PWM2DCL = (dutyCycleCount);
  8663  057A  0870               	movf	i1PWM2_DutyCycleSet@dutyCycleCount,w
  8664  057B  00A3               	movwf	35	;volatile
  8665  057C  0008               	return
  8666  057D                     __end_ofi1_PWM2_DutyCycleSet:	
  8667                           
  8668                           	psect	text72
  8669  05B6                     __ptext72:	
  8670 ;; *************** function i1_PWM1_LoadBufferSet *****************
  8671 ;; Defined at:
  8672 ;;		line 128 in file "mcc_generated_files/pwm1.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;		None
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;		None
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  1    wreg      void 
  8679 ;; Registers used:
  8680 ;;		None
  8681 ;; Tracked objects:
  8682 ;;		On entry : 1F/1B
  8683 ;;		On exit  : 1F/1B
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8686 ;;      Params:         0       0       0       0
  8687 ;;      Locals:         0       0       0       0
  8688 ;;      Temps:          0       0       0       0
  8689 ;;      Totals:         0       0       0       0
  8690 ;;Total ram usage:        0 bytes
  8691 ;; Hardware stack levels used:    1
  8692 ;; This function calls:
  8693 ;;		Nothing
  8694 ;; This function is called by:
  8695 ;;		i1_setLEDs
  8696 ;; This function uses a non-reentrant model
  8697 ;;
  8698                           
  8699                           
  8700                           ;psect for function i1_PWM1_LoadBufferSet
  8701  05B6                     i1_PWM1_LoadBufferSet:	
  8702                           
  8703                           ;mcc_generated_files/pwm1.c: 130:     PWM1LDCONbits.LDA = 1;
  8704                           
  8705                           ;incstack = 0
  8706                           ; Regs used in i1_PWM1_LoadBufferSet: []
  8707  05B6  179F               	bsf	31,7	;volatile
  8708  05B7  0008               	return
  8709  05B8                     __end_ofi1_PWM1_LoadBufferSet:	
  8710                           
  8711                           	psect	text73
  8712  057D                     __ptext73:	
  8713 ;; *************** function i1_PWM1_DutyCycleSet *****************
  8714 ;; Defined at:
  8715 ;;		line 139 in file "mcc_generated_files/pwm1.c"
  8716 ;; Parameters:    Size  Location     Type
  8717 ;;  dutyCycleCou    2    0[COMMON] unsigned short 
  8718 ;; Auto vars:     Size  Location     Type
  8719 ;;		None
  8720 ;; Return value:  Size  Location     Type
  8721 ;;                  1    wreg      void 
  8722 ;; Registers used:
  8723 ;;		wreg
  8724 ;; Tracked objects:
  8725 ;;		On entry : 1F/1B
  8726 ;;		On exit  : 1F/1B
  8727 ;;		Unchanged: 0/0
  8728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8729 ;;      Params:         2       0       0       0
  8730 ;;      Locals:         0       0       0       0
  8731 ;;      Temps:          0       0       0       0
  8732 ;;      Totals:         2       0       0       0
  8733 ;;Total ram usage:        2 bytes
  8734 ;; Hardware stack levels used:    1
  8735 ;; This function calls:
  8736 ;;		Nothing
  8737 ;; This function is called by:
  8738 ;;		i1_setLEDs
  8739 ;; This function uses a non-reentrant model
  8740 ;;
  8741                           
  8742                           
  8743                           ;psect for function i1_PWM1_DutyCycleSet
  8744  057D                     i1_PWM1_DutyCycleSet:	
  8745                           
  8746                           ;mcc_generated_files/pwm1.c: 139: void PWM1_DutyCycleSet(uint16_t dutyCycleCount);mcc_ge
      +                          nerated_files/pwm1.c: 140: {;mcc_generated_files/pwm1.c: 141:     PWM1DCH = (dutyCycleCo
      +                          unt>>8);
  8747                           
  8748                           ;incstack = 0
  8749                           ; Regs used in i1_PWM1_DutyCycleSet: [wreg]
  8750  057D  0871               	movf	i1PWM1_DutyCycleSet@dutyCycleCount+1,w
  8751  057E  0094               	movwf	20	;volatile
  8752                           
  8753                           ;mcc_generated_files/pwm1.c: 142:     PWM1DCL = (dutyCycleCount);
  8754  057F  0870               	movf	i1PWM1_DutyCycleSet@dutyCycleCount,w
  8755  0580  0093               	movwf	19	;volatile
  8756  0581  0008               	return
  8757  0582                     __end_ofi1_PWM1_DutyCycleSet:	
  8758                           
  8759                           	psect	text74
  8760  0556                     __ptext74:	
  8761 ;; *************** function i1_disableSerial *****************
  8762 ;; Defined at:
  8763 ;;		line 17 in file "aj_hal.c"
  8764 ;; Parameters:    Size  Location     Type
  8765 ;;		None
  8766 ;; Auto vars:     Size  Location     Type
  8767 ;;		None
  8768 ;; Return value:  Size  Location     Type
  8769 ;;                  1    wreg      void 
  8770 ;; Registers used:
  8771 ;;		wreg
  8772 ;; Tracked objects:
  8773 ;;		On entry : 0/3
  8774 ;;		On exit  : 1F/3
  8775 ;;		Unchanged: 0/0
  8776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8777 ;;      Params:         0       0       0       0
  8778 ;;      Locals:         0       0       0       0
  8779 ;;      Temps:          0       0       0       0
  8780 ;;      Totals:         0       0       0       0
  8781 ;;Total ram usage:        0 bytes
  8782 ;; Hardware stack levels used:    1
  8783 ;; This function calls:
  8784 ;;		Nothing
  8785 ;; This function is called by:
  8786 ;;		_connectHandler
  8787 ;; This function uses a non-reentrant model
  8788 ;;
  8789                           
  8790                           
  8791                           ;psect for function i1_disableSerial
  8792  0556                     i1_disableSerial:	
  8793                           
  8794                           ;aj_hal.c: 19:     _delay((unsigned long)((1)*(125000/4000.0)));
  8795                           
  8796                           ;incstack = 0
  8797                           ; Regs used in i1_disableSerial: [wreg]
  8798  0556  300A               	movlw	10
  8799  0557                     u181_27:	
  8800  0557  0B89               	decfsz	9,f
  8801  0558  2D57               	goto	u181_27
  8802  0559  0000               	nop
  8803                           
  8804                           ;aj_hal.c: 20:     RCSTAbits.SPEN = 0;
  8805  055A  0023               	movlb	3	; select bank3
  8806  055B  139D               	bcf	29,7	;volatile
  8807  055C  0008               	return
  8808  055D                     __end_ofi1_disableSerial:	
  8809                           
  8810                           	psect	text75
  8811  055D                     __ptext75:	
  8812 ;; *************** function _enableSerial *****************
  8813 ;; Defined at:
  8814 ;;		line 10 in file "aj_hal.c"
  8815 ;; Parameters:    Size  Location     Type
  8816 ;;		None
  8817 ;; Auto vars:     Size  Location     Type
  8818 ;;		None
  8819 ;; Return value:  Size  Location     Type
  8820 ;;                  1    wreg      void 
  8821 ;; Registers used:
  8822 ;;		wreg
  8823 ;; Tracked objects:
  8824 ;;		On entry : 1F/1B
  8825 ;;		On exit  : 0/0
  8826 ;;		Unchanged: 0/0
  8827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8828 ;;      Params:         0       0       0       0
  8829 ;;      Locals:         0       0       0       0
  8830 ;;      Temps:          0       0       0       0
  8831 ;;      Totals:         0       0       0       0
  8832 ;;Total ram usage:        0 bytes
  8833 ;; Hardware stack levels used:    1
  8834 ;; This function calls:
  8835 ;;		Nothing
  8836 ;; This function is called by:
  8837 ;;		_connectHandler
  8838 ;; This function uses a non-reentrant model
  8839 ;;
  8840                           
  8841                           
  8842                           ;psect for function _enableSerial
  8843  055D                     _enableSerial:	
  8844                           
  8845                           ;aj_hal.c: 12:     RCSTAbits.SPEN = 1;
  8846                           
  8847                           ;incstack = 0
  8848                           ; Regs used in _enableSerial: [wreg]
  8849  055D  0023               	movlb	3	; select bank3
  8850  055E  179D               	bsf	29,7	;volatile
  8851                           
  8852                           ;aj_hal.c: 13:     _delay((unsigned long)((1)*(125000/4000.0)));
  8853  055F  300A               	movlw	10
  8854  0560                     u182_27:	
  8855  0560  0B89               	decfsz	9,f
  8856  0561  2D60               	goto	u182_27
  8857  0562  0000               	nop
  8858  0563  0008               	return
  8859  0564                     __end_of_enableSerial:	
  8860                           
  8861                           	psect	text76
  8862  04C3                     __ptext76:	
  8863 ;; *************** function _EUSART_is_tx_ready *****************
  8864 ;; Defined at:
  8865 ;;		line 78 in file "mcc_generated_files/eusart.c"
  8866 ;; Parameters:    Size  Location     Type
  8867 ;;		None
  8868 ;; Auto vars:     Size  Location     Type
  8869 ;;		None
  8870 ;; Return value:  Size  Location     Type
  8871 ;;                  1    wreg      _Bool 
  8872 ;; Registers used:
  8873 ;;		wreg, status,2
  8874 ;; Tracked objects:
  8875 ;;		On entry : 0/7
  8876 ;;		On exit  : 1C/0
  8877 ;;		Unchanged: 0/0
  8878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8879 ;;      Params:         0       0       0       0
  8880 ;;      Locals:         1       0       0       0
  8881 ;;      Temps:          0       0       0       0
  8882 ;;      Totals:         1       0       0       0
  8883 ;;Total ram usage:        1 bytes
  8884 ;; Hardware stack levels used:    1
  8885 ;; This function calls:
  8886 ;;		Nothing
  8887 ;; This function is called by:
  8888 ;;		_connectHandler
  8889 ;; This function uses a non-reentrant model
  8890 ;;
  8891                           
  8892                           
  8893                           ;psect for function _EUSART_is_tx_ready
  8894  04C3                     _EUSART_is_tx_ready:	
  8895                           
  8896                           ;mcc_generated_files/eusart.c: 80:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
  8897                           
  8898                           ;incstack = 0
  8899                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  8900  04C3  01F0               	clrf	_EUSART_is_tx_ready$373
  8901  04C4  0020               	movlb	0	; select bank0
  8902  04C5  1E11               	btfss	17,4	;volatile
  8903  04C6  2CCC               	goto	i1l2067
  8904  04C7  0023               	movlb	3	; select bank3
  8905  04C8  1E9E               	btfss	30,5	;volatile
  8906  04C9  2CCC               	goto	i1l2067
  8907  04CA  01F0               	clrf	_EUSART_is_tx_ready$373
  8908  04CB  0AF0               	incf	_EUSART_is_tx_ready$373,f
  8909  04CC                     i1l2067:	
  8910  04CC  0870               	movf	_EUSART_is_tx_ready$373,w
  8911  04CD  0008               	return
  8912  04CE                     __end_of_EUSART_is_tx_ready:	
  8913                           
  8914                           	psect	text77
  8915  058A                     __ptext77:	
  8916 ;; *************** function _EUSART_is_tx_done *****************
  8917 ;; Defined at:
  8918 ;;		line 88 in file "mcc_generated_files/eusart.c"
  8919 ;; Parameters:    Size  Location     Type
  8920 ;;		None
  8921 ;; Auto vars:     Size  Location     Type
  8922 ;;		None
  8923 ;; Return value:  Size  Location     Type
  8924 ;;                  1    wreg      _Bool 
  8925 ;; Registers used:
  8926 ;;		wreg, status,2, status,0
  8927 ;; Tracked objects:
  8928 ;;		On entry : 1B/3
  8929 ;;		On exit  : 1F/3
  8930 ;;		Unchanged: 0/0
  8931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8932 ;;      Params:         0       0       0       0
  8933 ;;      Locals:         0       0       0       0
  8934 ;;      Temps:          0       0       0       0
  8935 ;;      Totals:         0       0       0       0
  8936 ;;Total ram usage:        0 bytes
  8937 ;; Hardware stack levels used:    1
  8938 ;; This function calls:
  8939 ;;		Nothing
  8940 ;; This function is called by:
  8941 ;;		_connectHandler
  8942 ;; This function uses a non-reentrant model
  8943 ;;
  8944                           
  8945                           
  8946                           ;psect for function _EUSART_is_tx_done
  8947  058A                     _EUSART_is_tx_done:	
  8948                           
  8949                           ;mcc_generated_files/eusart.c: 90:     return TXSTAbits.TRMT;
  8950                           
  8951                           ;incstack = 0
  8952                           ; Regs used in _EUSART_is_tx_done: [wreg+status,2+status,0]
  8953  058A  0023               	movlb	3	; select bank3
  8954  058B  0C1E               	rrf	30,w	;volatile
  8955  058C  3901               	andlw	1
  8956  058D  0008               	return
  8957  058E                     __end_of_EUSART_is_tx_done:	
  8958                           
  8959                           	psect	text78
  8960  0532                     __ptext78:	
  8961 ;; *************** function _EUSART_Write *****************
  8962 ;; Defined at:
  8963 ;;		line 111 in file "mcc_generated_files/eusart.c"
  8964 ;; Parameters:    Size  Location     Type
  8965 ;;  txData          1    wreg     unsigned char 
  8966 ;; Auto vars:     Size  Location     Type
  8967 ;;  txData          1    0[COMMON] unsigned char 
  8968 ;; Return value:  Size  Location     Type
  8969 ;;                  1    wreg      void 
  8970 ;; Registers used:
  8971 ;;		wreg
  8972 ;; Tracked objects:
  8973 ;;		On entry : 1C/3
  8974 ;;		On exit  : 1F/3
  8975 ;;		Unchanged: 0/0
  8976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8977 ;;      Params:         0       0       0       0
  8978 ;;      Locals:         1       0       0       0
  8979 ;;      Temps:          0       0       0       0
  8980 ;;      Totals:         1       0       0       0
  8981 ;;Total ram usage:        1 bytes
  8982 ;; Hardware stack levels used:    1
  8983 ;; This function calls:
  8984 ;;		Nothing
  8985 ;; This function is called by:
  8986 ;;		_connectHandler
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           
  8991                           ;psect for function _EUSART_Write
  8992  0532                     _EUSART_Write:	
  8993                           
  8994                           ;incstack = 0
  8995                           ; Regs used in _EUSART_Write: [wreg]
  8996                           ;EUSART_Write@txData stored from wreg
  8997  0532  00F0               	movwf	EUSART_Write@txData
  8998  0533                     i1l147:	
  8999                           ;mcc_generated_files/eusart.c: 114:     {;mcc_generated_files/eusart.c: 115:     }
  9000                           
  9001                           
  9002                           ;mcc_generated_files/eusart.c: 113:     while(0 == PIR1bits.TXIF)
  9003  0533  0020               	movlb	0	; select bank0
  9004  0534  1E11               	btfss	17,4	;volatile
  9005  0535  2D33               	goto	i1l147
  9006                           
  9007                           ;mcc_generated_files/eusart.c: 117:     TXREG = txData;
  9008  0536  0870               	movf	EUSART_Write@txData,w
  9009  0537  0023               	movlb	3	; select bank3
  9010  0538  009A               	movwf	26	;volatile
  9011  0539  0008               	return
  9012  053A                     __end_of_EUSART_Write:	
  9013                           
  9014                           	psect	text79
  9015  0493                     __ptext79:	
  9016 ;; *************** function _IOCAF0_ISR *****************
  9017 ;; Defined at:
  9018 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
  9019 ;; Parameters:    Size  Location     Type
  9020 ;;		None
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;		None
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  1    wreg      void 
  9025 ;; Registers used:
  9026 ;;		wreg, status,2, status,0, pclath, cstack
  9027 ;; Tracked objects:
  9028 ;;		On entry : 1F/7
  9029 ;;		On exit  : 1F/7
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9032 ;;      Params:         0       0       0       0
  9033 ;;      Locals:         0       0       0       0
  9034 ;;      Temps:          0       0       0       0
  9035 ;;      Totals:         0       0       0       0
  9036 ;;Total ram usage:        0 bytes
  9037 ;; Hardware stack levels used:    1
  9038 ;; Hardware stack levels required when called:    1
  9039 ;; This function calls:
  9040 ;;		Absolute function
  9041 ;;		_IOCAF0_DefaultInterruptHandler
  9042 ;;		_buttonHandler
  9043 ;; This function is called by:
  9044 ;;		_PIN_MANAGER_IOC
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048                           
  9049                           ;psect for function _IOCAF0_ISR
  9050  0493                     _IOCAF0_ISR:	
  9051                           
  9052                           ;mcc_generated_files/pin_manager.c: 147:     if(IOCAF0_InterruptHandler)
  9053                           
  9054                           ;incstack = 0
  9055                           ; Regs used in _IOCAF0_ISR: [wreg+status,2+status,0+pclath+cstack]
  9056  0493  0020               	movlb	0	; select bank0
  9057  0494  0848               	movf	_IOCAF0_InterruptHandler,w
  9058  0495  0449               	iorwf	_IOCAF0_InterruptHandler+1,w
  9059  0496  1903               	btfsc	3,2
  9060  0497  2C9D               	goto	i1l2217
  9061                           
  9062                           ;mcc_generated_files/pin_manager.c: 148:     {;mcc_generated_files/pin_manager.c: 149:  
      +                                 IOCAF0_InterruptHandler();
  9063  0498  0849               	movf	_IOCAF0_InterruptHandler+1,w
  9064  0499  008A               	movwf	10
  9065  049A  0848               	movf	_IOCAF0_InterruptHandler,w
  9066  049B  000A               	callw
  9067  049C  3184               	pagesel	$
  9068  049D                     i1l2217:	
  9069                           
  9070                           ;mcc_generated_files/pin_manager.c: 151:     IOCAFbits.IOCAF0 = 0;
  9071  049D  0027               	movlb	7	; select bank7
  9072  049E  1013               	bcf	19,0	;volatile
  9073  049F  0008               	return
  9074  04A0                     __end_of_IOCAF0_ISR:	
  9075                           
  9076                           	psect	text80
  9077  05BA                     __ptext80:	
  9078 ;; *************** function _IOCAF0_DefaultInterruptHandler *****************
  9079 ;; Defined at:
  9080 ;;		line 164 in file "mcc_generated_files/pin_manager.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;		None
  9083 ;; Auto vars:     Size  Location     Type
  9084 ;;		None
  9085 ;; Return value:  Size  Location     Type
  9086 ;;                  1    wreg      void 
  9087 ;; Registers used:
  9088 ;;		None
  9089 ;; Tracked objects:
  9090 ;;		On entry : 1F/0
  9091 ;;		On exit  : 1F/0
  9092 ;;		Unchanged: 1F/0
  9093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9094 ;;      Params:         0       0       0       0
  9095 ;;      Locals:         0       0       0       0
  9096 ;;      Temps:          0       0       0       0
  9097 ;;      Totals:         0       0       0       0
  9098 ;;Total ram usage:        0 bytes
  9099 ;; Hardware stack levels used:    1
  9100 ;; This function calls:
  9101 ;;		Nothing
  9102 ;; This function is called by:
  9103 ;;		_PIN_MANAGER_Initialize
  9104 ;;		_IOCAF0_ISR
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108                           
  9109                           ;psect for function _IOCAF0_DefaultInterruptHandler
  9110  05BA                     _IOCAF0_DefaultInterruptHandler:	
  9111                           
  9112                           ;incstack = 0
  9113                           ; Regs used in _IOCAF0_DefaultInterruptHandler: []
  9114  05BA  0008               	return
  9115  05BB                     __end_of_IOCAF0_DefaultInterruptHandler:	
  9116                           
  9117                           	psect	text81
  9118  05BB                     __ptext81:	
  9119 ;; *************** function _buttonHandler *****************
  9120 ;; Defined at:
  9121 ;;		line 119 in file "aj_hal.c"
  9122 ;; Parameters:    Size  Location     Type
  9123 ;;		None
  9124 ;; Auto vars:     Size  Location     Type
  9125 ;;		None
  9126 ;; Return value:  Size  Location     Type
  9127 ;;                  1    wreg      void 
  9128 ;; Registers used:
  9129 ;;		None
  9130 ;; Tracked objects:
  9131 ;;		On entry : 1F/0
  9132 ;;		On exit  : 1F/0
  9133 ;;		Unchanged: 1F/0
  9134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9135 ;;      Params:         0       0       0       0
  9136 ;;      Locals:         0       0       0       0
  9137 ;;      Temps:          0       0       0       0
  9138 ;;      Totals:         0       0       0       0
  9139 ;;Total ram usage:        0 bytes
  9140 ;; Hardware stack levels used:    1
  9141 ;; This function calls:
  9142 ;;		Nothing
  9143 ;; This function is called by:
  9144 ;;		_IOCAF0_ISR
  9145 ;; This function uses a non-reentrant model
  9146 ;;
  9147                           
  9148                           
  9149                           ;psect for function _buttonHandler
  9150  05BB                     _buttonHandler:	
  9151                           
  9152                           ;aj_hal.c: 121:     if(0) {
  9153                           
  9154                           ;incstack = 0
  9155                           ; Regs used in _buttonHandler: []
  9156  05BB  0008               	return
  9157  05BC                     __end_of_buttonHandler:	
  9158  007E                     btemp	set	126	;btemp
  9159  007E                     int$flags	set	126
  9160  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         8
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     30      44
    BANK1            60      0       0
    BANK2             0      0       0

Pointer List with Targets:

    checkButtons@buttons	PTR _Bool  size(1) Largest target is 3
		 -> buttons(BANK0[3]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    IOCAF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> connectHandler(), IOCAF5_DefaultInterruptHandler(), 

    IOCAF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> connectHandler(), Absolute function(), IOCAF5_DefaultInterruptHandler(), 

    IOCAF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> buttonHandler(), IOCAF0_DefaultInterruptHandler(), 

    IOCAF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> buttonHandler(), Absolute function(), IOCAF0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _IOCAF5_ISR->_connectHandler
    _connectHandler->i1_setLEDs
    i1_setLEDs->i1_PWM1_DutyCycleSet
    i1_setLEDs->i1_PWM2_DutyCycleSet
    i1_setLEDs->i1_PWM3_DutyCycleSet

Critical Paths under _main in BANK0

    _main->_game_check_it
    _setupLEDs->_setLEDs
    _machine_notify_user->_setLEDs
    _game_check_it->_game_initialise
    _machine_warn_user->_setLEDs
    _game_initialise->_rand
    _rand->___lmul
    _new_level->_machine_led_flash
    _machine_led_flash->_setLED
    _flashValue->_flashit
    _flashValue->_setLEDs
    _setLEDs->_PWM1_DutyCycleSet
    _setLEDs->_PWM2_DutyCycleSet
    _setLEDs->_PWM3_DutyCycleSet
    _flashit->_setLED
    _setLED->_PWM1_DutyCycleSet
    _setLED->_PWM2_DutyCycleSet
    _setLED->_PWM3_DutyCycleSet
    _checkButtons->_ADC1_GetConversion
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF5_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   24942
                                             26 BANK0      4     4      0
                  _SYSTEM_Initialize
                       _checkButtons
                         _flashValue
                      _game_check_it
                    _game_initialise
                      _game_topscore
                _machine_notify_user
                  _machine_warn_user
                             _setLED
                          _setupLEDs
 ---------------------------------------------------------------------------------
 (1) _setupLEDs                                            2     0      2    3232
                                              8 BANK0      2     0      2
                     _PWM1_PeriodSet
                      _PWM1_PhaseSet
                     _PWM2_PeriodSet
                      _PWM2_PhaseSet
                     _PWM3_PeriodSet
                      _PWM3_PhaseSet
                            _setLEDs
                           _stopLEDs
 ---------------------------------------------------------------------------------
 (2) _stopLEDs                                             0     0      0       0
                          _PWM1_Stop
                          _PWM2_Stop
                          _PWM3_Stop
 ---------------------------------------------------------------------------------
 (3) _PWM3_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM1_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_PhaseSet                                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM3_PeriodSet                                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_PhaseSet                                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_PeriodSet                                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_PhaseSet                                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_PeriodSet                                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _machine_notify_user                                  7     7      0    2789
                                              8 BANK0      7     7      0
                             ___wmul
                            _setLEDs
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _game_topscore                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _game_check_it                                        3     3      0    6308
                                             23 BANK0      3     3      0
                    _game_initialise
                  _machine_warn_user
                          _new_level
 ---------------------------------------------------------------------------------
 (1) _machine_warn_user                                    2     2      0    2410
                                              8 BANK0      2     2      0
                            _setLEDs
 ---------------------------------------------------------------------------------
 (1) _game_initialise                                      5     5      0    2126
                                             18 BANK0      5     5      0
                          _new_level
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     244
                                             12 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _new_level                                            1     1      0    1725
                                              7 BANK0      1     1      0
                  _machine_led_flash
 ---------------------------------------------------------------------------------
 (3) _machine_led_flash                                    2     2      0    1679
                                              5 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _flashValue                                           2     2      0    5097
                                              8 BANK0      2     2      0
                            ___lbdiv
                            ___lbmod
                            _flashit
                            _setLEDs
 ---------------------------------------------------------------------------------
 (2) _setLEDs                                              6     0      6    2364
                                              2 BANK0      6     0      6
                  _PWM1_DutyCycleSet
                 _PWM1_LoadBufferSet
                  _PWM2_DutyCycleSet
                 _PWM2_LoadBufferSet
                  _PWM3_DutyCycleSet
                 _PWM3_LoadBufferSet
                          _startLEDs
 ---------------------------------------------------------------------------------
 (3) _startLEDs                                            0     0      0       0
                         _PWM1_Start
                         _PWM2_Start
                         _PWM3_Start
 ---------------------------------------------------------------------------------
 (4) _PWM3_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PWM2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flashit                                              3     2      1    1930
                                              5 BANK0      3     2      1
                            ___lbdiv (ARG)
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _setLED                                               3     0      3    1635
                                              2 BANK0      3     0      3
                  _PWM1_DutyCycleSet
                 _PWM1_LoadBufferSet
                  _PWM2_DutyCycleSet
                 _PWM2_LoadBufferSet
                  _PWM3_DutyCycleSet
                 _PWM3_LoadBufferSet
 ---------------------------------------------------------------------------------
 (3) _PWM3_LoadBufferSet                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM3_DutyCycleSet                                    2     0      2     197
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM2_LoadBufferSet                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM2_DutyCycleSet                                    2     0      2     197
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM1_LoadBufferSet                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM1_DutyCycleSet                                    2     0      2     197
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              5     4      1     311
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     314
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _checkButtons                                         5     5      0     808
                                              4 BANK0      5     5      0
                 _ADC1_GetConversion
                      _disableSerial
 ---------------------------------------------------------------------------------
 (2) _disableSerial                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_GetConversion                                   4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     420
                    _ADC1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     322
         _IOCAF0_SetInterruptHandler
         _IOCAF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF5_SetInterruptHandler                           2     0      2     161
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCAF0_SetInterruptHandler                           2     0      2     161
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0     625
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0     229
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (9) _TMR1_WriteTimer                                      2     0      2     229
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (9) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _PIN_MANAGER_IOC                                      0     0      0     396
                         _IOCAF0_ISR
                         _IOCAF5_ISR
 ---------------------------------------------------------------------------------
 (9) _IOCAF5_ISR                                           0     0      0     396
                   Absolute function *
     _IOCAF5_DefaultInterruptHandler *
                     _connectHandler *
 ---------------------------------------------------------------------------------
 (10) _connectHandler                                      1     1      0     396
                                              8 COMMON     1     1      0
                       _EUSART_Write
                  _EUSART_is_tx_done
                 _EUSART_is_tx_ready
                       _enableSerial
                    i1_disableSerial
                          i1_setLEDs
 ---------------------------------------------------------------------------------
 (11) i1_setLEDs                                           6     0      6     357
                                              2 COMMON     6     0      6
                i1_PWM1_DutyCycleSet
               i1_PWM1_LoadBufferSet
                i1_PWM2_DutyCycleSet
               i1_PWM2_LoadBufferSet
                i1_PWM3_DutyCycleSet
               i1_PWM3_LoadBufferSet
                        i1_startLEDs
 ---------------------------------------------------------------------------------
 (12) i1_startLEDs                                         0     0      0       0
                       i1_PWM1_Start
                       i1_PWM2_Start
                       i1_PWM3_Start
 ---------------------------------------------------------------------------------
 (13) i1_PWM3_Start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_PWM2_Start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_PWM1_Start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i1_PWM3_LoadBufferSet                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i1_PWM3_DutyCycleSet                                 2     0      2      71
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) i1_PWM2_LoadBufferSet                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i1_PWM2_DutyCycleSet                                 2     0      2      71
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) i1_PWM1_LoadBufferSet                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i1_PWM1_DutyCycleSet                                 2     0      2      71
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) i1_disableSerial                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _enableSerial                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_is_tx_ready                                  1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _EUSART_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Write                                        1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _IOCAF5_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IOCAF0_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF0_DefaultInterruptHandler *
                      _buttonHandler *
 ---------------------------------------------------------------------------------
 (10) _buttonHandler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _IOCAF0_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF0_SetInterruptHandler
       _IOCAF5_SetInterruptHandler
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _checkButtons
     _ADC1_GetConversion
     _disableSerial
   _flashValue
     ___lbdiv
     ___lbmod
     _flashit
       ___lbdiv (ARG)
       _setLED (ARG)
         _PWM1_DutyCycleSet
         _PWM1_LoadBufferSet
         _PWM2_DutyCycleSet
         _PWM2_LoadBufferSet
         _PWM3_DutyCycleSet
         _PWM3_LoadBufferSet
     _setLEDs
       _PWM1_DutyCycleSet
       _PWM1_LoadBufferSet
       _PWM2_DutyCycleSet
       _PWM2_LoadBufferSet
       _PWM3_DutyCycleSet
       _PWM3_LoadBufferSet
       _startLEDs
         _PWM1_Start
         _PWM2_Start
         _PWM3_Start
   _game_check_it
     _game_initialise
       _new_level
         _machine_led_flash
           _setLED
             _PWM1_DutyCycleSet
             _PWM1_LoadBufferSet
             _PWM2_DutyCycleSet
             _PWM2_LoadBufferSet
             _PWM3_DutyCycleSet
             _PWM3_LoadBufferSet
       _rand
         ___lmul
     _machine_warn_user
       _setLEDs
         _PWM1_DutyCycleSet
         _PWM1_LoadBufferSet
         _PWM2_DutyCycleSet
         _PWM2_LoadBufferSet
         _PWM3_DutyCycleSet
         _PWM3_LoadBufferSet
         _startLEDs
           _PWM1_Start
           _PWM2_Start
           _PWM3_Start
     _new_level
       _machine_led_flash
         _setLED
           _PWM1_DutyCycleSet
           _PWM1_LoadBufferSet
           _PWM2_DutyCycleSet
           _PWM2_LoadBufferSet
           _PWM3_DutyCycleSet
           _PWM3_LoadBufferSet
   _game_initialise
     _new_level
       _machine_led_flash
         _setLED
           _PWM1_DutyCycleSet
           _PWM1_LoadBufferSet
           _PWM2_DutyCycleSet
           _PWM2_LoadBufferSet
           _PWM3_DutyCycleSet
           _PWM3_LoadBufferSet
     _rand
       ___lmul
   _game_topscore
   _machine_notify_user
     ___wmul
     _setLEDs
       _PWM1_DutyCycleSet
       _PWM1_LoadBufferSet
       _PWM2_DutyCycleSet
       _PWM2_LoadBufferSet
       _PWM3_DutyCycleSet
       _PWM3_LoadBufferSet
       _startLEDs
         _PWM1_Start
         _PWM2_Start
         _PWM3_Start
   _machine_warn_user
     _setLEDs
       _PWM1_DutyCycleSet
       _PWM1_LoadBufferSet
       _PWM2_DutyCycleSet
       _PWM2_LoadBufferSet
       _PWM3_DutyCycleSet
       _PWM3_LoadBufferSet
       _startLEDs
         _PWM1_Start
         _PWM2_Start
         _PWM3_Start
   _setLED
     _PWM1_DutyCycleSet
     _PWM1_LoadBufferSet
     _PWM2_DutyCycleSet
     _PWM2_LoadBufferSet
     _PWM3_DutyCycleSet
     _PWM3_LoadBufferSet
   _setupLEDs
     _PWM1_PeriodSet
     _PWM1_PhaseSet
     _PWM2_PeriodSet
     _PWM2_PhaseSet
     _PWM3_PeriodSet
     _PWM3_PhaseSet
     _setLEDs
       _PWM1_DutyCycleSet
       _PWM1_LoadBufferSet
       _PWM2_DutyCycleSet
       _PWM2_LoadBufferSet
       _PWM3_DutyCycleSet
       _PWM3_LoadBufferSet
       _startLEDs
         _PWM1_Start
         _PWM2_Start
         _PWM3_Start
     _stopLEDs
       _PWM1_Stop
       _PWM2_Stop
       _PWM3_Stop

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF0_ISR
       Absolute function(Fake) *
       _IOCAF0_DefaultInterruptHandler *
       _buttonHandler *
     _IOCAF5_ISR
       Absolute function(Fake) *
       _IOCAF5_DefaultInterruptHandler *
       _connectHandler *
         _EUSART_Write
         _EUSART_is_tx_done
         _EUSART_is_tx_ready
         _enableSerial
         i1_disableSerial
         i1_setLEDs
           i1_PWM1_DutyCycleSet
           i1_PWM1_LoadBufferSet
           i1_PWM2_DutyCycleSet
           i1_PWM2_LoadBufferSet
           i1_PWM3_DutyCycleSet
           i1_PWM3_LoadBufferSet
           i1_startLEDs
             i1_PWM1_Start
             i1_PWM2_Start
             i1_PWM3_Start
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      39       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1E      2C       6       55.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               3C      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK2                0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      39      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Dec 16 11:01:12 2018

                      __end_of_checkButtons 00CA                         ??_PWM3_DutyCycleSet 0022  
                               __CFG_CP$OFF 0000                                          PL2 0290  
                                        PL4 017F                                          PL6 00CA  
                                        PL8 03BD                 __end_of_machine_notify_user 017F  
                       ___wmul@multiplicand 0022                         __end_ofi1_startLEDs 058A  
                __end_of_ADC1_GetConversion 038D                                         PL10 00D1  
                                       PL12 00D6                                         l268 0380  
                                       l843 02C4                                         l867 02ED  
                           _timer1ReloadVal 0079                                __CFG_BORV$LO 0000  
                                       wreg 0009          __end_of_IOCAF5_SetInterruptHandler 056E  
                _IOCAF5_SetInterruptHandler 0569                  __size_of_PWM2_DutyCycleSet 0008  
                              __CFG_LVP$OFF 0000                   __end_of_PWM3_DutyCycleSet 0522  
                                      l2021 05AA                                        l2017 05AC  
                                      l2025 05A8                                        l2041 0397  
                                      l2033 05A4                                        l2113 040B  
                                      l1067 03E7                                        l2109 05A0  
                                      l2047 03A1                                        l2163 03B0  
                                      l2083 02F7                                        l2413 03E2  
                                      l2173 03B3                                        l2511 0076  
                                      l2423 03EF                                        l2159 03A9  
                                      l2521 007F                                        l2513 0078  
                                      l2337 0202                                        l2515 006E  
                                      l2507 005F                                        l2427 03F2  
                                      l2443 03D8                                        l2435 03C8  
                                      l2363 027C                                        l2541 00B9  
                                      l2525 009B                                        l2357 026C  
                                      l2349 0268                                        l2613 0362  
                                      l2605 035B                                        l2535 00A4  
                                      l2527 009D                                        l2289 04B8  
                                      l2529 008E                                        l2609 035E  
                                      l2393 0423                                        l2491 003C  
                                      l2563 0145                                        l2635 00E3  
                                      l2397 0429                                        l2557 0143  
                                      l2661 0107                                        l2645 00EF  
                                      l2637 00E5                                        l2647 00F0  
                                      l2585 01EA                                        l2681 011F  
                                      l2673 0115                                        l2589 01FA  
                                      l2685 0129                                        l2677 011A  
                                      l2669 0110                                        l2695 0135  
                   __end_of_PWM1_Initialize 045E                                        u1005 025D  
                                      _LATA 010C                                        u1175 03CB  
                                      u1707 021F                                        u1717 022E  
                                      u1727 033C                                        u1737 034B  
                                      u1747 01D1                                        u1667 00F7  
                                      u1757 02D2                                        u1677 0179  
                                      u1767 02E1                                        u1687 036A  
                                      u1777 0032                                        u1697 0213  
                                      u1787 053B                       ?i1_PWM1_LoadBufferSet 0070  
                                      _WPUA 020C                                __CFG_WRT$OFF 0000  
                              flashit@flash 0025                                        _main 00DA  
                                      _rand 0234                                        _seed 003F  
                                      fsr0h 0005                                        fsr1h 0007  
                                      indf0 0000                                        fsr0l 0004  
                                      indf1 0001                                        fsr1l 0006  
                                      btemp 007E                               __CFG_BOREN$ON 0000  
             __size_ofi1_PWM3_LoadBufferSet 0002                                        start 0016  
                ??_TMR1_SetInterruptHandler 0022                             ?_connectHandler 0070  
                   __end_ofi1_disableSerial 055D                         i1_PWM1_DutyCycleSet 057D  
                   __end_of_PWM2_Initialize 0485                               ?_EUSART_Write 0070  
                       __size_of_IOCAF0_ISR 000D              __size_of_OSCILLATOR_Initialize 0007  
                       __size_of_IOCAF5_ISR 000C                __end_ofi1_PWM2_LoadBufferSet 05B6  
             __end_of_OSCILLATOR_Initialize 0548                                       ?_main 0070  
                                     ?_rand 002C                             __end_of___lbdiv 03F4  
                             __CFG_WDTE$OFF 0000                             __end_of___lbmod 03DC  
                                     _T1CON 0018                                       i1l147 0533  
                                     i1l455 0014                                       i1l449 000B  
                                     i1l725 01C7                                       _RCSTA 019D  
                                     _TMR1H 0017                                       _TMR1L 0016  
                      machine_led_flash@led 0026                                       _TRISA 008C  
                                     _TXREG 019A                                       _TXSTA 019E  
                       ___lmul@multiplicand 0024                             __end_of_flashit 02E9  
                          __end_of_TMR1_ISR 054F                                 ?_PWM1_Start 0070  
                               ?_PWM2_Start 0070                          __size_of_PWM1_Stop 0003  
                        __size_of_PWM2_Stop 0002                                 ?_PWM3_Start 0070  
                             flashit@colour 0027                     __end_of_PIN_MANAGER_IOC 0556  
                        __size_of_PWM3_Stop 0002                              _WDT_Initialize 0582  
                           __end_of_setLEDs 0421                                       _moves 208C  
                      ?i1_PWM1_DutyCycleSet 0070                     __end_of_PWM3_Initialize 044A  
                   __end_of_TMR1_Initialize 040B                                       pclath 000A  
              __size_ofi1_PWM3_DutyCycleSet 0005                          main@button_pressed 003D  
                                     status 0003                                       wtemp0 007E  
                           ___lbdiv@divisor 0020                             _TMR1_WriteTimer 0485  
                           ___lbdiv@counter 0022                             flashValue@times 0029  
           PWM3_DutyCycleSet@dutyCycleCount 0020           i1PWM3_DutyCycleSet@dutyCycleCount 0070  
                            __CFG_MCLRE$OFF 0000                             __initialization 0017  
                               i1_startLEDs 0586                                __end_of_main 0141  
                              __end_of_rand 0268                          __size_ofi1_setLEDs 0014  
                            ??_EUSART_Write 0070                 ?_INTERRUPT_InterruptManager 0070  
                      __end_of_enableSerial 0564                                      ??_main 003A  
                                    ??_rand 002E                              __CFG_PLLEN$OFF 0000  
                    __end_of_WDT_Initialize 0586                ??_IOCAF0_SetInterruptHandler 0022  
                                    _ADCON0 009D                                      _ADCON1 009E  
                                    _ADCON2 009F                       ??i1_PWM1_DutyCycleSet 0072  
                __size_of_PWM3_DutyCycleSet 0008                                      _ADRESH 009C  
                                    _ADRESL 009B                      ??i1_PWM1_LoadBufferSet 0070  
                                    _APFCON 011D                 __size_of_PWM3_LoadBufferSet 0002  
                                    _ANSELA 018C                                      _BORCON 0116  
                                    _T1GCON 0019                     TMR1_WriteTimer@timerVal 0070  
                          ?_PWM1_Initialize 0070                                      i1l2131 01A2  
                                    i1l2143 01B4                                      i1l2135 01A8  
                                    i1l2127 019C                                      i1l2223 04B5  
                                    i1l2217 049D                                      _ODCONA 028C  
                                    i1l2067 04CC                                      i1l2147 01BA  
                                    i1l2139 01AE                                      i1l2219 04AC  
                                    i1l2325 048E                                      i1l2327 04CE  
                                    i1l2453 0553                       __end_of_game_check_it 0370  
                __end_of_EUSART_is_tx_ready 04CE                                      u180_27 01C1  
                                    u181_27 0557                                      u182_27 0560  
                                    u179_27 0197                                      _OSCCON 0099  
                                    _SPBRGH 019C                                      _SPBRGL 019B  
                                    _WDTCON 0097                       __size_of_checkButtons 009C  
                            __CFG_PWRTE$OFF 0000                      __size_of_buttonHandler 0001  
                               setLED@LEDno 0024        __end_of_TMR1_DefaultInterruptHandler 05B9  
     __size_of_TMR1_DefaultInterruptHandler 0001                _TMR1_DefaultInterruptHandler 05B8  
           PWM1_DutyCycleSet@dutyCycleCount 0020           i1PWM1_DutyCycleSet@dutyCycleCount 0070  
                                    ___lmul 02E9                           __end_of_PWM1_Stop 0594  
                         __end_of_PWM2_Stop 05A4                                      ___wmul 0421  
                         __end_of_PWM3_Stop 05A2                                   ??___lbdiv 0021  
                            __CFG_STVREN$ON 0000                         __size_of_PWM1_Start 0003  
                                 ??___lbmod 0021                            ?i1_disableSerial 0070  
                       __size_of_PWM2_Start 0002                         __size_of_PWM3_Start 0002  
                       i1_PWM2_DutyCycleSet 0578                            ?_PWM2_Initialize 0070  
                                    _setLED 038D         __size_of_IOCAF0_SetInterruptHandler 0005  
                             checkButtons@i 0025                    __size_of_ADC1_Initialize 0009  
                                 ??_flashit 0026                       main@waitingForRelease 003C  
                                 ??_setLEDs 0028                  __end_of_PWM2_LoadBufferSet 05AC  
                               setLEDs@led1 0022                                 setLEDs@led2 0024  
                               setLEDs@led3 0026                             ?_WDT_Initialize 0070  
                     __end_of_game_topscore 0597                                _checkButtons 002E  
                          __end_of_stopLEDs 0591    TMR1_SetInterruptHandler@InterruptHandler 0020  
IOCAF5_SetInterruptHandler@InterruptHandler 0020  IOCAF0_SetInterruptHandler@InterruptHandler 0020  
                          ?_PIN_MANAGER_IOC 0070                     __end_of_TMR1_WriteTimer 0493  
                              ??_IOCAF0_ISR 0070                            ___lbdiv@dividend 0021  
                              ??_IOCAF5_ISR 0079                           __end_ofi1_setLEDs 0472  
                      ?i1_PWM2_DutyCycleSet 0070                       __end_of_TMR1_CallBack 04D8  
                          ?_TMR1_Initialize 0070                            ?_PWM3_Initialize 0070  
                         _SYSTEM_Initialize 04D8                             ___lbmod@divisor 0020  
                        _PWM1_LoadBufferSet 05AC                     __end_of__initialization 002B  
                           ___lbmod@counter 0023                        i1_PWM2_LoadBufferSet 05B4  
                        ?_SYSTEM_Initialize 0070                       __end_of_PWM1_PhaseSet 0512  
                       ?_PWM1_LoadBufferSet 0070                          machine_warn_user@j 0029  
                            __pcstackCOMMON 0070                               ?i1_PWM1_Start 0070  
                             ?i1_PWM2_Start 0070                               ?i1_PWM3_Start 0070  
                     __end_of_PWM2_PhaseSet 0502                                __pidataBANK0 0000  
                       ??_SYSTEM_Initialize 0022                                   ?_TMR1_ISR 0070  
             ?_TMR1_DefaultInterruptHandler 0070                       __end_of_PWM3_PhaseSet 04F2  
                   __size_of_PWM1_PeriodSet 0008                                  __end_ofPL2 029A  
                                __end_ofPL4 0186                                  __end_ofPL6 00D1  
                                __end_ofPL8 03C4                            ___lbdiv@quotient 0023  
                        __end_of_IOCAF0_ISR 04A0                     PWM3_PhaseSet@phaseCount 0020  
                        __end_of_IOCAF5_ISR 04B8                               _buttonHandler 05BB  
                            _OPTION_REGbits 0095                   PWM1_PeriodSet@periodCount 0020  
                   __size_of_PWM2_PeriodSet 0008                        ??_PWM1_LoadBufferSet 0020  
               ?_IOCAF5_SetInterruptHandler 0020                   __end_of_SYSTEM_Initialize 04E1  
                     ??i1_PWM2_DutyCycleSet 0072                          _ADC1_GetConversion 0370  
                                __pbssBANK0 003E                    __size_of_game_initialise 0028  
                      __end_of_EUSART_Write 053A                     __size_of_PWM3_PeriodSet 0008  
                     ?i1_PWM2_LoadBufferSet 0070                            ??_connectHandler 0078  
                                __pnvCOMMON 0079            ??_IOCAF5_DefaultInterruptHandler 0070  
           ?_IOCAF5_DefaultInterruptHandler 0070                         ?_ADC1_GetConversion 0020  
                   _IOCAF5_InterruptHandler 007B                              ??i1_PWM1_Start 0070  
                            ??i1_PWM2_Start 0070                                  __pmaintext 00DA  
                            ??i1_PWM3_Start 0070                                  _game_level 004B  
                        __size_of_new_level 0014                       __size_of_enableSerial 0007  
                     __end_of_disableSerial 0541                                     ?___lmul 0020  
                                   ?___wmul 0020                                  ??_TMR1_ISR 0072  
                                __pintentry 0004                                     _BAUDCON 019F  
                                   ?_setLED 0022                              ___lmul@product 0028  
                       i1_PWM3_DutyCycleSet 0573                __end_ofi1_PWM3_LoadBufferSet 05B4  
                            ?_buttonHandler 0070                          __size_of_setupLEDs 0022  
                      ??_ADC1_GetConversion 0022                                  _flashValue 01CB  
              __size_of_machine_notify_user 003E          __end_of_IOCAF0_SetInterruptHandler 0573  
                _IOCAF0_SetInterruptHandler 056E                                     _PWM1DCH 0D94  
                              ??_PWM1_Start 0020                                     _PWM1DCL 0D93  
                                   _PWM2DCH 0DA4                                     _PWM2DCL 0DA3  
                                   _OSCTUNE 0098                                     _PWM3DCH 0DB4  
                                   _PWM3DCL 0DB3                                     _PWM1CON 0D9B  
                                   _PWM2CON 0DAB                                     _PWM3CON 0DBB  
                                   _PWM1OFH 0D98                                     _PWM1OFL 0D97  
                        __size_of_startLEDs 0003                                     _PWM1PHH 0D92  
                                   _PWM2OFH 0DA8                                     _PWM1PHL 0D91  
                                   _PWM2OFL 0DA7                                ??_PWM2_Start 0020  
                                   _PWM2PHH 0DA2                                     _PWM3OFH 0DB8  
                                   _PWM2PHL 0DA1                                     _PWM3OFL 0DB7  
                                   _PWM3PHH 0DB2                                     _PWM1PRH 0D96  
                                   _PWM3PHL 0DB1                                     _PWM1PRL 0D95  
                                   _PWM2PRH 0DA6                                     _PWM2PRL 0DA5  
                                   _PWM3PRH 0DB6                                     _PWM3PRL 0DB5  
                                   _SLRCONA 030C                                ??_PWM3_Start 0020  
                         ??_ADC1_Initialize 0020                            ?_TMR1_WriteTimer 0070  
                      ?i1_PWM3_DutyCycleSet 0070                                _enableSerial 055D  
                              ?i1_startLEDs 0070                                     ___lbdiv 03DC  
                           __size_of___lmul 0025                                     ___lbmod 03C4  
                           __size_of___wmul 0015                                   ?_stopLEDs 0070  
                        __end_of_PWM1_Start 059D                          __end_of_PWM2_Start 05A8  
                        __end_of_PWM3_Start 05A6                             __size_of_setLED 001C  
                                   __ptext1 030E                                     __ptext2 058E  
                                   __ptext3 05A0                                     __ptext4 05A2  
                                   __ptext5 0591                                     __ptext6 04EA  
                                   __ptext7 04F2                                     __ptext8 04FA  
                                   __ptext9 0502                                     _flashit 02C3  
            ??_TMR1_DefaultInterruptHandler 0070                                   _T1CONbits 0018  
                     _OSCILLATOR_Initialize 0541                                     _buttons 0043  
                                   _setLEDs 040B           __size_of_TMR1_SetInterruptHandler 0005  
                  ??_PIN_MANAGER_Initialize 0022                   ?_TMR1_SetInterruptHandler 0020  
                                 _IOCAFbits 0393                                   _IOCANbits 0392  
                                 _IOCAPbits 0391                           __end_of_new_level 03BD  
                __size_of_SYSTEM_Initialize 0009                                     clrloop0 04A1  
                      end_of_initialization 002B                       ??i1_PWM3_DutyCycleSet 0072  
                    ??i1_PWM2_LoadBufferSet 0070                           _EUSART_Initialize 04B8  
                         __end_of_setupLEDs 0330                           ??_game_initialise 0032  
                        ?_EUSART_Initialize 0070                                   _RCSTAbits 019D  
                         __end_of_startLEDs 059A                                   _PWM1LDCON 0D9F  
                                 _PWM2LDCON 0DAF                          _EUSART_is_tx_ready 04C3  
                                 _PWM1OFCON 0DA0                                   _PWM3LDCON 0DBF  
                                 _PWM2OFCON 0DB0                                   _PWM3OFCON 0DC0  
                                ??_stopLEDs 0020                              _PWM1_PeriodSet 0512  
                           ??_buttonHandler 0070                         ??_EUSART_Initialize 0020  
                          ??_WDT_Initialize 0020                                   _PWM1_Stop 0591  
                                 _PORTAbits 000C                                   _PWM2_Stop 05A2  
                                 _PWM3_Stop 05A0                         ?_EUSART_is_tx_ready 0070  
               __end_ofi1_PWM1_DutyCycleSet 0582                                 ?_flashValue 0070  
                   _IOCAF0_InterruptHandler 0048                            __CFG_FOSC$INTOSC 0000  
                            _PWM2_PeriodSet 0502                            ___lbmod@dividend 0022  
                __end_of_PWM3_LoadBufferSet 05AA                       __size_of_EUSART_Write 0008  
                      __end_ofi1_PWM1_Start 05A0                        __end_ofi1_PWM2_Start 05B2  
                      __end_ofi1_PWM3_Start 05B0                              _PWM3_PeriodSet 04F2  
             __size_ofi1_PWM1_LoadBufferSet 0002                                 ___lbmod@rem 0024  
                 __end_of_EUSART_Initialize 04C3                          _PWM2_LoadBufferSet 05AA  
                      ??_EUSART_is_tx_ready 0070                                   _TXSTAbits 019E  
                                 i1_setLEDs 045E                        i1_PWM3_LoadBufferSet 05B2  
                 ADC1_GetConversion@channel 0023                    __size_of_PWM1_Initialize 0014  
                    __end_of_PWM1_PeriodSet 051A                         ?_PWM2_LoadBufferSet 0070  
                            __end_of___lmul 030E                              __end_of___wmul 0436  
                              _EUSART_Write 0532                           __size_of_TMR1_ISR 0007  
                                ?_PWM1_Stop 0070                                  ?_PWM2_Stop 0070  
                                ?_PWM3_Stop 0070                      __size_of_game_check_it 001F  
                    ?_OSCILLATOR_Initialize 0070                              __end_of_setLED 03A9  
                    __end_of_PWM2_PeriodSet 050A                    __size_ofi1_disableSerial 0007  
                               __end_ofPL10 00D6                                 __end_ofPL12 00DA  
                       start_initialization 0017                    __size_of_PWM2_Initialize 0013  
           __size_of_PIN_MANAGER_Initialize 0029                        ??_PWM2_LoadBufferSet 0020  
                    __end_of_PWM3_PeriodSet 04FA                               _PWM1LDCONbits 0D9F  
                    _EUSART_is_tx_ready$373 0070                               _PWM2LDCONbits 0DAF  
                          game_check_it@led 0038                               _PWM3LDCONbits 0DBF  
                     ?i1_PWM3_LoadBufferSet 0070                                  ?i1_setLEDs 0072  
                  __size_of_PIN_MANAGER_IOC 0007                           _machine_led_flash 0330  
                       _machine_notify_user 0141                         __size_of_flashValue 0035  
                          __CFG_LPBOREN$OFF 0000                    __size_of_PWM3_Initialize 0014  
                  __size_of_TMR1_Initialize 0017                          ?_machine_led_flash 0070  
                           ?_PWM1_PeriodSet 0020                                    ??___lmul 0028  
                                  ??___wmul 0024                      __size_of_game_topscore 0003  
                                setLED@duty 0022                        __size_ofi1_startLEDs 0004  
                      main@waitingForButton 003B                                 __pdataBANK0 004A  
                                  ??_setLED 0025                             _ADC1_Initialize 04E1  
          ??_IOCAF0_DefaultInterruptHandler 0070             ?_IOCAF0_DefaultInterruptHandler 0070  
                    __size_of_TMR1_CallBack 000A                     PWM1_PhaseSet@phaseCount 0020  
                       ??_machine_led_flash 0025      __end_of_IOCAF5_DefaultInterruptHandler 05BA  
   __size_of_IOCAF5_DefaultInterruptHandler 0001              _IOCAF5_DefaultInterruptHandler 05B9  
                           ?_PWM2_PeriodSet 0020                                 __pbssBIGRAM 208C  
               __end_ofi1_PWM2_DutyCycleSet 057D                        ?_machine_notify_user 0070  
                                 ___latbits 0000                   PWM2_PeriodSet@periodCount 0020  
               ?_IOCAF0_SetInterruptHandler 0020                               __pcstackBANK0 0020  
               __size_of_PWM1_LoadBufferSet 0002                      __size_of_PWM1_PhaseSet 0008  
                           ?_PWM3_PeriodSet 0020                      __size_of_PWM2_PhaseSet 0008  
                                new_level@j 0027                  __size_of_EUSART_Initialize 000B  
                             _game_check_it 0351                      __size_of_PWM3_PhaseSet 0008  
                 __end_of_machine_led_flash 0351                             setupLEDs@period 0028  
                         _machine_warn_user 0200                                   __pnvBANK0 0046  
                        ?_machine_warn_user 0070                      _PIN_MANAGER_Initialize 029A  
           PWM2_DutyCycleSet@dutyCycleCount 0020           i1PWM2_DutyCycleSet@dutyCycleCount 0070  
                       game_check_it@result 0039            __end_of_TMR1_SetInterruptHandler 0569  
                                  ?___lbdiv 0020                                    ?___lbmod 0020  
                       ??_machine_warn_user 0028                           ??_PWM1_Initialize 0020  
              ??_INTERRUPT_InterruptManager 0079                                 ??_PWM1_Stop 0020  
                               ??_PWM2_Stop 0020                                 ??_PWM3_Stop 0020  
                         __size_of_stopLEDs 0003                                    ?_flashit 0025  
                     __size_ofi1_PWM1_Start 0003                       __size_ofi1_PWM2_Start 0002  
                     __size_ofi1_PWM3_Start 0002                       ??_machine_notify_user 0028  
                                  ?_setLEDs 0022                 __size_of_ADC1_GetConversion 001D  
                             _game_topscore 0594                             _game_initialise 0268  
                    __size_of_disableSerial 0007                           _PWM1_DutyCycleSet 052A  
                         ??i1_disableSerial 0070                              ?_game_check_it 0070  
                 __end_of_machine_warn_user 0234                                   _new_level 03A9  
                             _TMR1_CallBack 04CE                      ??i1_PWM3_LoadBufferSet 0070  
                         ??_PWM2_Initialize 0020                          ?_PWM1_DutyCycleSet 0020  
                            ___wmul@product 0024                                 ??i1_setLEDs 0078  
                                 clear_ram0 04A0                                    _PIE1bits 0091  
                  __size_of_TMR1_WriteTimer 000E         __size_of_INTERRUPT_InterruptManager 0012  
                   __end_of_ADC1_Initialize 04EA                                    _PIR1bits 0011  
                             _PWM1_PhaseSet 050A                         ??_PWM1_DutyCycleSet 0022  
                         _EUSART_is_tx_done 058A                                    _PWM1INTE 0D9C  
                                  _PWM1INTF 0D9D                                    _PWM2INTE 0DAC  
                                  _PWM2INTF 0DAD                                    _PWM3INTE 0DBC  
                              i1_PWM1_Start 059D                                    _PWM3INTF 0DBD  
                                  _PWM1TMRH 0D9A                                    _PWM1TMRL 0D99  
                              i1_PWM2_Start 05B0                                    _PWM2TMRH 0DAA  
                                 _setupLEDs 030E                                    _PWM2TMRL 0DA9  
                                  _PWM3TMRH 0DBA                                    _PWM3TMRL 0DB9  
                              i1_PWM3_Start 05AE                                    _TMR1_ISR 0548  
                             _PWM2_PhaseSet 04FA                           ??_PIN_MANAGER_IOC 0079  
                        ?_EUSART_is_tx_done 0070                     __size_of_connectHandler 0045  
                                 _startLEDs 0597                               _PWM3_PhaseSet 04EA  
                         ??_TMR1_Initialize 0022                           ??_PWM3_Initialize 0020  
                                _ADCON0bits 009D                           ___wmul@multiplier 0020  
                                 _top_score 004A                                ??_flashValue 0028  
                       ??_EUSART_is_tx_done 0070                 __end_ofi1_PWM3_DutyCycleSet 0578  
                             i1setLEDs@led1 0072                               i1setLEDs@led2 0074  
                             i1setLEDs@led3 0076                              ?_game_topscore 0070  
                             ?_checkButtons 0070                   __end_of_PWM1_DutyCycleSet 0532  
                         ___lmul@multiplier 0020                              ?_TMR1_CallBack 0070  
                                ?_new_level 0070               __size_ofi1_PWM2_LoadBufferSet 0002  
                __size_of_machine_led_flash 0021                          _PWM3_LoadBufferSet 05A8  
                 __end_of_EUSART_is_tx_done 058E                              ?_PWM1_PhaseSet 0020  
                        __end_of_flashValue 0200                                  ?_setupLEDs 0028  
                            ?_PWM2_PhaseSet 0020                  game_initialise@randomThree 0034  
                             _disableSerial 053A                         ?_PWM3_LoadBufferSet 0070  
                   ??_OSCILLATOR_Initialize 0020                            __size_of___lbdiv 0018  
              __end_ofi1_PWM1_LoadBufferSet 05B8                            __size_of___lbmod 0018  
                            ?_PWM3_PhaseSet 0020                                  ?_startLEDs 0070  
                  _TMR1_SetInterruptHandler 0564                       __end_of_buttonHandler 05BC  
                     _TMR1_InterruptHandler 0046                      machine_notify_user@val 002B  
                          __size_of_flashit 0026                     __end_of_game_initialise 0290  
                            ??_checkButtons 0024                            __size_of_setLEDs 0016  
                                  __ptext10 050A                                    __ptext11 0512  
                                  __ptext20 03A9                                    __ptext12 0141  
                                  __ptext21 0330                                    __ptext13 0421  
                                  __ptext30 05A8                                    __ptext22 01CB  
                                  __ptext14 0594                                    __ptext31 051A  
                                  __ptext23 040B                                    __ptext15 0351  
                                  __ptext40 0370                                    __ptext32 05AA  
                                  __ptext24 0597                                    __ptext16 0200  
                                  __ptext41 04D8                                    __ptext33 0522  
                                  __ptext25 05A4                                    __ptext17 0268  
                                  __ptext50 056E                                    __ptext42 0582  
                                  __ptext34 05AC                                    __ptext26 05A6  
                                  __ptext18 0234                                    __ptext51 0541  
                                  __ptext43 03F4                                    __ptext35 052A  
                                  __ptext27 059A                                    __ptext19 02E9  
                                  __ptext60 04AC                                    __ptext52 04B8  
                                  __ptext44 0564                                    __ptext36 03C4  
                                  __ptext28 02C3                                    __ptext61 05B9  
                                  __ptext53 04E1                                    __ptext45 0436  
                                  __ptext37 03DC                                    __ptext29 038D  
                                  __ptext70 05B4                                    __ptext62 0186  
                                  __ptext46 0472                                    __ptext38 002E  
                                  __ptext71 0578                                    __ptext63 045E  
                                  __ptext55 0548                                    __ptext47 044A  
                                  __ptext39 053A                                    __ptext80 05BA  
                                  __ptext72 05B6                                    __ptext64 0586  
                                  __ptext56 0485                                    __ptext48 029A  
                                  __ptext81 05BB                                    __ptext73 057D  
                                  __ptext65 05AE                                    __ptext57 04CE  
                                  __ptext49 0569                                    __ptext74 0556  
                                  __ptext66 05B0                                    __ptext58 05B8  
                                  __ptext75 055D                                    __ptext67 059D  
                                  __ptext59 054F                                    __ptext76 04C3  
                                  __ptext68 05B2                                    __ptext77 058A  
                                  __ptext69 0573                                    __ptext78 0532  
                                  __ptext79 0493                ??_IOCAF5_SetInterruptHandler 0022  
                      ??_PWM3_LoadBufferSet 0020                             ??_game_check_it 0037  
              __size_ofi1_PWM1_DutyCycleSet 0005                                  _IOCAF0_ISR 0493  
                                _IOCAF5_ISR 04AC                           _PWM2_DutyCycleSet 0522  
                __size_of_machine_warn_user 0034                               __size_of_main 0067  
                             __size_of_rand 0034                          ?_PWM2_DutyCycleSet 0020  
                              _move_current 003E                            ??_PWM1_PeriodSet 0022  
               __size_of_EUSART_is_tx_ready 000B                            ?_ADC1_Initialize 0070  
                           checkButtons@adc 0027                         ??_PWM2_DutyCycleSet 0022  
                            ?_disableSerial 0070                            ??_PWM2_PeriodSet 0022  
                                  int$flags 007E                                    _stopLEDs 058E  
        __end_of_INTERRUPT_InterruptManager 0016                  _INTERRUPT_InterruptManager 0004  
                         ??_TMR1_WriteTimer 0072         __size_of_IOCAF5_SetInterruptHandler 0005  
                          ??_PWM3_PeriodSet 0022                             ??_game_topscore 0020  
                                _INTCONbits 000B                                 _PWM1CONbits 0D9B  
                               _PWM2CONbits 0DAB                                 _PWM3CONbits 0DBB  
                __size_of_PWM1_DutyCycleSet 0008                   __end_of_PWM2_DutyCycleSet 052A  
               __size_of_PWM2_LoadBufferSet 0002                             ??_TMR1_CallBack 0070  
                   __size_of_WDT_Initialize 0004                                    intlevel1 0000  
    __end_of_IOCAF0_DefaultInterruptHandler 05BB     __size_of_IOCAF0_DefaultInterruptHandler 0001  
            _IOCAF0_DefaultInterruptHandler 05BA                                 ??_new_level 0027  
                             ?_enableSerial 0070                         checkButtons@buttons 0026  
                   ?_PIN_MANAGER_Initialize 0070                           __CFG_CLKOUTEN$OFF 0000  
                           ??_PWM1_PhaseSet 0022                             _PWM1_Initialize 044A  
                __size_of_EUSART_is_tx_done 0004                             ??_PWM2_PhaseSet 0022  
                             ??i1_startLEDs 0070                                 ??_setupLEDs 002A  
                           ??_PWM3_PhaseSet 0022                              _connectHandler 0186  
                                _PWM1CLKCON 0D9E                                  _PWM2CLKCON 0DAE  
                                _PWM3CLKCON 0DBE                                 ??_startLEDs 0020  
                   PWM2_PhaseSet@phaseCount 0020                             i1_disableSerial 0556  
                      machine_notify_user@i 0029                        machine_notify_user@j 002D  
                __end_of_PWM1_LoadBufferSet 05AE                            ?_game_initialise 0070  
                           _PWM2_Initialize 0472                   PWM3_PeriodSet@periodCount 0020  
                                _PWM1_Start 059A                                  _PWM2_Start 05A6  
                                _PWM3_Start 05A4                                 ?_IOCAF0_ISR 0070  
                               ?_IOCAF5_ISR 0070                          EUSART_Write@txData 0070  
                            ??_enableSerial 0070                __size_ofi1_PWM2_DutyCycleSet 0005  
            __end_of_PIN_MANAGER_Initialize 02C3                           _PWM3_DutyCycleSet 051A  
                      i1_PWM1_LoadBufferSet 05B6                             _PIN_MANAGER_IOC 054F  
                        ?_PWM3_DutyCycleSet 0020                            game_initialise@i 0036  
                           _TMR1_Initialize 03F4                             _PWM3_Initialize 0436  
                           ??_disableSerial 0020                      __end_of_connectHandler 01CB  
